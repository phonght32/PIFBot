ARM GAS  /tmp/ccOm33QJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvTaskIsTaskSuspended:
  25              	.LFB15:
  26              		.file 1 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c"
   1:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
   2:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
   5:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * subject to the following conditions:
  11:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
  12:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * copies or substantial portions of the Software.
  14:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
  15:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
  22:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * http://www.FreeRTOS.org
  23:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * http://aws.amazon.com/freertos
  24:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
  25:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * 1 tab == 4 spaces!
  26:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
  27:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  28:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Standard includes. */
  29:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #include <stdlib.h>
  30:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #include <string.h>
  31:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  32:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  /tmp/ccOm33QJ.s 			page 2


  33:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** task.h is included from an application file. */
  35:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  37:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* FreeRTOS includes. */
  38:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #include "FreeRTOS.h"
  39:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #include "task.h"
  40:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #include "timers.h"
  41:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #include "stack_macros.h"
  42:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  43:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  49:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** functions but without including stdio.h here. */
  51:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#include <stdio.h>
  57:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  59:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #else
  64:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
  66:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  67:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  72:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
  73:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
  76:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
  78:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** made to free the RAM that was allocated statically.
  89:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
ARM GAS  /tmp/ccOm33QJ.s 			page 3


  90:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 100:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #else
 106:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 108:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 109:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 110:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 112:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 118:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * global, rather than file scope.
 121:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 122:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define static
 124:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 125:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 126:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 131:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 132:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 134:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	microcontroller architecture. */
 137:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 138:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	state task. */
 140:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{																									\
 142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{																								\
 144:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}																								\
 146:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
ARM GAS  /tmp/ccOm33QJ.s 			page 4


 147:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 148:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/*-----------------------------------------------------------*/
 149:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 150:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{																									\
 152:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 																										\
 154:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{																								\
 157:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			--uxTopPriority;																			\
 159:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}																								\
 160:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 																										\
 161:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 167:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/*-----------------------------------------------------------*/
 168:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 169:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	being used. */
 172:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 175:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 177:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	architecture being used. */
 180:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 181:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 184:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/*-----------------------------------------------------------*/
 185:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 186:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{																								\
 188:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 																									\
 190:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 196:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/*-----------------------------------------------------------*/
 197:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 198:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{																									\
 203:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
ARM GAS  /tmp/ccOm33QJ.s 			page 5


 204:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{																								\
 205:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}																								\
 207:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 208:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 209:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 212:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 213:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** count overflows. */
 215:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {																									\
 217:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	List_t *pxTemp;																					\
 218:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 																									\
 219:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 																									\
 222:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	xNumOfOverflows++;																				\
 226:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 228:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 229:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 230:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 231:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 232:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 235:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 241:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 242:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 243:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 248:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 250:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** to its original value when it is released. */
 258:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #else
ARM GAS  /tmp/ccOm33QJ.s 			page 6


 261:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 263:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 264:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 265:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * (the task's run time environment, including register values)
 268:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 269:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** typedef struct tskTaskControlBlock
 270:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
 271:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 273:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 276:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 277:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 283:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 286:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 287:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 290:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 291:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 295:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 296:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 300:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 301:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 304:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 305:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 308:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 309:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 312:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 313:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
ARM GAS  /tmp/ccOm33QJ.s 			page 7


 318:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		struct	_reent xNewLib_reent;
 322:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 323:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 324:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 328:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 329:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* See the comments above the definition of
 330:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 334:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 335:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uint8_t ucDelayAborted;
 337:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 338:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 339:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** } tskTCB;
 340:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 341:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** typedef tskTCB TCB_t;
 344:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 345:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** which static variables must be declared volatile. */
 347:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 348:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 350:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = {0};	/*< Prioritised read
 352:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = {0};								/*< Delayed tasks. */
 353:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = {0};								/*< Delayed tasks (two lists are used
 354:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;					/*< Points to the delayed ta
 355:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;			/*< Points to the dela
 356:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = {0};								/*< Tasks that have been readied whil
 357:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 358:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 360:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination = {0};					/*< Tasks that have been deleted
 361:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 363:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 364:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 365:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 367:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = {0};						/*< Tasks that are currently suspende
 368:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 369:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 370:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 371:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Other file private variables. --------------------------------*/
 372:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/ccOm33QJ.s 			page 8


 375:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 383:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** accessed from a critical section. */
 391:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 393:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 395:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 398:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 399:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 400:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*lint -restore */
 401:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 402:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 403:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 404:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 407:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 408:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 409:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 410:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	extern void vApplicationTickHook( void );
 411:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 412:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 413:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 414:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 415:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 416:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 417:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* File private functions. --------------------------------*/
 418:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 419:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /**
 420:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 421:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 422:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * is in any other state.
 423:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 424:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 425:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 426:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 427:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 428:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 429:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 430:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 431:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
ARM GAS  /tmp/ccOm33QJ.s 			page 9


 432:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * automatically upon the creation of the first task.
 433:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 434:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 435:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 436:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 437:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 438:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 439:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * creation of the first user task.
 440:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
 441:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 442:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 443:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
 444:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * void prvIdleTask( void *pvParameters );
 445:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
 446:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 447:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 448:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 449:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 450:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 451:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * including the stack pointed to by the TCB.
 452:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
 453:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 454:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 455:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 456:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 457:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 458:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 459:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 460:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 461:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 462:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 463:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 464:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 465:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * and its TCB deleted.
 466:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 467:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 468:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 469:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 470:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 471:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * either the current or the overflow delayed task list.
 472:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 473:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 474:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 475:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 476:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 477:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 478:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * a suspended list, etc.).
 479:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
 480:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 481:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * NORMAL APPLICATION CODE.
 482:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 483:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 484:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 485:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 486:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 487:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 488:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 10


 489:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 490:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 491:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 492:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 493:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 494:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 495:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 496:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 497:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 498:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 499:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 500:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 501:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 502:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * determining how much of the stack remains at the original preset value.
 503:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 504:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 505:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 506:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 507:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 508:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 509:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 510:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 511:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 512:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * next move a task from the Blocked state to the Running state.
 513:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
 514:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 515:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 516:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 517:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * set to a value other than 1.
 518:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 519:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 520:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 521:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 522:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 523:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 524:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 525:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 526:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 527:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * will exit the Blocked state.
 528:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 529:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 530:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 531:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 532:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 533:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/*
 534:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 535:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	 * human readable tables of task information.
 536:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	 */
 537:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 538:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 539:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 540:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 541:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 542:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 543:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * dynamically to fill in the structure's members.
 544:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 545:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
ARM GAS  /tmp/ccOm33QJ.s 			page 11


 546:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 547:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									const uint32_t ulStackDepth,
 548:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									void * const pvParameters,
 549:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									UBaseType_t uxPriority,
 550:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 551:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									TCB_t *pxNewTCB,
 552:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 553:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 554:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 555:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * Called after a new task has been created and initialised to place the task
 556:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * under the control of the scheduler.
 557:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 558:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 559:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
 561:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 562:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 563:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * called by the function.
 564:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
 565:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 566:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 567:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 568:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 569:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif
 570:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 571:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 572:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 573:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 574:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 575:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 576:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 577:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									const uint32_t ulStackDepth,
 578:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									void * const pvParameters,
 579:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									UBaseType_t uxPriority,
 580:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									StackType_t * const puxStackBuffer,
 581:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 582:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 583:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxNewTCB;
 584:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHandle_t xReturn;
 585:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 586:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 587:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 588:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 589:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 590:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 591:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 592:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 593:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			structure. */
 594:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 595:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 596:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 597:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configASSERT_DEFINED */
 598:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 599:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 600:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 602:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
ARM GAS  /tmp/ccOm33QJ.s 			page 12


 603:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			function - use them. */
 604:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 607:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 608:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 609:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 613:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 615:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 618:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
 619:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 620:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = NULL;
 621:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 622:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 623:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
 624:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 625:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 626:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 628:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 629:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 630:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 631:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 632:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 633:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxNewTCB;
 634:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 636:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 637:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 638:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 639:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 640:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 641:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 642:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			on the implementation of the port malloc function and whether or
 643:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			not static allocation is being used. */
 644:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 645:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 646:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Store the stack location in the TCB. */
 647:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 648:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 649:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 650:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 651:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 652:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				task was created statically in case the task is later deleted. */
 653:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 654:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 655:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 656:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 657:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 658:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									pxTaskDefinition->pcName,
 659:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/ccOm33QJ.s 			page 13


 660:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									pxTaskDefinition->pvParameters,
 661:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									pxTaskDefinition->uxPriority,
 662:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									pxCreatedTask, pxNewTCB,
 663:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									pxTaskDefinition->xRegions );
 664:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 665:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 666:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdPASS;
 667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 668:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 669:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
 670:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 671:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 672:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 673:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 674:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 675:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 676:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 677:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 678:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 679:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxNewTCB;
 680:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 681:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 682:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 683:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 684:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 685:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 686:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 687:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			on the implementation of the port malloc function and whether or
 688:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			not static allocation is being used. */
 689:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 690:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 691:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxNewTCB != NULL )
 692:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 693:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Store the stack location in the TCB. */
 694:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 695:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 696:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 697:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 698:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 699:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					this task had a statically allocated stack in case it is
 700:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 701:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 702:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 703:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif
 704:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 705:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 706:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										pxTaskDefinition->pcName,
 707:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 708:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										pxTaskDefinition->pvParameters,
 709:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										pxTaskDefinition->uxPriority,
 710:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										pxCreatedTask, pxNewTCB,
 711:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										pxTaskDefinition->xRegions );
 712:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 713:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 714:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdPASS;
 715:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 716:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
ARM GAS  /tmp/ccOm33QJ.s 			page 14


 717:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 718:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
 719:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 720:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 721:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 722:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 723:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 724:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 725:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 726:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 727:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 728:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 729:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							void * const pvParameters,
 730:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							UBaseType_t uxPriority,
 731:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 732:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 733:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxNewTCB;
 734:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn;
 735:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 736:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 737:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 738:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the TCB then the stack. */
 739:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 740:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 741:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 742:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			the implementation of the port malloc function and whether or not static
 743:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			allocation is being used. */
 744:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 745:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 746:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxNewTCB != NULL )
 747:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 748:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 749:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 750:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				be deleted later if required. */
 751:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 752:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 753:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 754:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 755:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 756:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					vPortFree( pxNewTCB );
 757:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxNewTCB = NULL;
 758:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 759:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 760:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 761:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#else /* portSTACK_GROWTH */
 762:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 763:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		StackType_t *pxStack;
 764:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 765:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 766:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 767:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 768:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxStack != NULL )
 769:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 770:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Allocate space for the TCB. */
 771:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 772:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 773:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxNewTCB != NULL )
ARM GAS  /tmp/ccOm33QJ.s 			page 15


 774:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 775:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Store the stack location in the TCB. */
 776:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 777:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 778:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
 779:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 780:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 781:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					it again. */
 782:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					vPortFree( pxStack );
 783:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 784:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 785:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
 786:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 787:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxNewTCB = NULL;
 788:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 789:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 790:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* portSTACK_GROWTH */
 791:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 792:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxNewTCB != NULL )
 793:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 794:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 795:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 796:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 797:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				task was created dynamically in case it is later deleted. */
 798:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 799:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 800:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 801:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 802:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 803:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 804:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdPASS;
 805:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 806:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
 807:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 808:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 809:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 810:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 811:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
 812:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 813:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 814:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 815:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 816:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 817:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 818:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 819:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									const uint32_t ulStackDepth,
 820:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									void * const pvParameters,
 821:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									UBaseType_t uxPriority,
 822:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 823:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									TCB_t *pxNewTCB,
 824:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 									const MemoryRegion_t * const xRegions )
 825:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
 826:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** StackType_t *pxTopOfStack;
 827:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** UBaseType_t x;
 828:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 829:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 830:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Should the task be created in privileged mode? */
ARM GAS  /tmp/ccOm33QJ.s 			page 16


 831:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		BaseType_t xRunPrivileged;
 832:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 834:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xRunPrivileged = pdTRUE;
 835:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 836:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
 837:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 838:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xRunPrivileged = pdFALSE;
 839:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 840:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 841:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 842:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 843:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 844:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 846:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 847:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 848:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 849:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 851:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 852:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 853:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 854:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	by the port. */
 855:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 856:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 857:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 858:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 859:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 860:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 861:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 862:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 863:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 865:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Also record the stack's high address, which may assist
 866:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			debugging. */
 867:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 869:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 871:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#else /* portSTACK_GROWTH */
 872:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 873:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 874:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 875:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 876:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 877:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 878:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 879:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		performed. */
 880:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 882:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* portSTACK_GROWTH */
 883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 884:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Store the task name in the TCB. */
 885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 886:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 887:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
ARM GAS  /tmp/ccOm33QJ.s 			page 17


 888:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 889:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 891:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		string is not accessible (extremely unlikely). */
 892:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pcName[ x ] == 0x00 )
 893:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 894:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			break;
 895:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 896:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
 897:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 898:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 899:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 900:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 901:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 902:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 903:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 904:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 905:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 906:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 907:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	remove the privilege bit if one is present. */
 908:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 909:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 910:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 911:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 912:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
 913:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 914:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 915:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 916:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 917:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 918:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 919:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 920:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 921:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 922:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 923:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* configUSE_MUTEXES */
 924:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 925:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 926:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 927:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 928:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 929:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 930:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 931:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 932:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Event lists are always in priority order. */
 933:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 934:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 935:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 936:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 937:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 938:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 939:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 940:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 941:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 942:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 943:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 944:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
ARM GAS  /tmp/ccOm33QJ.s 			page 18


 945:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 946:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 947:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 948:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 949:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 950:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 951:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 952:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 953:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 954:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 955:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 956:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 957:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 958:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#else
 959:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 960:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 961:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		( void ) xRegions;
 962:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 963:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 964:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 965:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 966:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 967:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 968:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 969:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 970:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 971:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 972:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 973:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 974:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 975:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 976:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 977:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 978:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 979:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 980:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 981:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 982:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 983:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 984:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 985:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 986:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 987:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 988:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 989:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 990:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 991:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 992:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
 993:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 994:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 995:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 996:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 997:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	the top of stack variable is updated. */
 998:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 999:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1000:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1001:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
ARM GAS  /tmp/ccOm33QJ.s 			page 19


1002:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1003:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1004:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1005:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1006:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1007:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1008:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1009:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1010:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1011:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1012:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1013:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1014:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
1015:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1016:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1017:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1018:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
1019:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1020:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1021:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1022:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
1023:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1024:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	updated. */
1025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskENTER_CRITICAL();
1026:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1027:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxCurrentNumberOfTasks++;
1028:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxCurrentTCB == NULL )
1029:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1030:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1031:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			the suspended state - make this the current task. */
1032:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1033:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1034:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1035:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1036:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* This is the first task to be created so do the preliminary
1037:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				initialisation required.  We will not recover if this call
1038:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				fails, but we will report the failure. */
1039:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvInitialiseTaskLists();
1040:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1041:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1042:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1043:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1044:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1045:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1046:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1047:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1048:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If the scheduler is not already running, make this task the
1049:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			current task if it is the highest priority task to be created
1050:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			so far. */
1051:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1052:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1053:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1054:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1055:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1056:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1057:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1058:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
ARM GAS  /tmp/ccOm33QJ.s 			page 20


1059:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1060:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1061:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1062:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1063:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1064:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1065:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1066:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1067:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1068:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxTaskNumber++;
1069:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1070:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1071:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1072:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1073:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1074:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1075:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1076:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1077:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1078:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1079:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1080:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1081:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1082:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskEXIT_CRITICAL();
1083:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1084:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1085:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1086:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If the created task is of a higher priority than the current task
1087:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		then it should run now. */
1088:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1089:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1090:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1091:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1092:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1093:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1094:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1095:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1096:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1097:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
1098:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1099:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1100:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1101:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
1102:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1103:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1104:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1105:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1106:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1107:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1108:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
1109:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1110:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
1111:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1112:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1113:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			being deleted. */
1114:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1115:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 21


1116:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Remove task from the ready list. */
1117:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1118:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1120:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1121:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1122:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1123:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1124:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1125:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1126:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Is the task waiting on an event also? */
1127:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1128:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1129:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1130:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1131:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1132:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1133:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1134:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1135:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1136:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1137:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1138:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1139:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			not return. */
1140:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxTaskNumber++;
1141:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1143:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1144:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1145:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				task itself, as a context switch to another task is required.
1146:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				Place the task in the termination list.  The idle task will
1147:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				check the termination list and free up any memory allocated by
1148:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1149:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1150:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1151:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1152:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				there is a task that has been deleted and that it should therefore
1153:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				check the xTasksWaitingTermination list. */
1154:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1155:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1156:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1157:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				in which Windows specific clean up operations are performed,
1158:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				after which it is not possible to yield away from this task -
1159:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1160:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				required. */
1161:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1162:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1163:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1164:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1165:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				--uxCurrentNumberOfTasks;
1166:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvDeleteTCB( pxTCB );
1167:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1168:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1169:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				the task that has just been deleted. */
1170:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvResetNextTaskUnblockTime();
1171:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1172:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 22


1173:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			traceTASK_DELETE( pxTCB );
1174:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1175:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
1176:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1177:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1178:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		been deleted. */
1179:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1180:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1181:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1182:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1183:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1184:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				portYIELD_WITHIN_API();
1185:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1186:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1187:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1188:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1189:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1190:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1191:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1192:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1193:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1194:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1196:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1197:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1198:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1199:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1200:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TickType_t xTimeToWake;
1201:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1202:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1203:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1204:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1205:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1206:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1207:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vTaskSuspendAll();
1208:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1209:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1210:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			block. */
1211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1212:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1213:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1214:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1215:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1216:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1217:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1218:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The tick count has overflowed since this function was
1219:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				lasted called.  In this case the only time we should ever
1220:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1221:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				and the wake time is greater than the tick time.  When this
1222:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				is the case it is as if neither time had overflowed. */
1223:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1224:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1225:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xShouldDelay = pdTRUE;
1226:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1227:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1228:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1229:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccOm33QJ.s 			page 23


1230:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1231:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1232:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1233:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1234:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1235:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1236:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				tick time is less than the wake time. */
1237:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1238:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1239:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xShouldDelay = pdTRUE;
1240:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1241:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1242:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1243:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1244:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1245:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1246:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1247:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Update the wake time ready for the next call. */
1248:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1249:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1250:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( xShouldDelay != pdFALSE )
1251:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1252:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1253:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1254:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1255:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				the time to wake, so subtract the current tick count. */
1256:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1257:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1258:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1259:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1260:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1261:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1262:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1263:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1264:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1265:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1266:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		have put ourselves to sleep. */
1267:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1268:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1269:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			portYIELD_WITHIN_API();
1270:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1271:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1272:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1273:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1274:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1275:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1276:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1277:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1278:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1279:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1280:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1281:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1282:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1283:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1284:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1285:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1286:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
ARM GAS  /tmp/ccOm33QJ.s 			page 24


1287:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1288:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1289:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1290:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vTaskSuspendAll();
1291:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1292:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				traceTASK_DELAY();
1293:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1294:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* A task that is removed from the event list while the
1295:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				scheduler is suspended will not get placed in the ready
1296:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				list or removed from the blocked list until the scheduler
1297:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				is resumed.
1298:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1299:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				This task cannot be in an event list as it is the currently
1300:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				executing task. */
1301:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1302:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1303:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1304:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1305:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1306:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1307:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1308:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1309:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1310:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1311:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		have put ourselves to sleep. */
1312:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1313:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1314:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			portYIELD_WITHIN_API();
1315:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1316:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1317:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1318:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1319:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1320:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1321:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1322:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1323:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1324:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1325:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1326:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1327:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1328:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1329:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	eTaskState eReturn;
1330:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	List_t *pxStateList;
1331:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1332:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1333:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxTCB );
1334:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1335:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1336:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1337:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* The task calling this function is querying its own state. */
1338:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			eReturn = eRunning;
1339:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1340:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1341:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1342:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskENTER_CRITICAL();
1343:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
ARM GAS  /tmp/ccOm33QJ.s 			page 25


1344:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1345:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1346:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskEXIT_CRITICAL();
1347:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1348:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1349:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1350:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1351:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				lists. */
1352:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				eReturn = eBlocked;
1353:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1354:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1355:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1356:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1357:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1358:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The task being queried is referenced from the suspended
1359:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					list.  Is it genuinely suspended or is it block
1360:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					indefinitely? */
1361:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1362:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1363:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						eReturn = eSuspended;
1364:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1365:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
1366:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1367:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						eReturn = eBlocked;
1368:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1369:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1370:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif
1371:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1372:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1373:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1374:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1375:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The task being queried is referenced from the deleted
1376:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					tasks list, or it is not referenced from any lists at
1377:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					all. */
1378:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					eReturn = eDeleted;
1379:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1380:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif
1381:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1382:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1383:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1384:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* If the task is not in any other state, it must be in the
1385:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				Ready (including pending ready) state. */
1386:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				eReturn = eReady;
1387:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1388:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1389:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1390:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return eReturn;
1391:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1392:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1393:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1394:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1395:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1396:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1397:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1398:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1399:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1400:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/ccOm33QJ.s 			page 26


1401:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxReturn;
1402:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1403:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
1404:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1405:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1406:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1407:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1408:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1409:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1410:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
1411:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1412:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return uxReturn;
1413:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1414:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1415:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1416:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1417:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1418:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1419:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1420:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1421:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1422:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
1423:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1424:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1425:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1426:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1427:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1428:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1429:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1430:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		is defined in FreeRTOSConfig.h then
1431:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1432:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1433:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		been assigned a priority above the configured maximum system call
1434:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1435:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1436:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1437:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1438:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1439:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		provided on the following link:
1440:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1441:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1442:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1443:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1444:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1445:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1446:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			task that is being queried. */
1447:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1448:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1449:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1450:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1451:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1452:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return uxReturn;
1453:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1454:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1455:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1456:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1457:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 27


1458:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1459:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1460:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1461:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1462:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
1463:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1464:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1465:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1466:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1467:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1468:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Ensure the new priority is valid. */
1469:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1470:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1471:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1472:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1473:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1474:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1475:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1476:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1477:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1478:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
1479:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1480:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1481:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			task that is being changed. */
1482:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1483:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1484:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1485:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1486:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1487:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1488:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1489:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1490:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#else
1491:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1492:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1493:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1494:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif
1495:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1496:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1497:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1498:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The priority change may have readied a task of higher
1499:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				priority than the calling task. */
1500:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1501:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1502:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1503:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1504:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* The priority of a task other than the currently
1505:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						running task is being raised.  Is the priority being
1506:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						raised above that of the running task? */
1507:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1508:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
1509:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							xYieldRequired = pdTRUE;
1510:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
1511:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						else
1512:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
1513:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1514:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
ARM GAS  /tmp/ccOm33QJ.s 			page 28


1515:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1516:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
1517:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1518:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* The priority of the running task is being raised,
1519:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						but the running task must already be the highest
1520:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						priority task able to run so no yield is required. */
1521:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1522:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1523:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1524:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1525:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Setting the priority of the running task down means
1526:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					there may now be another task of higher priority that
1527:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					is ready to execute. */
1528:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xYieldRequired = pdTRUE;
1529:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1530:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1531:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1532:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Setting the priority of any other task down does not
1533:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					require a yield as the running task must be above the
1534:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					new priority of the task being modified. */
1535:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1536:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1537:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Remember the ready list the task might be referenced from
1538:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				before its uxPriority member is changed so the
1539:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1540:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1541:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1542:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1543:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1544:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Only change the priority being used if the task is not
1545:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					currently using an inherited priority. */
1546:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1547:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1548:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1549:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1550:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
1551:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1552:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1553:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1554:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1555:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The base priority gets set whatever. */
1556:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1557:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1558:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#else
1559:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1561:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1562:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif
1563:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1564:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Only reset the event list item value if the value is not
1565:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				being used for anything else. */
1566:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1567:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1568:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1569:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1570:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1571:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
ARM GAS  /tmp/ccOm33QJ.s 			page 29


1572:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1573:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1574:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1575:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1576:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				nothing more than change its priority variable. However, if
1577:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1578:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				in the list appropriate to its new priority. */
1579:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1580:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1581:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The task is currently in its ready list - remove before
1582:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1583:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1584:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1585:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1586:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* It is known that the task is in its ready list so
1587:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						there is no need to check again and the port level
1588:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						reset macro can be called directly. */
1589:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1590:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1591:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
1592:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1593:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1594:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1595:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1596:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1597:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1598:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1599:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1600:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1601:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1602:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( xYieldRequired != pdFALSE )
1603:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1604:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1605:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1606:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1607:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1608:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1609:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1610:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1611:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1612:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				optimised task selection is not being used. */
1613:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1614:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1615:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
1617:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1618:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1619:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1620:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1621:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1622:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1623:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1624:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1625:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1626:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
1627:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1628:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/ccOm33QJ.s 			page 30


1629:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1630:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If null is passed in here then it is the running task that is
1631:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			being suspended. */
1632:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1633:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1634:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1635:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1636:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1637:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			suspended list. */
1638:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1639:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1640:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1641:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1642:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1643:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1644:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1645:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1646:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1647:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Is the task waiting on an event also? */
1648:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1649:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1650:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1651:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1652:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1653:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1654:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1655:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1656:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1657:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1658:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1659:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1660:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1661:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1662:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1663:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1664:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					now suspended, so no notification was received. */
1665:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1666:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1668:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif
1669:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1670:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
1671:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1672:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1673:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1674:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1675:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			task that is now in the Suspended state. */
1676:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskENTER_CRITICAL();
1677:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1678:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvResetNextTaskUnblockTime();
1679:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1680:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskEXIT_CRITICAL();
1681:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1682:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1683:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1684:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1685:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
ARM GAS  /tmp/ccOm33QJ.s 			page 31


1686:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1687:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1688:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1689:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1690:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1691:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The current task has just been suspended. */
1692:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1693:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				portYIELD_WITHIN_API();
1694:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1695:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1696:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1697:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1698:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1699:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				must be adjusted to point to a different task. */
1700:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1701:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1702:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1703:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1704:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					be set to point to it no matter what its relative priority
1705:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					is. */
1706:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxCurrentTCB = NULL;
1707:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1708:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1709:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1710:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					vTaskSwitchContext();
1711:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1712:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1713:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1714:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1715:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1716:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1717:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1718:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1719:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1720:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1721:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1722:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1723:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1724:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1725:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1726:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
  27              		.loc 1 1726 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1727:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1728:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1729:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1730:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1731:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		section. */
1732:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1733:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1734:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( xTask );
  33              		.loc 1 1734 0
  34 0000 0246     		mov	r2, r0
ARM GAS  /tmp/ccOm33QJ.s 			page 32


  35 0002 70B1     		cbz	r0, .L12
1735:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1736:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1737:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  36              		.loc 1 1737 0
  37 0004 4169     		ldr	r1, [r0, #20]
  38 0006 0F4B     		ldr	r3, .L15
  39 0008 9942     		cmp	r1, r3
  40 000a 13D0     		beq	.L13
  41 000c 0023     		movs	r3, #0
  42              	.L4:
  43              		.loc 1 1737 0 is_stmt 0 discriminator 4
  44 000e ABB1     		cbz	r3, .L8
1738:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1739:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1740:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  45              		.loc 1 1740 0 is_stmt 1
  46 0010 926A     		ldr	r2, [r2, #40]
  47 0012 0D49     		ldr	r1, .L15+4
  48 0014 8A42     		cmp	r2, r1
  49 0016 13D0     		beq	.L9
1741:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1742:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1743:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				state, or because is is blocked with no timeout? */
1744:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  50              		.loc 1 1744 0
  51 0018 02B1     		cbz	r2, .L6
  52 001a 0023     		movs	r3, #0
  53              	.L6:
  54              		.loc 1 1744 0 is_stmt 0 discriminator 4
  55 001c 63B1     		cbz	r3, .L14
1745:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1746:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xReturn = pdTRUE;
  56              		.loc 1 1746 0 is_stmt 1
  57 001e 0120     		movs	r0, #1
  58              	.LVL1:
1747:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1748:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1749:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1750:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1751:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1752:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1753:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1754:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1755:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1756:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1757:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1758:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1759:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1760:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1761:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1762:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1763:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
1764:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  59              		.loc 1 1764 0
  60 0020 7047     		bx	lr
  61              	.LVL2:
ARM GAS  /tmp/ccOm33QJ.s 			page 33


  62              	.L12:
  63              	.LBB104:
  64              	.LBB105:
  65              		.file 2 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/po
   1:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*
   2:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  *
   5:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * subject to the following conditions:
  11:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  *
  12:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * copies or substantial portions of the Software.
  14:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  *
  15:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  *
  22:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * http://www.FreeRTOS.org
  23:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * http://aws.amazon.com/freertos
  24:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  *
  25:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * 1 tab == 4 spaces!
  26:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  */
  27:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  28:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  29:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #ifndef PORTMACRO_H
  30:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define PORTMACRO_H
  31:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  32:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #ifdef __cplusplus
  33:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** extern "C" {
  34:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #endif
  35:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  36:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------
  37:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * Port specific definitions.
  38:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  *
  39:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * given hardware and compiler.
  41:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  *
  42:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  * These settings should not be altered.
  43:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  *-----------------------------------------------------------
  44:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h ****  */
  45:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  46:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /* Type definitions. */
  47:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portCHAR		char
  48:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portFLOAT		float
  49:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portDOUBLE		double
  50:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portLONG		long
  51:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portSHORT		short
  52:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portBASE_TYPE	long
ARM GAS  /tmp/ccOm33QJ.s 			page 34


  54:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  55:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** typedef long BaseType_t;
  57:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** typedef unsigned long UBaseType_t;
  58:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  59:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	typedef uint16_t TickType_t;
  61:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #else
  63:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	typedef uint32_t TickType_t;
  64:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  66:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	not need to be guarded with a critical section. */
  68:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #endif
  70:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
  71:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  72:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /* Architecture specifics. */
  73:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
  77:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  78:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /* Scheduler utilities. */
  79:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portYIELD() 															\
  80:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** {																				\
  81:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 																				\
  84:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	__asm volatile( "isb" );													\
  88:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** }
  89:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  90:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
  95:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
  96:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /* Critical section management. */
  97:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** extern void vPortEnterCritical( void );
  98:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** extern void vPortExitCritical( void );
  99:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 106:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
 107:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 108:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** (which build with all the ports) will build. */
ARM GAS  /tmp/ccOm33QJ.s 			page 35


 111:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
 114:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 115:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /* Tickless idle/low power functionality. */
 116:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #endif
 120:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
 121:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 122:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /* Architecture specific optimisations. */
 123:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #endif
 126:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 127:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 129:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/* Generic helper function. */
 130:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	{
 132:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	uint8_t ucReturn;
 133:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 134:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		return ucReturn;
 136:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	}
 137:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 138:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/* Check the configuration. */
 139:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#endif
 142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 143:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 147:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 149:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 151:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 153:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
 154:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 155:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #ifdef configASSERT
 156:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #endif
 159:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 160:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /* portNOP() is not required by this port. */
 161:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portNOP()
 162:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 163:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #define portINLINE	__inline
 164:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 165:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #ifndef portFORCE_INLINE
 166:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** #endif
ARM GAS  /tmp/ccOm33QJ.s 			page 36


 168:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 169:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** {
 171:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** BaseType_t xReturn;
 173:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 174:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 177:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	{
 179:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		xReturn = pdFALSE;
 180:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	}
 181:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	else
 182:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	{
 183:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		xReturn = pdTRUE;
 184:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	}
 185:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 186:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	return xReturn;
 187:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** }
 188:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 189:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
 190:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 191:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** {
 193:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** uint32_t ulNewBASEPRI;
 194:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	__asm volatile
  66              		.loc 2 195 0
  67              		.syntax unified
  68              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
  69 0022 4FF05003 			mov r3, #80												
  70 0026 83F31188 		msr basepri, r3											
  71 002a BFF36F8F 		isb														
  72 002e BFF34F8F 		dsb														
  73              	
  74              	@ 0 "" 2
  75              	.LVL3:
  76              		.thumb
  77              		.syntax unified
  78              	.L3:
  79 0032 FEE7     		b	.L3
  80              	.L13:
  81              	.LBE105:
  82              	.LBE104:
1737:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
  83              		.loc 1 1737 0
  84 0034 0123     		movs	r3, #1
  85 0036 EAE7     		b	.L4
  86              	.L14:
1727:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  87              		.loc 1 1727 0
  88 0038 0020     		movs	r0, #0
  89              	.LVL4:
  90 003a 7047     		bx	lr
  91              	.LVL5:
  92              	.L8:
ARM GAS  /tmp/ccOm33QJ.s 			page 37


  93 003c 0020     		movs	r0, #0
  94              	.LVL6:
  95 003e 7047     		bx	lr
  96              	.LVL7:
  97              	.L9:
  98 0040 0020     		movs	r0, #0
  99              	.LVL8:
 100 0042 7047     		bx	lr
 101              	.L16:
 102              		.align	2
 103              	.L15:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 00000000 		.word	.LANCHOR1
 106              		.cfi_endproc
 107              	.LFE15:
 109              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 110              		.align	1
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	prvResetNextTaskUnblockTime:
 117              	.LFB40:
1765:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1766:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1767:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1768:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1769:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1770:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1771:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1772:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1773:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1774:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1775:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* It does not make sense to resume the calling task. */
1776:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( xTaskToResume );
1777:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1778:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1779:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		currently executing task. */
1780:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1781:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1782:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskENTER_CRITICAL();
1783:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1784:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1786:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					traceTASK_RESUME( pxTCB );
1787:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1788:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1789:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					suspended because this is inside a critical section. */
1790:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1791:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1792:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1793:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* A higher priority task may have just been resumed. */
1794:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1795:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1796:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1797:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						but will leave the lists in the correct state for the
1798:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						next yield. */
ARM GAS  /tmp/ccOm33QJ.s 			page 38


1799:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1800:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1801:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
1802:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1803:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1804:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1805:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1806:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1807:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1808:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1809:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1810:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1811:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskEXIT_CRITICAL();
1812:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1813:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1814:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1815:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1816:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1817:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1818:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1819:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1820:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1821:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1822:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1823:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1824:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1825:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1826:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1827:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1828:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1829:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1830:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1831:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( xTaskToResume );
1832:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1833:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1834:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1835:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1836:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1837:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1838:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		is defined in FreeRTOSConfig.h then
1839:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1840:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1841:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		been assigned a priority above the configured maximum system call
1842:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1843:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1844:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1845:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1846:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1847:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		provided on the following link:
1848:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1849:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1850:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1851:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1852:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1853:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1854:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1855:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
ARM GAS  /tmp/ccOm33QJ.s 			page 39


1856:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1857:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Check the ready lists can be accessed. */
1858:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1859:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1860:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1861:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					suspended list to the ready list directly. */
1862:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1863:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1864:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xYieldRequired = pdTRUE;
1865:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1866:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
1867:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
1868:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1869:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
1870:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1871:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1872:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1873:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1874:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
1875:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
1876:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1877:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					is held in the pending ready list until the scheduler is
1878:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					unsuspended. */
1879:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1880:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
1881:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1882:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
1883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
1884:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
1886:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1887:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1888:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1889:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xYieldRequired;
1890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1891:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1892:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1893:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
1894:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1895:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskStartScheduler( void )
1896:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
1897:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xReturn;
1898:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1899:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Add the idle task at the lowest priority. */
1900:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1901:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1902:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1903:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1904:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1905:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1906:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1907:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		address of the RAM then create the idle task. */
1908:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1909:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1910:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 												configIDLE_TASK_NAME,
1911:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 												ulIdleTaskStackSize,
1912:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
ARM GAS  /tmp/ccOm33QJ.s 			page 40


1913:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1914:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 												pxIdleTaskStackBuffer,
1915:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1916:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1917:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xIdleTaskHandle != NULL )
1918:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1919:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdPASS;
1920:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1921:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1922:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1923:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdFAIL;
1924:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1925:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1926:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#else
1927:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1928:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1929:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1930:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 								configIDLE_TASK_NAME,
1931:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 								configMINIMAL_STACK_SIZE,
1932:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 								( void * ) NULL,
1933:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1934:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1935:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1936:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1937:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1938:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1939:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1940:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xReturn == pdPASS )
1941:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1942:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1943:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1944:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1945:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1946:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1947:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1948:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
1949:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* configUSE_TIMERS */
1950:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1951:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( xReturn == pdPASS )
1952:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
1953:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1954:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1955:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the only macro called by the function. */
1956:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1957:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1958:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			freertos_tasks_c_additions_init();
1959:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1960:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
1961:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1962:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1963:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1964:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1965:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1966:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		starts to run. */
1967:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portDISABLE_INTERRUPTS();
1968:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1969:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
ARM GAS  /tmp/ccOm33QJ.s 			page 41


1970:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1971:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1972:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			structure specific to the task that will run first. */
1973:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1974:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1975:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1976:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1977:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1978:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xSchedulerRunning = pdTRUE;
1979:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1980:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1981:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1982:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1983:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1984:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1985:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1986:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		FreeRTOSConfig.h file. */
1987:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1988:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
1989:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1990:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portable interface. */
1991:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1992:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1993:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1994:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			function will not return. */
1995:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
1996:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
1997:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
1998:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1999:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2000:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2001:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
2002:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2003:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2004:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2005:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		or the timer task. */
2006:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2007:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2008:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2009:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2010:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2011:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	( void ) xIdleTaskHandle;
2012:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2013:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2014:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2015:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskEndScheduler( void )
2016:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2017:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2018:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2019:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2020:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	portDISABLE_INTERRUPTS();
2021:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	xSchedulerRunning = pdFALSE;
2022:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vPortEndScheduler();
2023:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2024:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*----------------------------------------------------------*/
2025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2026:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskSuspendAll( void )
ARM GAS  /tmp/ccOm33QJ.s 			page 42


2027:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2028:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* A critical section is not required as the variable is of type
2029:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2030:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2031:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	http://goo.gl/wu4acr */
2032:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	++uxSchedulerSuspended;
2033:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2034:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*----------------------------------------------------------*/
2035:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2036:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2037:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2038:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2039:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2040:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TickType_t xReturn;
2041:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2042:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2043:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2044:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2045:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		task that are in the Ready state, even though the idle task is
2046:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		running. */
2047:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2048:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2049:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2050:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2051:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2052:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2053:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2054:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#else
2055:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2056:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2057:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2058:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2059:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2060:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			significant bit are set then there are tasks that have a priority
2061:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2062:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2063:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2064:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2065:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2066:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2067:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2068:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
2069:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2070:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2071:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2072:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = 0;
2073:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2074:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2075:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2076:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2077:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2078:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			processed. */
2079:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = 0;
2080:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2081:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2082:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2083:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
ARM GAS  /tmp/ccOm33QJ.s 			page 43


2084:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			idle priority.  This path can only be reached if
2085:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configUSE_PREEMPTION is 0. */
2086:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = 0;
2087:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2088:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
2089:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2090:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2091:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2092:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2093:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
2094:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2095:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2096:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2097:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*----------------------------------------------------------*/
2098:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2099:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xTaskResumeAll( void )
2100:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2101:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxTCB = NULL;
2102:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2103:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2104:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2105:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	previous call to vTaskSuspendAll(). */
2106:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2107:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2108:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2109:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2110:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2111:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2112:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	tasks from this list into their appropriate ready list. */
2113:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskENTER_CRITICAL();
2114:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2115:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		--uxSchedulerSuspended;
2116:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2117:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2118:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2120:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2121:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Move any readied tasks from the pending list into the
2122:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				appropriate ready list. */
2123:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2124:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2125:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2126:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2127:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2128:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2129:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2130:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* If the moved task has a priority higher than the current
2131:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					task then a yield must be performed. */
2132:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2133:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2134:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xYieldPending = pdTRUE;
2135:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2136:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
2137:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2138:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2139:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2140:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
ARM GAS  /tmp/ccOm33QJ.s 			page 44


2141:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB != NULL )
2143:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2144:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2145:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					which may have prevented the next unblock time from being
2146:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2147:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					important for low power tickless implementations, where
2148:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					this can prevent an unnecessary exit from low power
2149:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					state. */
2150:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvResetNextTaskUnblockTime();
2151:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2152:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2153:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2154:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				they should be processed now.  This ensures the tick count does
2155:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2156:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				time. */
2157:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2158:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2159:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2160:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2161:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2162:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						do
2163:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
2164:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2165:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							{
2166:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 								xYieldPending = pdTRUE;
2167:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							}
2168:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							else
2169:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							{
2170:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2171:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							}
2172:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							--uxPendedCounts;
2173:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2174:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2175:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						uxPendedTicks = 0;
2176:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2177:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
2178:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2179:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2180:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2181:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2182:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2183:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( xYieldPending != pdFALSE )
2184:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2185:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2186:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2187:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xAlreadyYielded = pdTRUE;
2188:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2189:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					#endif
2190:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2191:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2192:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
2193:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2194:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2196:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2197:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
ARM GAS  /tmp/ccOm33QJ.s 			page 45


2198:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
2199:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2200:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2201:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2202:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2203:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskEXIT_CRITICAL();
2204:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2205:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return xAlreadyYielded;
2206:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2207:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2208:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2209:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t xTaskGetTickCount( void )
2210:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t xTicks;
2212:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2213:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2214:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2215:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2216:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xTicks = xTickCount;
2217:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2218:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2219:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2220:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return xTicks;
2221:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2222:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2223:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2224:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2225:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2226:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t xReturn;
2227:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2228:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2229:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2230:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2231:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2232:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2233:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2234:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2235:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2236:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2237:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2238:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2239:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2240:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2241:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2242:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2243:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2244:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2245:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2246:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2247:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xReturn = xTickCount;
2248:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2249:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2250:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2251:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return xReturn;
2252:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2253:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2254:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 46


2255:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2256:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2257:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* A critical section is not required because the variables are of type
2258:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t. */
2259:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return uxCurrentNumberOfTasks;
2260:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2261:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2262:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2263:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2264:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2265:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxTCB;
2266:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2267:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2268:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	queried. */
2269:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2270:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTCB );
2271:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2272:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2273:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2274:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2275:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2276:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2277:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2278:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2279:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2280:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t x;
2281:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	char cNextChar;
2282:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2283:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* This function is called with the scheduler suspended. */
2284:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2285:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2286:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2287:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2288:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2289:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			do
2290:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2291:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2292:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2293:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Check each character in the name looking for a match or
2294:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mismatch. */
2295:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2296:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2297:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2298:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2299:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2300:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2301:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* Characters didn't match. */
2302:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						break;
2303:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2304:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else if( cNextChar == 0x00 )
2305:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2306:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* Both strings terminated, a match must have been
2307:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						found. */
2308:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						pxReturn = pxNextTCB;
2309:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						break;
2310:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2311:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
ARM GAS  /tmp/ccOm33QJ.s 			page 47


2312:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2313:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2314:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2315:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2316:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2317:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxReturn != NULL )
2318:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2319:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The handle has been found. */
2320:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
2321:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2322:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2323:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2324:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2325:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
2326:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2327:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2328:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2329:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2330:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return pxReturn;
2331:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2332:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2333:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2334:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2335:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2336:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2337:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2338:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2339:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2340:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2341:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t* pxTCB;
2342:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2343:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2344:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2345:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2346:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vTaskSuspendAll();
2347:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2348:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Search the ready lists. */
2349:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			do
2350:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2351:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxQueue--;
2352:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2353:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2354:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB != NULL )
2355:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2356:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Found the handle. */
2357:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
2358:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2359:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2360:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2361:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2362:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Search the delayed lists. */
2363:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB == NULL )
2364:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2365:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2366:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2367:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2368:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB == NULL )
ARM GAS  /tmp/ccOm33QJ.s 			page 48


2369:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2370:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2371:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2372:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2373:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2374:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2375:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB == NULL )
2376:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2377:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Search the suspended list. */
2378:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2379:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2380:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2381:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif
2382:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2383:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2384:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2385:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB == NULL )
2386:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2387:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Search the deleted list. */
2388:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2389:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2390:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2391:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif
2392:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2393:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		( void ) xTaskResumeAll();
2394:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2395:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2396:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2397:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2398:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2399:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2400:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2401:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2402:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2403:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2404:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2405:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2406:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2407:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vTaskSuspendAll();
2408:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2409:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2410:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2411:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2412:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2413:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				task in the Ready state. */
2414:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				do
2415:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2416:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					uxQueue--;
2417:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2418:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2419:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2420:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2421:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2422:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				task in the Blocked state. */
2423:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2424:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2425:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 49


2426:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2427:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2428:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2429:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2430:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2431:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2432:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif
2433:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2434:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2435:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2436:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2437:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					each task in the Suspended state. */
2438:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2439:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2440:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif
2441:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2442:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2443:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2444:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pulTotalRunTime != NULL )
2445:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2446:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2447:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2448:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#else
2449:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2450:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#endif
2451:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2452:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2453:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#else
2454:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2455:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pulTotalRunTime != NULL )
2456:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2457:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						*pulTotalRunTime = 0;
2458:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2459:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2460:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif
2461:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2462:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
2463:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2464:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2465:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2466:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2467:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		( void ) xTaskResumeAll();
2468:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2469:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return uxTask;
2470:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2471:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2472:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2473:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*----------------------------------------------------------*/
2474:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2475:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2476:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2477:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2478:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2479:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2480:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2481:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2482:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xIdleTaskHandle;
ARM GAS  /tmp/ccOm33QJ.s 			page 50


2483:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2484:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2485:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2486:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*----------------------------------------------------------*/
2487:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2488:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2489:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2490:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2491:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 1. */
2492:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2493:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2494:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2495:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2496:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2497:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2498:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		each stepped tick. */
2499:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2500:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xTickCount += xTicksToJump;
2501:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2502:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2503:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2504:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2505:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*----------------------------------------------------------*/
2506:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2507:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2508:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2509:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2510:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2511:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2512:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn;
2513:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2514:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxTCB );
2515:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2516:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vTaskSuspendAll();
2517:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2518:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2519:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			it is actually in the Blocked state. */
2520:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2521:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2522:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdPASS;
2523:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2524:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2525:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				interrupt won't touch the xStateListItem because the
2526:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				scheduler is suspended. */
2527:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2528:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2529:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2530:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2531:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				even though the scheduler is suspended, so a critical section
2532:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				is used. */
2533:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				taskENTER_CRITICAL();
2534:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2535:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2536:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2537:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2538:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2539:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
ARM GAS  /tmp/ccOm33QJ.s 			page 51


2540:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
2541:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2542:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2543:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2544:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2545:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				taskEXIT_CRITICAL();
2546:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2547:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2548:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2549:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2550:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2551:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				switch if preemption is turned off. */
2552:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2553:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2554:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Preemption is on, but a context switch should only be
2555:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					performed if the unblocked task has a priority that is
2556:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					equal to or higher than the currently executing task. */
2557:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2558:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2559:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						is unsuspended. */
2561:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xYieldPending = pdTRUE;
2562:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2563:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
2564:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2565:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2566:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2567:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2568:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2569:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2570:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
2571:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2572:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdFAIL;
2573:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2574:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2575:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		( void ) xTaskResumeAll();
2576:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2577:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
2578:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2579:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2580:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2581:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*----------------------------------------------------------*/
2582:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2583:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xTaskIncrementTick( void )
2584:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2585:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t * pxTCB;
2586:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t xItemValue;
2587:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2588:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2589:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2590:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2591:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	tasks to be unblocked. */
2592:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2593:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2594:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2595:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2596:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		block. */
ARM GAS  /tmp/ccOm33QJ.s 			page 52


2597:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2598:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2599:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2600:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		delayed lists if it wraps to 0. */
2601:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xTickCount = xConstTickCount;
2602:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2603:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2604:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2605:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2606:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2607:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
2608:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2609:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2610:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2611:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2612:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2613:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2614:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		has been found whose block time has not expired there is no need to
2615:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		look any further down the list. */
2616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2617:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2618:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			for( ;; )
2619:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2620:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2621:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2622:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2623:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					to the maximum possible value so it is extremely
2624:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					unlikely that the
2625:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2626:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					next time through. */
2627:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2628:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
2629:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2630:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
2631:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2632:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The delayed list is not empty, get the value of the
2633:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					item at the head of the delayed list.  This is the time
2634:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					at which the task at the head of the delayed list must
2635:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					be removed from the Blocked state. */
2636:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2637:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2638:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2639:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( xConstTickCount < xItemValue )
2640:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2641:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* It is not time to unblock this item yet, but the
2642:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						item value is the time at which the task at the head
2643:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						of the blocked list must be removed from the Blocked
2644:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						state -	so record the item value in
2645:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xNextTaskUnblockTime. */
2646:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2647:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						break;
2648:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2649:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
2650:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2651:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2652:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2653:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 53


2654:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2655:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2656:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2657:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2658:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					it from the event list. */
2659:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2660:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2661:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2662:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2663:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
2664:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2665:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2666:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2668:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2669:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					list. */
2670:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2671:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2672:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2673:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					context switch if preemption is turned off. */
2674:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2675:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
2676:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* Preemption is on, but a context switch should
2677:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						only be performed if the unblocked task has a
2678:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						priority that is equal to or higher than the
2679:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						currently executing task. */
2680:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2681:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
2682:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							xSwitchRequired = pdTRUE;
2683:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
2684:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						else
2685:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
2686:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2687:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
2688:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
2689:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2690:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2691:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2692:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2693:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2694:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2695:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2696:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		writer has not explicitly turned time slicing off. */
2697:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2698:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2699:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2700:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2701:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xSwitchRequired = pdTRUE;
2702:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2703:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
2704:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2705:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2706:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2707:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2708:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2709:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2710:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
ARM GAS  /tmp/ccOm33QJ.s 			page 54


2711:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2712:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2713:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2714:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2715:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2716:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vApplicationTickHook();
2717:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2718:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
2719:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
2720:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2721:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
2722:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2723:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2724:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2725:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
2726:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2727:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		++uxPendedTicks;
2728:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2729:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2730:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		scheduler is locked. */
2731:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2732:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2733:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vApplicationTickHook();
2734:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2735:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
2736:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2737:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2738:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2739:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2740:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xYieldPending != pdFALSE )
2741:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2742:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xSwitchRequired = pdTRUE;
2743:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2744:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
2745:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2746:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2747:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2748:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2749:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2750:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2751:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return xSwitchRequired;
2752:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2753:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2754:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2755:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2756:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2757:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2758:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2759:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *xTCB;
2760:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2761:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2762:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		getting set. */
2763:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xTask == NULL )
2764:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2765:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2766:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2767:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
ARM GAS  /tmp/ccOm33QJ.s 			page 55


2768:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2769:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2770:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2771:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2772:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2773:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the value can be accessed from an interrupt. */
2774:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
2775:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2776:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
2777:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2778:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2779:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2780:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2781:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2782:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2783:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2784:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2785:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2786:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *xTCB;
2787:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHookFunction_t xReturn;
2788:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2789:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2790:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xTask == NULL )
2791:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2792:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2793:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2794:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
2795:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2796:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2797:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2798:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2799:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2800:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the value can be accessed from an interrupt. */
2801:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
2802:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2803:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2804:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2805:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
2806:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2807:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
2808:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2809:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2810:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2811:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2812:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2813:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2814:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2815:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2816:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2817:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *xTCB;
2818:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn;
2819:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2820:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2821:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xTask == NULL )
2822:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2823:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2824:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
ARM GAS  /tmp/ccOm33QJ.s 			page 56


2825:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
2826:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2827:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2828:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2829:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2830:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2831:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2832:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2833:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2834:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
2835:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2836:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdFAIL;
2837:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2838:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2839:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
2840:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2841:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2842:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2843:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2844:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2845:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskSwitchContext( void )
2846:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2847:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2848:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2849:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2850:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		switch. */
2851:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xYieldPending = pdTRUE;
2852:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2853:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
2854:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2855:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xYieldPending = pdFALSE;
2856:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_SWITCHED_OUT();
2857:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2858:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2859:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2860:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2861:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2862:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#else
2863:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2864:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif
2865:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2866:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Add the amount of time the task has been running to the
2867:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				accumulated time so far.  The time the task started running was
2868:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2869:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				protection here so count values are only valid until the timer
2870:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				overflows.  The guard against negative values is to protect
2871:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				against suspect run time stat counter implementations - which
2872:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				are provided by the application, not the kernel. */
2873:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2874:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2875:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2876:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2877:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
2878:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
2879:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2880:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
2881:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
ARM GAS  /tmp/ccOm33QJ.s 			page 57


2882:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2884:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Check for stack overflow, if configured. */
2886:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2887:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2888:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Select a new task to run using either the generic C or port
2889:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		optimised asm code. */
2890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2891:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_SWITCHED_IN();
2892:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2893:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2894:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2895:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2896:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			structure specific to this task. */
2897:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2898:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2899:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2900:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2901:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2902:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2903:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2904:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2905:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2906:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxEventList );
2907:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2908:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2909:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2910:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2911:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2912:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2913:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2914:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2915:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2916:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2917:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2918:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2919:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2920:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2921:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2922:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2923:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxEventList );
2924:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2925:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2926:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	the event groups implementation. */
2927:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2928:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2929:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2930:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2931:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	task that is not in the Blocked state. */
2932:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2933:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2934:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2935:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2936:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	event group implementation - and interrupts don't access event groups
2937:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2938:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	the task level). */
ARM GAS  /tmp/ccOm33QJ.s 			page 58


2939:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2940:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2941:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2942:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
2943:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2944:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2945:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TIMERS == 1 )
2946:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2947:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2948:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
2949:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxEventList );
2950:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2951:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* This function should not be called by application code hence the
2952:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2953:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2954:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		it should be called with the scheduler suspended. */
2955:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2956:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2957:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2958:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		In this case it is assume that this is the only task that is going to
2959:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2960:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		can be used in place of vListInsert. */
2961:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2962:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2963:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2964:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2965:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2966:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2967:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
2968:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2969:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
2970:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2971:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2972:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2973:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
2974:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2975:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TIMERS */
2976:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
2977:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2978:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2979:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
2980:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxUnblockedTCB;
2981:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xReturn;
2982:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2983:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2984:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	called from a critical section within an ISR. */
2985:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2986:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2987:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2988:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	the delayed list, and add it to the ready list.
2989:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2990:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	If an event is for a queue that is locked then this function will never
2991:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2992:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2993:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
2994:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	This function assumes that a check has already been made to ensure that
2995:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxEventList is not empty. */
ARM GAS  /tmp/ccOm33QJ.s 			page 59


2996:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2997:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxUnblockedTCB );
2998:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2999:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3000:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3001:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3002:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3003:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3004:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3005:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
3006:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3007:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3008:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pending until the scheduler is resumed. */
3009:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3010:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3011:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3012:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3013:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3014:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3015:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3016:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		it should force a context switch now. */
3017:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xReturn = pdTRUE;
3018:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3019:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3020:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3021:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xYieldPending = pdTRUE;
3022:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3023:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
3024:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xReturn = pdFALSE;
3026:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3027:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3028:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3029:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3030:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3031:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3032:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3033:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3034:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3035:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3036:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3037:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		ensure it is updated at the earliest possible time. */
3038:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		prvResetNextTaskUnblockTime();
3039:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3040:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
3041:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3042:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return xReturn;
3043:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3044:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3045:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3046:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3047:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
3048:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxUnblockedTCB;
3049:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3050:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3051:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	the event flags implementation. */
3052:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
ARM GAS  /tmp/ccOm33QJ.s 			page 60


3053:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3054:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Store the new item value in the event list. */
3055:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3056:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3057:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3058:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	event flags. */
3059:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3060:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxUnblockedTCB );
3061:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3062:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3063:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3064:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3065:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	lists. */
3066:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3067:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3068:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3069:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3070:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3071:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3072:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		a context switch is required.  This function is called with the
3073:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3074:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3075:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xYieldPending = pdTRUE;
3076:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3077:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3078:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3079:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3080:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3081:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
3082:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTimeOut );
3083:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskENTER_CRITICAL();
3084:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3085:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3086:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3087:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3088:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskEXIT_CRITICAL();
3089:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3090:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3091:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3092:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3093:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
3094:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3095:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3096:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3097:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3098:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3099:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3100:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3101:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
3102:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xReturn;
3103:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3104:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTimeOut );
3105:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTicksToWait );
3106:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3107:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskENTER_CRITICAL();
3108:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3109:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
ARM GAS  /tmp/ccOm33QJ.s 			page 61


3110:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3111:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3112:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3113:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3114:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3115:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3116:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3117:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				but has the same result. */
3118:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdTRUE;
3120:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3121:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3122:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
3123:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3124:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3125:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3126:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3127:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3128:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				specified is the maximum block time then the task should block
3129:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				indefinitely, and therefore never time out. */
3130:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdFALSE;
3131:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3132:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3133:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
3134:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3135:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3136:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3137:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* The tick count is greater than the time at which
3138:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3139:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3140:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3141:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			was called. */
3142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdTRUE;
3143:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3144:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3145:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3146:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3147:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3148:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3149:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdFALSE;
3150:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3151:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3152:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3153:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			*pxTicksToWait = 0;
3154:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdTRUE;
3155:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3156:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3157:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskEXIT_CRITICAL();
3158:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3159:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return xReturn;
3160:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3161:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3162:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3163:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** void vTaskMissedYield( void )
3164:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
3165:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	xYieldPending = pdTRUE;
3166:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
ARM GAS  /tmp/ccOm33QJ.s 			page 62


3167:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3168:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3169:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3170:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3171:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3172:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3173:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxReturn;
3174:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
3175:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3176:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xTask != NULL )
3177:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3178:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3179:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3180:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3181:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3182:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3183:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxReturn = 0U;
3184:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3185:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3186:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return uxReturn;
3187:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3188:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3189:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3190:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3191:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3192:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3193:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3194:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3196:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
3197:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3198:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xTask != NULL )
3199:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3200:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3201:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3202:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3203:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3204:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3205:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3206:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3207:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*
3208:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * -----------------------------------------------------------
3209:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * The Idle task.
3210:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * ----------------------------------------------------------
3211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
3212:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3213:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3214:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
3215:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  * void prvIdleTask( void *pvParameters );
3216:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  *
3217:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c ****  */
3218:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3219:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
3220:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Stop warnings. */
3221:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	( void ) pvParameters;
3222:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3223:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
ARM GAS  /tmp/ccOm33QJ.s 			page 63


3224:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	SCHEDULER IS STARTED. **/
3225:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3226:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3227:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3228:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	any. */
3229:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3230:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3231:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	for( ;; )
3232:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3233:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3234:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3235:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		prvCheckTasksWaitingTermination();
3236:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3237:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3238:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3239:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3240:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			see if any other task has become available.  If we are using
3241:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			preemption we don't need to do this as any task becoming available
3242:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			will automatically get the processor anyway. */
3243:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskYIELD();
3244:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3245:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3246:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3247:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3248:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3249:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* When using preemption tasks of equal priority will be
3250:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3251:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			to run then the idle task should yield before the end of the
3252:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			timeslice.
3253:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3254:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			A critical region is not required here as we are just reading from
3255:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3256:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			the ready list at the idle priority contains more than one task
3257:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			then a task other than the idle task is ready to execute. */
3258:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3259:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3260:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				taskYIELD();
3261:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3262:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3263:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3264:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3265:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3266:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3267:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3268:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3269:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3270:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3271:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			extern void vApplicationIdleHook( void );
3272:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3273:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3274:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			allows the application designer to add background functionality
3275:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			without the overhead of a separate task.
3276:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3277:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3278:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vApplicationIdleHook();
3279:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3280:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
ARM GAS  /tmp/ccOm33QJ.s 			page 64


3281:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3282:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3283:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3284:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		user defined low power mode	implementations require
3285:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3286:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3287:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3288:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		TickType_t xExpectedIdleTime;
3289:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3290:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3291:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3292:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			test of the expected idle time is performed without the
3293:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3294:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			valid. */
3295:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3296:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3297:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3298:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3299:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vTaskSuspendAll();
3300:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3301:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3302:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					time can be sampled again, and this time its value can
3303:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					be used. */
3304:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3305:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3306:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3307:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3308:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if the application does not want
3309:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3310:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3311:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3312:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3313:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
3314:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3315:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3316:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						traceLOW_POWER_IDLE_END();
3317:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
3318:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
3319:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
3320:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3321:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
3322:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3323:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( void ) xTaskResumeAll();
3324:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3325:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3326:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3327:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3328:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3329:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3330:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3331:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3332:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3333:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3334:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3335:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3336:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3337:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
ARM GAS  /tmp/ccOm33QJ.s 			page 65


3338:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3339:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3340:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3341:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3342:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3343:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3344:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3345:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3346:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			eReturn = eAbortSleep;
3347:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3348:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else if( xYieldPending != pdFALSE )
3349:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3350:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3351:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			eReturn = eAbortSleep;
3352:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3353:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3354:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3355:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3356:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			have an infinite block time rather than actually being suspended)
3357:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3358:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			interrupts. */
3359:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3360:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3361:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3362:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3363:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3364:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3365:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3366:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3367:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3368:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3369:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return eReturn;
3370:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3371:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3372:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3373:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3374:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3375:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3376:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3377:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3378:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3379:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
3380:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3381:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3382:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3383:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3384:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3385:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3386:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3387:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3388:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3389:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3390:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3391:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3392:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3393:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3394:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
ARM GAS  /tmp/ccOm33QJ.s 			page 66


3395:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void *pvReturn = NULL;
3396:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
3397:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3398:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3400:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3401:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3402:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3403:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3404:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3405:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pvReturn = NULL;
3406:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3407:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3408:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return pvReturn;
3409:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3410:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3411:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3412:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3413:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3414:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3415:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3416:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3417:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3418:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
3419:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3420:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3421:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the calling task. */
3422:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3423:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3424:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3425:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3426:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3427:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3428:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3429:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3430:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvInitialiseTaskLists( void )
3431:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
3432:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** UBaseType_t uxPriority;
3433:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3434:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3435:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3436:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3437:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3438:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3439:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3440:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3441:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInitialise( &xPendingReadyList );
3442:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3443:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3444:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3445:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3446:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3447:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3448:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3449:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3450:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3451:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
ARM GAS  /tmp/ccOm33QJ.s 			page 67


3452:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3453:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3454:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3455:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3456:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	using list2. */
3457:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3458:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3459:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3460:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3461:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3462:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3463:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
3464:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3465:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3466:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3467:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3468:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3469:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		TCB_t *pxTCB;
3470:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3471:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3472:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		being called too often in the idle task. */
3473:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3474:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3475:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskENTER_CRITICAL();
3476:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3477:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3478:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3479:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				--uxCurrentNumberOfTasks;
3480:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3481:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3482:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			taskEXIT_CRITICAL();
3483:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3484:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvDeleteTCB( pxTCB );
3485:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3486:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3487:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3488:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3489:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3490:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3491:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3492:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3493:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3494:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3495:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
3496:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3497:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3498:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3499:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3500:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3501:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3502:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3503:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3504:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3505:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3506:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3507:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3508:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
ARM GAS  /tmp/ccOm33QJ.s 			page 68


3509:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3510:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#else
3511:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3512:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3513:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3514:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
3515:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3516:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3517:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3518:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3519:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3520:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#else
3521:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3522:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3523:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3524:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
3525:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3526:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3527:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3528:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		state is just set to whatever is passed in. */
3529:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( eState != eInvalid )
3530:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3531:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3532:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3533:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3534:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3535:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3536:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3537:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3538:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3539:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3540:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3541:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* If the task is in the suspended list then there is a
3542:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3543:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					it should be reported as being in the Blocked state. */
3544:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( eState == eSuspended )
3545:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
3546:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						vTaskSuspendAll();
3547:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
3548:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3549:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							{
3550:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3551:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							}
3552:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
3553:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						( void ) xTaskResumeAll();
3554:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
3555:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3556:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3557:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3558:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3559:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3561:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3562:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3563:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3564:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3565:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		parameter is provided to allow it to be skipped. */
ARM GAS  /tmp/ccOm33QJ.s 			page 69


3566:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3567:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3568:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3569:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3570:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3571:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3572:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#else
3573:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3574:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3575:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3576:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#endif
3577:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3578:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3579:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3580:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3581:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3582:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3583:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3584:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3585:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3586:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3587:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3588:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3589:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3590:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3591:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3592:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTask = 0;
3593:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3594:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3595:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3596:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3597:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3598:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3599:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3600:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3601:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3602:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			do
3603:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3604:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3605:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3606:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxTask++;
3607:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3608:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3609:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3610:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3611:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3612:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3613:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3614:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return uxTask;
3615:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3617:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3618:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3619:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3620:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3621:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3622:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
ARM GAS  /tmp/ccOm33QJ.s 			page 70


3623:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3624:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint32_t ulCount = 0U;
3625:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3626:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3627:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3628:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3629:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			ulCount++;
3630:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3631:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3632:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3633:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3634:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return ( uint16_t ) ulCount;
3635:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3636:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3637:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3638:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3639:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3640:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3641:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3642:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3643:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3644:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
3645:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint8_t *pucEndOfStack;
3646:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxReturn;
3647:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3648:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3649:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3650:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if portSTACK_GROWTH < 0
3651:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3652:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3653:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3654:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#else
3655:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3656:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3657:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3658:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
3659:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3660:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3661:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3662:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return uxReturn;
3663:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3664:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3665:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3666:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3668:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3669:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3670:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3671:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3672:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3673:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3674:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		want to allocate and clean RAM statically. */
3675:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3676:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3677:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3678:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		to the task to free any memory allocated at the application level. */
3679:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
ARM GAS  /tmp/ccOm33QJ.s 			page 71


3680:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3681:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3682:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3683:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3684:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3685:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3686:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3687:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3688:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			the stack and TCB. */
3689:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vPortFree( pxTCB->pxStack );
3690:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vPortFree( pxTCB );
3691:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3692:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3693:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3694:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3695:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			check what was statically allocated before trying to free the
3696:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			memory. */
3697:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3698:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3699:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3700:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				must be freed. */
3701:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vPortFree( pxTCB->pxStack );
3702:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vPortFree( pxTCB );
3703:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3704:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3705:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3706:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3707:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				only memory that must be freed. */
3708:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vPortFree( pxTCB );
3709:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3710:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3711:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3712:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3713:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				nothing needs to be freed. */
3714:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3715:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3716:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3717:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3718:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3719:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3720:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3721:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3722:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3723:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3724:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3725:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
 118              		.loc 1 3725 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
3726:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxTCB;
3727:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3728:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 123              		.loc 1 3728 0
 124 0000 0A4B     		ldr	r3, .L23
 125 0002 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOm33QJ.s 			page 72


 126 0004 1B68     		ldr	r3, [r3]
 127 0006 4BB9     		cbnz	r3, .L21
 128 0008 0123     		movs	r3, #1
 129              	.L18:
 130              		.loc 1 3728 0 is_stmt 0 discriminator 4
 131 000a 4BB9     		cbnz	r3, .L22
3729:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3730:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3731:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3732:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3733:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		there is an item in the delayed list. */
3734:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
3735:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3736:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
3737:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3738:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3739:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3740:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		which the task at the head of the delayed list should be removed
3741:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		from the Blocked state. */
3742:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 132              		.loc 1 3742 0 is_stmt 1
 133 000c 074B     		ldr	r3, .L23
 134 000e 1B68     		ldr	r3, [r3]
 135 0010 DB68     		ldr	r3, [r3, #12]
 136 0012 DB68     		ldr	r3, [r3, #12]
 137              	.LVL9:
3743:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 138              		.loc 1 3743 0
 139 0014 5A68     		ldr	r2, [r3, #4]
 140 0016 064B     		ldr	r3, .L23+4
 141              	.LVL10:
 142 0018 1A60     		str	r2, [r3]
 143 001a 7047     		bx	lr
 144              	.L21:
3728:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 145              		.loc 1 3728 0
 146 001c 0023     		movs	r3, #0
 147 001e F4E7     		b	.L18
 148              	.L22:
3734:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 149              		.loc 1 3734 0
 150 0020 4FF0FF32 		mov	r2, #-1
 151 0024 024B     		ldr	r3, .L23+4
 152 0026 1A60     		str	r2, [r3]
 153 0028 7047     		bx	lr
 154              	.L24:
 155 002a 00BF     		.align	2
 156              	.L23:
 157 002c 00000000 		.word	.LANCHOR2
 158 0030 00000000 		.word	.LANCHOR3
 159              		.cfi_endproc
 160              	.LFE40:
 162              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
ARM GAS  /tmp/ccOm33QJ.s 			page 73


 167              		.fpu fpv4-sp-d16
 169              	prvInitialiseNewTask:
 170              	.LFB7:
 825:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** StackType_t *pxTopOfStack;
 171              		.loc 1 825 0
 172              		.cfi_startproc
 173              		@ args = 16, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              	.LVL11:
 176 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 177              	.LCFI0:
 178              		.cfi_def_cfa_offset 32
 179              		.cfi_offset 4, -32
 180              		.cfi_offset 5, -28
 181              		.cfi_offset 6, -24
 182              		.cfi_offset 7, -20
 183              		.cfi_offset 8, -16
 184              		.cfi_offset 9, -12
 185              		.cfi_offset 10, -8
 186              		.cfi_offset 14, -4
 187 0004 8046     		mov	r8, r0
 188 0006 9946     		mov	r9, r3
 189 0008 089D     		ldr	r5, [sp, #32]
 190 000a 099F     		ldr	r7, [sp, #36]
 191 000c 0A9C     		ldr	r4, [sp, #40]
 857:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 192              		.loc 1 857 0
 193 000e 266B     		ldr	r6, [r4, #48]
 194 0010 02F18042 		add	r2, r2, #1073741824
 195              	.LVL12:
 196 0014 013A     		subs	r2, r2, #1
 197              	.LVL13:
 198 0016 06EB8206 		add	r6, r6, r2, lsl #2
 199              	.LVL14:
 858:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 200              		.loc 1 858 0
 201 001a 26F00706 		bic	r6, r6, #7
 202              	.LVL15:
 885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 203              		.loc 1 885 0
 204 001e 0023     		movs	r3, #0
 205              	.LVL16:
 206              	.L26:
 885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 207              		.loc 1 885 0 is_stmt 0 discriminator 1
 208 0020 0F2B     		cmp	r3, #15
 209 0022 07D8     		bhi	.L27
 887:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 210              		.loc 1 887 0 is_stmt 1
 211 0024 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 212 0026 E218     		adds	r2, r4, r3
 213 0028 82F83400 		strb	r0, [r2, #52]
 892:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 214              		.loc 1 892 0
 215 002c CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 216 002e 0AB1     		cbz	r2, .L27
 885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
ARM GAS  /tmp/ccOm33QJ.s 			page 74


 217              		.loc 1 885 0 discriminator 2
 218 0030 0133     		adds	r3, r3, #1
 219              	.LVL17:
 220 0032 F5E7     		b	.L26
 221              	.L27:
 904:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 222              		.loc 1 904 0
 223 0034 0023     		movs	r3, #0
 224              	.LVL18:
 225 0036 84F84330 		strb	r3, [r4, #67]
 908:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 226              		.loc 1 908 0
 227 003a 062D     		cmp	r5, #6
 228 003c 00D9     		bls	.L29
 910:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 229              		.loc 1 910 0
 230 003e 0625     		movs	r5, #6
 231              	.L29:
 232              	.LVL19:
 917:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 233              		.loc 1 917 0
 234 0040 E562     		str	r5, [r4, #44]
 920:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 235              		.loc 1 920 0
 236 0042 6564     		str	r5, [r4, #68]
 921:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 237              		.loc 1 921 0
 238 0044 4FF0000A 		mov	r10, #0
 239 0048 C4F848A0 		str	r10, [r4, #72]
 925:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 240              		.loc 1 925 0
 241 004c 201D     		adds	r0, r4, #4
 242 004e FFF7FEFF 		bl	vListInitialiseItem
 243              	.LVL20:
 926:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 244              		.loc 1 926 0
 245 0052 04F11800 		add	r0, r4, #24
 246 0056 FFF7FEFF 		bl	vListInitialiseItem
 247              	.LVL21:
 930:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 248              		.loc 1 930 0
 249 005a 2461     		str	r4, [r4, #16]
 933:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 250              		.loc 1 933 0
 251 005c C5F10705 		rsb	r5, r5, #7
 252              	.LVL22:
 253 0060 A561     		str	r5, [r4, #24]
 934:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 254              		.loc 1 934 0
 255 0062 6462     		str	r4, [r4, #36]
 976:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 256              		.loc 1 976 0
 257 0064 C4F84CA0 		str	r10, [r4, #76]
 977:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 258              		.loc 1 977 0
 259 0068 84F850A0 		strb	r10, [r4, #80]
1004:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
ARM GAS  /tmp/ccOm33QJ.s 			page 75


 260              		.loc 1 1004 0
 261 006c 4A46     		mov	r2, r9
 262 006e 4146     		mov	r1, r8
 263 0070 3046     		mov	r0, r6
 264 0072 FFF7FEFF 		bl	pxPortInitialiseStack
 265              	.LVL23:
 266 0076 2060     		str	r0, [r4]
1008:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 267              		.loc 1 1008 0
 268 0078 07B1     		cbz	r7, .L25
1012:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 269              		.loc 1 1012 0
 270 007a 3C60     		str	r4, [r7]
 271              	.L25:
 272 007c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 273              		.cfi_endproc
 274              	.LFE7:
 276              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 277              		.align	1
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu fpv4-sp-d16
 283              	prvInitialiseTaskLists:
 284              	.LFB37:
3431:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** UBaseType_t uxPriority;
 285              		.loc 1 3431 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 38B5     		push	{r3, r4, r5, lr}
 290              	.LCFI1:
 291              		.cfi_def_cfa_offset 16
 292              		.cfi_offset 3, -16
 293              		.cfi_offset 4, -12
 294              		.cfi_offset 5, -8
 295              		.cfi_offset 14, -4
 296              	.LVL24:
3434:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 297              		.loc 1 3434 0
 298 0002 0024     		movs	r4, #0
 299 0004 07E0     		b	.L34
 300              	.LVL25:
 301              	.L35:
3436:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 302              		.loc 1 3436 0 discriminator 3
 303 0006 04EB8402 		add	r2, r4, r4, lsl #2
 304 000a 9300     		lsls	r3, r2, #2
 305 000c 0E48     		ldr	r0, .L37
 306 000e 1844     		add	r0, r0, r3
 307 0010 FFF7FEFF 		bl	vListInitialise
 308              	.LVL26:
3434:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 309              		.loc 1 3434 0 discriminator 3
 310 0014 0134     		adds	r4, r4, #1
 311              	.LVL27:
 312              	.L34:
ARM GAS  /tmp/ccOm33QJ.s 			page 76


3434:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 313              		.loc 1 3434 0 is_stmt 0 discriminator 1
 314 0016 062C     		cmp	r4, #6
 315 0018 F5D9     		bls	.L35
3439:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 316              		.loc 1 3439 0 is_stmt 1
 317 001a 0C4D     		ldr	r5, .L37+4
 318 001c 2846     		mov	r0, r5
 319 001e FFF7FEFF 		bl	vListInitialise
 320              	.LVL28:
3440:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vListInitialise( &xPendingReadyList );
 321              		.loc 1 3440 0
 322 0022 0B4C     		ldr	r4, .L37+8
 323              	.LVL29:
 324 0024 2046     		mov	r0, r4
 325 0026 FFF7FEFF 		bl	vListInitialise
 326              	.LVL30:
3441:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 327              		.loc 1 3441 0
 328 002a 0A48     		ldr	r0, .L37+12
 329 002c FFF7FEFF 		bl	vListInitialise
 330              	.LVL31:
3445:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 331              		.loc 1 3445 0
 332 0030 0948     		ldr	r0, .L37+16
 333 0032 FFF7FEFF 		bl	vListInitialise
 334              	.LVL32:
3451:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 335              		.loc 1 3451 0
 336 0036 0948     		ldr	r0, .L37+20
 337 0038 FFF7FEFF 		bl	vListInitialise
 338              	.LVL33:
3457:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 339              		.loc 1 3457 0
 340 003c 084B     		ldr	r3, .L37+24
 341 003e 1D60     		str	r5, [r3]
3458:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 342              		.loc 1 3458 0
 343 0040 084B     		ldr	r3, .L37+28
 344 0042 1C60     		str	r4, [r3]
 345 0044 38BD     		pop	{r3, r4, r5, pc}
 346              	.L38:
 347 0046 00BF     		.align	2
 348              	.L37:
 349 0048 00000000 		.word	.LANCHOR4
 350 004c 00000000 		.word	.LANCHOR5
 351 0050 00000000 		.word	.LANCHOR6
 352 0054 00000000 		.word	.LANCHOR1
 353 0058 00000000 		.word	.LANCHOR7
 354 005c 00000000 		.word	.LANCHOR0
 355 0060 00000000 		.word	.LANCHOR2
 356 0064 00000000 		.word	.LANCHOR8
 357              		.cfi_endproc
 358              	.LFE37:
 360              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
ARM GAS  /tmp/ccOm33QJ.s 			page 77


 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv4-sp-d16
 367              	prvAddNewTaskToReadyList:
 368              	.LFB8:
1022:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 369              		.loc 1 1022 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              	.LVL34:
 374 0000 10B5     		push	{r4, lr}
 375              	.LCFI2:
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 4, -8
 378              		.cfi_offset 14, -4
 379 0002 0446     		mov	r4, r0
1025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 380              		.loc 1 1025 0
 381 0004 FFF7FEFF 		bl	vPortEnterCritical
 382              	.LVL35:
1027:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxCurrentTCB == NULL )
 383              		.loc 1 1027 0
 384 0008 204A     		ldr	r2, .L45
 385 000a 1368     		ldr	r3, [r2]
 386 000c 0133     		adds	r3, r3, #1
 387 000e 1360     		str	r3, [r2]
1028:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 388              		.loc 1 1028 0
 389 0010 1F4B     		ldr	r3, .L45+4
 390 0012 1B68     		ldr	r3, [r3]
 391 0014 002B     		cmp	r3, #0
 392 0016 31D0     		beq	.L44
1051:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 393              		.loc 1 1051 0
 394 0018 1E4B     		ldr	r3, .L45+8
 395 001a 1B68     		ldr	r3, [r3]
 396 001c 3BB9     		cbnz	r3, .L41
1053:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 397              		.loc 1 1053 0
 398 001e 1C4B     		ldr	r3, .L45+4
 399 0020 1B68     		ldr	r3, [r3]
 400 0022 DA6A     		ldr	r2, [r3, #44]
 401 0024 E36A     		ldr	r3, [r4, #44]
 402 0026 9A42     		cmp	r2, r3
 403 0028 01D8     		bhi	.L41
1055:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 404              		.loc 1 1055 0
 405 002a 194B     		ldr	r3, .L45+4
 406 002c 1C60     		str	r4, [r3]
 407              	.L41:
1068:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 408              		.loc 1 1068 0
 409 002e 1A4A     		ldr	r2, .L45+12
 410 0030 1368     		ldr	r3, [r2]
 411 0032 0133     		adds	r3, r3, #1
 412 0034 1360     		str	r3, [r2]
ARM GAS  /tmp/ccOm33QJ.s 			page 78


1078:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 413              		.loc 1 1078 0
 414 0036 E36A     		ldr	r3, [r4, #44]
 415 0038 0122     		movs	r2, #1
 416 003a 9A40     		lsls	r2, r2, r3
 417 003c 1749     		ldr	r1, .L45+16
 418 003e 0868     		ldr	r0, [r1]
 419 0040 0243     		orrs	r2, r2, r0
 420 0042 0A60     		str	r2, [r1]
 421 0044 03EB8303 		add	r3, r3, r3, lsl #2
 422 0048 9A00     		lsls	r2, r3, #2
 423 004a 211D     		adds	r1, r4, #4
 424 004c 1448     		ldr	r0, .L45+20
 425 004e 1044     		add	r0, r0, r2
 426 0050 FFF7FEFF 		bl	vListInsertEnd
 427              	.LVL36:
1082:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 428              		.loc 1 1082 0
 429 0054 FFF7FEFF 		bl	vPortExitCritical
 430              	.LVL37:
1084:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 431              		.loc 1 1084 0
 432 0058 0E4B     		ldr	r3, .L45+8
 433 005a 1B68     		ldr	r3, [r3]
 434 005c 6BB1     		cbz	r3, .L39
1088:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 435              		.loc 1 1088 0
 436 005e 0C4B     		ldr	r3, .L45+4
 437 0060 1B68     		ldr	r3, [r3]
 438 0062 DA6A     		ldr	r2, [r3, #44]
 439 0064 E36A     		ldr	r3, [r4, #44]
 440 0066 9A42     		cmp	r2, r3
 441 0068 07D2     		bcs	.L39
1090:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 442              		.loc 1 1090 0
 443 006a 4FF08052 		mov	r2, #268435456
 444 006e 0D4B     		ldr	r3, .L45+24
 445 0070 1A60     		str	r2, [r3]
 446              		.syntax unified
 447              	@ 1090 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 448 0072 BFF34F8F 		dsb
 449              	@ 0 "" 2
 450              	@ 1090 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 451 0076 BFF36F8F 		isb
 452              	@ 0 "" 2
 453              		.thumb
 454              		.syntax unified
 455              	.L39:
 456 007a 10BD     		pop	{r4, pc}
 457              	.LVL38:
 458              	.L44:
1032:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 459              		.loc 1 1032 0
 460 007c 044B     		ldr	r3, .L45+4
 461 007e 1C60     		str	r4, [r3]
1034:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 462              		.loc 1 1034 0
ARM GAS  /tmp/ccOm33QJ.s 			page 79


 463 0080 1368     		ldr	r3, [r2]
 464 0082 012B     		cmp	r3, #1
 465 0084 D3D1     		bne	.L41
1039:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 466              		.loc 1 1039 0
 467 0086 FFF7FEFF 		bl	prvInitialiseTaskLists
 468              	.LVL39:
 469 008a D0E7     		b	.L41
 470              	.L46:
 471              		.align	2
 472              	.L45:
 473 008c 00000000 		.word	.LANCHOR9
 474 0090 00000000 		.word	.LANCHOR10
 475 0094 00000000 		.word	.LANCHOR11
 476 0098 00000000 		.word	.LANCHOR12
 477 009c 00000000 		.word	.LANCHOR13
 478 00a0 00000000 		.word	.LANCHOR4
 479 00a4 04ED00E0 		.word	-536810236
 480              		.cfi_endproc
 481              	.LFE8:
 483              		.section	.text.prvDeleteTCB,"ax",%progbits
 484              		.align	1
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu fpv4-sp-d16
 490              	prvDeleteTCB:
 491              	.LFB39:
3671:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 492              		.loc 1 3671 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              	.LVL40:
 497 0000 10B5     		push	{r4, lr}
 498              	.LCFI3:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 4, -8
 501              		.cfi_offset 14, -4
 502 0002 0446     		mov	r4, r0
3697:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 503              		.loc 1 3697 0
 504 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 505 0008 63B1     		cbz	r3, .L53
3704:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 506              		.loc 1 3704 0
 507 000a 012B     		cmp	r3, #1
 508 000c 11D0     		beq	.L54
3714:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 509              		.loc 1 3714 0
 510 000e 022B     		cmp	r3, #2
 511 0010 12D0     		beq	.L47
 512              	.LBB106:
 513              	.LBB107:
 514              		.loc 2 195 0
 515              		.syntax unified
 516              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
ARM GAS  /tmp/ccOm33QJ.s 			page 80


 517 0012 4FF05003 			mov r3, #80												
 518 0016 83F31188 		msr basepri, r3											
 519 001a BFF36F8F 		isb														
 520 001e BFF34F8F 		dsb														
 521              	
 522              	@ 0 "" 2
 523              	.LVL41:
 524              		.thumb
 525              		.syntax unified
 526              	.L51:
 527 0022 FEE7     		b	.L51
 528              	.L53:
 529              	.LBE107:
 530              	.LBE106:
3701:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vPortFree( pxTCB );
 531              		.loc 1 3701 0
 532 0024 006B     		ldr	r0, [r0, #48]
 533              	.LVL42:
 534 0026 FFF7FEFF 		bl	vPortFree
 535              	.LVL43:
3702:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 536              		.loc 1 3702 0
 537 002a 2046     		mov	r0, r4
 538 002c FFF7FEFF 		bl	vPortFree
 539              	.LVL44:
 540 0030 10BD     		pop	{r4, pc}
 541              	.LVL45:
 542              	.L54:
3708:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 543              		.loc 1 3708 0
 544 0032 FFF7FEFF 		bl	vPortFree
 545              	.LVL46:
 546 0036 10BD     		pop	{r4, pc}
 547              	.LVL47:
 548              	.L47:
 549 0038 10BD     		pop	{r4, pc}
 550              		.cfi_endproc
 551              	.LFE39:
 553              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 554              		.align	1
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu fpv4-sp-d16
 560              	prvCheckTasksWaitingTermination:
 561              	.LFB38:
3463:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 562              		.loc 1 3463 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              	.LBB108:
3473:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 567              		.loc 1 3473 0
 568 0000 0F4B     		ldr	r3, .L62
 569 0002 1B68     		ldr	r3, [r3]
 570 0004 D3B1     		cbz	r3, .L61
ARM GAS  /tmp/ccOm33QJ.s 			page 81


 571              	.LBE108:
3463:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 572              		.loc 1 3463 0
 573 0006 10B5     		push	{r4, lr}
 574              	.LCFI4:
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 4, -8
 577              		.cfi_offset 14, -4
 578              	.L57:
 579              	.LBB109:
3475:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 580              		.loc 1 3475 0
 581 0008 FFF7FEFF 		bl	vPortEnterCritical
 582              	.LVL48:
3477:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 583              		.loc 1 3477 0
 584 000c 0D4B     		ldr	r3, .L62+4
 585 000e DB68     		ldr	r3, [r3, #12]
 586 0010 DC68     		ldr	r4, [r3, #12]
 587              	.LVL49:
3478:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				--uxCurrentNumberOfTasks;
 588              		.loc 1 3478 0
 589 0012 201D     		adds	r0, r4, #4
 590 0014 FFF7FEFF 		bl	uxListRemove
 591              	.LVL50:
3479:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 592              		.loc 1 3479 0
 593 0018 0B4A     		ldr	r2, .L62+8
 594 001a 1368     		ldr	r3, [r2]
 595 001c 013B     		subs	r3, r3, #1
 596 001e 1360     		str	r3, [r2]
3480:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 597              		.loc 1 3480 0
 598 0020 074A     		ldr	r2, .L62
 599 0022 1368     		ldr	r3, [r2]
 600 0024 013B     		subs	r3, r3, #1
 601 0026 1360     		str	r3, [r2]
3482:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 602              		.loc 1 3482 0
 603 0028 FFF7FEFF 		bl	vPortExitCritical
 604              	.LVL51:
3484:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 605              		.loc 1 3484 0
 606 002c 2046     		mov	r0, r4
 607 002e FFF7FEFF 		bl	prvDeleteTCB
 608              	.LVL52:
3473:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 609              		.loc 1 3473 0
 610 0032 034B     		ldr	r3, .L62
 611 0034 1B68     		ldr	r3, [r3]
 612 0036 002B     		cmp	r3, #0
 613 0038 E6D1     		bne	.L57
 614              	.LBE109:
3488:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 615              		.loc 1 3488 0
 616 003a 10BD     		pop	{r4, pc}
 617              	.LVL53:
ARM GAS  /tmp/ccOm33QJ.s 			page 82


 618              	.L61:
 619              	.LCFI5:
 620              		.cfi_def_cfa_offset 0
 621              		.cfi_restore 4
 622              		.cfi_restore 14
 623 003c 7047     		bx	lr
 624              	.L63:
 625 003e 00BF     		.align	2
 626              	.L62:
 627 0040 00000000 		.word	.LANCHOR14
 628 0044 00000000 		.word	.LANCHOR7
 629 0048 00000000 		.word	.LANCHOR9
 630              		.cfi_endproc
 631              	.LFE38:
 633              		.section	.text.prvIdleTask,"ax",%progbits
 634              		.align	1
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu fpv4-sp-d16
 640              	prvIdleTask:
 641              	.LFB36:
3219:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Stop warnings. */
 642              		.loc 1 3219 0
 643              		.cfi_startproc
 644              		@ Volatile: function does not return.
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              	.LVL54:
 648 0000 08B5     		push	{r3, lr}
 649              	.LCFI6:
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 3, -8
 652              		.cfi_offset 14, -4
 653              	.LVL55:
 654              	.L65:
3235:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 655              		.loc 1 3235 0
 656 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 657              	.LVL56:
3258:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 658              		.loc 1 3258 0
 659 0006 064B     		ldr	r3, .L68
 660 0008 1B68     		ldr	r3, [r3]
 661 000a 012B     		cmp	r3, #1
 662 000c F9D9     		bls	.L65
3260:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 663              		.loc 1 3260 0
 664 000e 4FF08052 		mov	r2, #268435456
 665 0012 044B     		ldr	r3, .L68+4
 666 0014 1A60     		str	r2, [r3]
 667              		.syntax unified
 668              	@ 3260 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 669 0016 BFF34F8F 		dsb
 670              	@ 0 "" 2
 671              	@ 3260 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 672 001a BFF36F8F 		isb
ARM GAS  /tmp/ccOm33QJ.s 			page 83


 673              	@ 0 "" 2
 674              		.thumb
 675              		.syntax unified
 676 001e F0E7     		b	.L65
 677              	.L69:
 678              		.align	2
 679              	.L68:
 680 0020 00000000 		.word	.LANCHOR4
 681 0024 04ED00E0 		.word	-536810236
 682              		.cfi_endproc
 683              	.LFE36:
 685              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 686              		.align	1
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu fpv4-sp-d16
 692              	prvAddCurrentTaskToDelayedList:
 693              	.LFB54:
3744:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3745:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
3746:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3747:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3748:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3749:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3750:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3751:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3752:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHandle_t xReturn;
3753:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3754:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* A critical section is not required as this is not called from
3755:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3756:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		individual execution thread. */
3757:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xReturn = pxCurrentTCB;
3758:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3759:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
3760:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3761:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3762:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3763:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3764:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3765:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3766:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3767:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3768:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3769:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn;
3770:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3771:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3772:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3773:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3774:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3775:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3776:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3777:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3778:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3779:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3780:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3781:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
ARM GAS  /tmp/ccOm33QJ.s 			page 84


3782:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3783:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3784:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3785:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3786:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3787:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
3788:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3789:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3790:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3791:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3792:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3793:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3794:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3795:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3796:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3797:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3798:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3799:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3800:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3801:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3802:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3803:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxMutexHolder != NULL )
3804:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3805:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3806:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3807:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3808:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3809:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3810:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3811:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				priority.  Only reset the event list item value if the value is
3812:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				not being used for anything else. */
3813:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3814:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3815:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3816:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3817:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
3818:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3819:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3820:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3821:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3822:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* If the task being modified is in the ready state it will need
3823:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				to be moved into a new list. */
3824:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3825:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3826:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3827:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
3828:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3829:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
3830:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
3831:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
3832:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3833:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
3834:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3835:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3836:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3837:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3838:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
ARM GAS  /tmp/ccOm33QJ.s 			page 85


3839:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
3840:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3841:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Just inherit the priority. */
3842:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3843:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3844:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3845:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3846:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3847:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Inheritance occurred. */
3848:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdTRUE;
3849:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3850:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3851:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3852:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3853:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3854:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3855:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					priority of the task attempting to take the mutex, but the
3856:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					current priority of the mutex holder is not lower than the
3857:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					priority of the task attempting to take the mutex.
3858:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					Therefore the mutex holder must have already inherited a
3859:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					priority, but inheritance would have occurred if that had
3860:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					not been the case. */
3861:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xReturn = pdTRUE;
3862:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3863:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
3864:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3865:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3866:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3867:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3868:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3869:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3870:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3871:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3872:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3873:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3874:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
3875:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3876:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3877:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_MUTEXES */
3878:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3879:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3880:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3881:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3882:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3884:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3886:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3887:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxMutexHolder != NULL )
3888:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3889:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3891:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3892:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			be the running state task. */
3893:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3894:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3895:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
ARM GAS  /tmp/ccOm33QJ.s 			page 86


3896:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3897:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3898:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			task? */
3899:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3900:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3901:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3902:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3903:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3904:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* A task can only have an inherited priority if it holds
3905:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3906:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3907:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					holding task then it must be the running state task.  Remove
3908:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					the holding task from the ready list. */
3909:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3910:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
3911:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3912:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
3913:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
3914:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
3915:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3916:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
3917:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3918:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Disinherit the priority before adding the task into the
3919:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					new	ready list. */
3920:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3921:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3922:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3923:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3924:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					any other purpose if this task is running, and it must be
3925:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					running to give back the mutex. */
3926:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3927:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3928:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3929:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Return true to indicate that a context switch is required.
3930:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					This is only actually required in the corner case whereby
3931:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3932:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					in an order different to that in which they were taken.
3933:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					If a context switch did not occur when the first mutex was
3934:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					returned, even if a task was waiting on it, then a context
3935:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					switch should occur when the last mutex is returned whether
3936:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					a task is waiting on it or not. */
3937:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xReturn = pdTRUE;
3938:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3939:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
3940:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3941:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3942:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
3943:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3944:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3945:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3946:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3947:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3948:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
3949:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
3950:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3951:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3952:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
ARM GAS  /tmp/ccOm33QJ.s 			page 87


3953:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3954:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
3955:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
3956:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3957:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_MUTEXES */
3958:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
3959:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3960:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3961:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3962:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3963:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
3964:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3965:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3966:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3967:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3968:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxMutexHolder != NULL )
3969:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
3970:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3971:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			one mutex. */
3972:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3973:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3974:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Determine the priority to which the priority of the task that
3975:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3976:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			holding task's base priority and the priority of the highest
3977:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3978:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3979:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3980:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3981:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3982:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
3983:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3984:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
3985:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
3986:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
3987:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Does the priority need to change? */
3988:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
3989:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
3990:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3991:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				simplification in the priority inheritance implementation.  If
3992:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3993:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
3994:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
3995:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
3996:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* If a task has timed out because it already holds the
3997:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
3998:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					its own priority. */
3999:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4000:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4001:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Disinherit the priority, remembering the previous
4002:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					priority to facilitate determining the subject task's
4003:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					state. */
4004:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4005:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4006:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4007:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4008:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Only reset the event list item value if the value is not
4009:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					being used for anything else. */
ARM GAS  /tmp/ccOm33QJ.s 			page 88


4010:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4011:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4012:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4013:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4014:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
4015:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4016:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4017:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4018:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4019:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* If the running task is not the task that holds the mutex
4020:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					then the task that holds the mutex could be in either the
4021:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4022:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					from its current state list if it is in the Ready state as
4023:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					the task's priority is going to change and there is one
4024:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					Ready list per priority. */
4025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4026:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4027:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4028:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
4029:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4030:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
4031:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						else
4032:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
4033:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4034:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
4035:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4036:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4037:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4038:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
4039:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4040:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4041:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4042:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4043:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4044:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4045:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4046:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4047:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4048:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4049:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4050:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4051:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4052:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4053:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
4054:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4055:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4056:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4057:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4058:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4059:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_MUTEXES */
4060:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4061:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4062:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4063:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4064:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskEnterCritical( void )
4065:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4066:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portDISABLE_INTERRUPTS();
ARM GAS  /tmp/ccOm33QJ.s 			page 89


4067:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4068:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4069:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4070:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4071:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4072:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4073:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			function so	assert() if it is being called from an interrupt
4074:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4075:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4076:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			protect against recursive calls if the assert function also uses a
4077:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			critical section. */
4078:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4079:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4080:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				portASSERT_IF_IN_ISR();
4081:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4082:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4083:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
4084:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4085:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4086:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4087:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4088:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4089:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4090:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4091:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4092:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4093:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4094:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskExitCritical( void )
4095:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4096:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4097:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4098:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4099:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4100:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4101:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4102:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4103:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4104:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					portENABLE_INTERRUPTS();
4105:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4106:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4107:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4108:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4109:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4110:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4111:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4112:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4113:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4114:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4115:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4116:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
4117:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4118:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4120:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4121:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4122:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4123:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccOm33QJ.s 			page 90


4124:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4125:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4126:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4127:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4128:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4129:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	size_t x;
4130:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4131:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Start by copying the entire string. */
4132:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4133:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4134:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4135:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		printed out. */
4136:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4137:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4138:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pcBuffer[ x ] = ' ';
4139:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4140:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4141:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Terminate. */
4142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pcBuffer[ x ] = 0x00;
4143:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4144:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Return the new end of string. */
4145:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return &( pcBuffer[ x ] );
4146:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4147:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4148:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4149:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4150:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4151:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4152:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4153:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4154:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4155:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4156:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4157:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	char cStatus;
4158:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4159:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/*
4160:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * PLEASE NOTE:
4161:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 *
4162:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4163:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4164:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * scheduler.
4165:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 *
4166:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4167:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4168:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * displays task names, states and stack usage.
4169:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 *
4170:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4171:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4172:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4173:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4174:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4175:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4176:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * snprintf() implementation!).
4177:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 *
4178:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4179:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4180:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * through a call to vTaskList().
ARM GAS  /tmp/ccOm33QJ.s 			page 91


4181:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 */
4182:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4183:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4184:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4185:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		*pcWriteBuffer = 0x00;
4186:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4187:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4188:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		function is executing. */
4189:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4190:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4191:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4192:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4193:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		equate to NULL. */
4194:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4196:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxTaskStatusArray != NULL )
4197:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4198:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Generate the (binary) data. */
4199:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4200:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4201:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Create a human readable table from the binary data. */
4202:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4203:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4204:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4205:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4206:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4207:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										break;
4208:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4209:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4210:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										break;
4211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4212:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4213:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										break;
4214:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4215:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4216:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										break;
4217:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4218:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4219:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										break;
4220:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4221:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					default:			/* Should not get here, but it is included
4222:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										to prevent static checking errors. */
4223:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										cStatus = 0x00;
4224:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 										break;
4225:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4226:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4227:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4228:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				can be printed in tabular form more easily. */
4229:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4230:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4231:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Write the rest of the string. */
4232:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4233:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4234:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4235:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4236:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4237:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
ARM GAS  /tmp/ccOm33QJ.s 			page 92


4238:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vPortFree( pxTaskStatusArray );
4239:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4240:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
4241:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4242:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4243:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4244:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4245:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4246:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4247:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*----------------------------------------------------------*/
4248:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4249:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4250:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4251:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4252:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4253:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4254:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4255:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4256:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4257:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4258:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4259:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4260:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4261:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		#endif
4262:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4263:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/*
4264:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * PLEASE NOTE:
4265:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 *
4266:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4267:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4268:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * scheduler.
4269:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 *
4270:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4271:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4272:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4273:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * in both absolute and percentage terms.
4274:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 *
4275:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4276:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4277:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4278:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4279:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4280:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4281:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * a full snprintf() implementation!).
4282:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 *
4283:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4284:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4285:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4286:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		 */
4287:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4288:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4289:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		*pcWriteBuffer = 0x00;
4290:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4291:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4292:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		function is executing. */
4293:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4294:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 93


4295:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4296:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4297:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		equate to NULL. */
4298:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4299:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4300:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxTaskStatusArray != NULL )
4301:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4302:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Generate the (binary) data. */
4303:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4304:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4305:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* For percentage calculations. */
4306:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			ulTotalTime /= 100UL;
4307:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4308:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Avoid divide by zero errors. */
4309:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( ulTotalTime > 0 )
4310:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4311:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Create a human readable table from the binary data. */
4312:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4313:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4314:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* What percentage of the total run time has the task used?
4315:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					This will always be rounded down to the nearest integer.
4316:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4317:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4318:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4319:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* Write the task name to the string, padding with
4320:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					spaces so it can be printed in tabular form more
4321:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					easily. */
4322:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4323:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4324:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4325:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4326:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4327:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
4328:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4329:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
4330:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#else
4331:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
4332:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4333:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							printf() library can be used. */
4334:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4335:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
4336:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#endif
4337:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4338:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
4339:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4340:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* If the percentage is zero here then the task has
4341:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						consumed less than 1% of the total run time. */
4342:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4343:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
4344:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4345:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
4346:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#else
4347:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
4348:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4349:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							printf() library can be used. */
4350:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4351:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
ARM GAS  /tmp/ccOm33QJ.s 			page 94


4352:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						#endif
4353:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4354:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4355:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4356:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4357:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4358:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4359:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4360:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4361:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4362:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4363:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4364:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4365:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vPortFree( pxTaskStatusArray );
4366:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4367:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
4368:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4369:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4370:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4371:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4372:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4373:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4374:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4375:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4376:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4377:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
4378:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t uxReturn;
4379:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4380:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4381:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4382:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4383:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	queues and semaphores. */
4384:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4385:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4386:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return uxReturn;
4387:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
4388:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4389:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4390:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4391:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4392:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4393:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4394:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4395:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		then pxCurrentTCB will be NULL. */
4396:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( pxCurrentTCB != NULL )
4397:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4398:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4399:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4400:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4401:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return pxCurrentTCB;
4402:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4403:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4404:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_MUTEXES */
4405:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4406:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4407:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4408:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 95


4409:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4410:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4411:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint32_t ulReturn;
4412:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4413:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
4414:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4415:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4416:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4417:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4418:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Mark this task as waiting for a notification. */
4419:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4420:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4421:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4422:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4423:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4424:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4425:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4426:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* All ports are written to allow a yield in a critical
4427:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					section (some will yield immediately, others wait until the
4428:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					critical section exits) - but it is not something that
4429:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					application code should ever do. */
4430:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					portYIELD_WITHIN_API();
4431:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4432:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4433:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4434:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4435:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4436:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4437:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4438:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4439:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4440:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4441:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4442:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
4443:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4444:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
4445:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4446:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4447:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4448:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4449:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( ulReturn != 0UL )
4450:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4451:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4452:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4453:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4454:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4455:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4456:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4457:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4458:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4459:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4460:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4461:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4462:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4463:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4464:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4465:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
ARM GAS  /tmp/ccOm33QJ.s 			page 96


4466:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4467:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
4468:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4469:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return ulReturn;
4470:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4471:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4472:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4473:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4474:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4475:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4476:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4477:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4478:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4479:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn;
4480:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4481:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
4482:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4483:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Only block if a notification is not already pending. */
4484:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4485:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4486:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4487:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4488:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				clear the value to zero. */
4489:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4490:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4491:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Mark this task as waiting for a notification. */
4492:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4493:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4494:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4495:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4496:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4497:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4498:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4499:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* All ports are written to allow a yield in a critical
4500:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					section (some will yield immediately, others wait until the
4501:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					critical section exits) - but it is not something that
4502:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					application code should ever do. */
4503:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					portYIELD_WITHIN_API();
4504:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4505:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4506:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4507:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4508:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4509:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4510:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4511:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4512:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4513:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4514:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4515:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
4516:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4517:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
4518:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4519:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4520:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4521:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pulNotificationValue != NULL )
4522:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
ARM GAS  /tmp/ccOm33QJ.s 			page 97


4523:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Output the current notification value, which may or may not
4524:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				have changed. */
4525:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4526:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4527:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4528:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4529:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			blocked state (because a notification was already pending) or the
4530:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4531:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			unblocked because of a timeout. */
4532:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4533:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4534:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* A notification was not received. */
4535:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdFALSE;
4536:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4537:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4538:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4539:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* A notification was already pending or a notification was
4540:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				received while the task was waiting. */
4541:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4542:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdTRUE;
4543:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4544:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4545:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4546:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4547:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
4548:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4549:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
4550:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4551:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4552:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4553:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4554:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4555:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4556:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4557:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4558:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4559:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * pxTCB;
4560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn = pdPASS;
4561:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint8_t ucOriginalNotifyState;
4562:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4563:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( xTaskToNotify );
4564:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4565:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4566:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
4567:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4568:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4569:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4570:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4571:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4572:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4573:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4574:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4575:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4576:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4577:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			switch( eAction )
4578:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4579:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eSetBits	:
ARM GAS  /tmp/ccOm33QJ.s 			page 98


4580:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4581:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4582:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4583:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eIncrement	:
4584:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4585:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4586:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4587:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eSetValueWithOverwrite	:
4588:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4589:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4590:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4591:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eSetValueWithoutOverwrite :
4592:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4593:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4594:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4595:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4596:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
4597:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4598:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* The value could not be written to the task. */
4599:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xReturn = pdFAIL;
4600:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4601:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4602:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4603:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eNoAction:
4604:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The task is being notified without its notify value being
4605:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					updated. */
4606:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4607:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4608:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4609:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			traceTASK_NOTIFY();
4610:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4611:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4612:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			notification then unblock it now. */
4613:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4614:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4615:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4617:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4618:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The task should not have been on an event list. */
4619:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4620:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4621:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4622:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4623:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* If a task is blocked waiting for a notification then
4624:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4625:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4626:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4627:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					because it will automatically get reset to a new value when
4628:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4629:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					tickless idling is used it might be more important to enter
4630:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					sleep mode at the earliest possible time - so reset
4631:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4632:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					earliest possible time. */
4633:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvResetNextTaskUnblockTime();
4634:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4635:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				#endif
4636:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 99


4637:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4638:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4639:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The notified task has a priority above the currently
4640:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					executing task so a yield is required. */
4641:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4642:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4643:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4644:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4645:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4646:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4647:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4648:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4649:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4650:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4651:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4652:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4653:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
4654:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4655:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
4656:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4657:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4658:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4659:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4660:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4661:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4662:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4663:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4664:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4665:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * pxTCB;
4666:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint8_t ucOriginalNotifyState;
4667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn = pdPASS;
4668:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4669:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4670:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( xTaskToNotify );
4671:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4672:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4673:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4674:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4675:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4676:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4677:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		is defined in FreeRTOSConfig.h then
4678:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4679:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4680:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		been assigned a priority above the configured maximum system call
4681:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4682:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4683:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4684:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4685:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4686:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		provided on the following link:
4687:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4688:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4689:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4690:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4691:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4692:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4693:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
ARM GAS  /tmp/ccOm33QJ.s 			page 100


4694:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4695:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4696:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4697:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4698:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4699:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4700:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4701:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4702:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			switch( eAction )
4703:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4704:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eSetBits	:
4705:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4706:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4707:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4708:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eIncrement	:
4709:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4710:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4711:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4712:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eSetValueWithOverwrite	:
4713:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4714:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4715:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4716:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eSetValueWithoutOverwrite :
4717:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4718:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4719:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4720:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4721:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
4722:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4723:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* The value could not be written to the task. */
4724:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xReturn = pdFAIL;
4725:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4726:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4727:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4728:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				case eNoAction :
4729:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The task is being notified without its notify value being
4730:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					updated. */
4731:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
4732:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4733:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4734:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4735:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4736:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4737:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			notification then unblock it now. */
4738:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4739:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4740:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The task should not have been on an event list. */
4741:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4742:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4743:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4744:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4745:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4746:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4747:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4748:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4749:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4750:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
ARM GAS  /tmp/ccOm33QJ.s 			page 101


4751:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					this task pending until the scheduler is resumed. */
4752:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4753:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4754:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4755:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4756:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4757:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The notified task has a priority above the currently
4758:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					executing task so a yield is required. */
4759:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4760:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4761:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4762:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4763:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
4764:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4765:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4766:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4767:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						safe FreeRTOS function. */
4768:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xYieldPending = pdTRUE;
4769:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4770:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4771:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4772:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4773:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4774:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4775:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4776:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4777:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4778:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4779:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
4780:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4781:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4782:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4783:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4784:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4785:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4786:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4787:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4788:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4789:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * pxTCB;
4790:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint8_t ucOriginalNotifyState;
4791:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4792:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4793:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( xTaskToNotify );
4794:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4795:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4796:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4797:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4798:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4799:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4800:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		is defined in FreeRTOSConfig.h then
4801:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4802:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4803:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		been assigned a priority above the configured maximum system call
4804:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4805:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4806:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4807:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
ARM GAS  /tmp/ccOm33QJ.s 			page 102


4808:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4809:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		provided on the following link:
4810:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4811:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4812:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4813:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4814:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4815:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4816:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4817:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4818:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4819:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4820:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4821:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			semaphore. */
4822:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4823:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4824:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4825:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4826:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4827:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			notification then unblock it now. */
4828:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4829:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4830:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The task should not have been on an event list. */
4831:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4832:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4833:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4834:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4835:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4836:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4837:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4838:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4839:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4840:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4841:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					this task pending until the scheduler is resumed. */
4842:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4843:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4844:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4845:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4846:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4847:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					/* The notified task has a priority above the currently
4848:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					executing task so a yield is required. */
4849:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4850:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4851:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4852:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4853:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					else
4854:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
4855:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4856:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4857:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						safe FreeRTOS function. */
4858:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						xYieldPending = pdTRUE;
4859:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
4860:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
4861:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				else
4862:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4863:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4864:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
ARM GAS  /tmp/ccOm33QJ.s 			page 103


4865:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4866:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4867:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4868:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4869:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4870:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4871:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4872:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4873:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4874:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4875:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4876:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4877:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4878:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
4879:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn;
4880:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4881:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4882:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		its notification state cleared. */
4883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4884:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskENTER_CRITICAL();
4886:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4887:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4888:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4889:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdPASS;
4891:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4892:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4893:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4894:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdFAIL;
4895:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4896:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4897:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		taskEXIT_CRITICAL();
4898:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4899:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		return xReturn;
4900:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4901:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4902:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4903:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
4904:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4905:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4906:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4907:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** {
 694              		.loc 1 4907 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              	.LVL57:
 699 0000 70B5     		push	{r4, r5, r6, lr}
 700              	.LCFI7:
 701              		.cfi_def_cfa_offset 16
 702              		.cfi_offset 4, -16
 703              		.cfi_offset 5, -12
 704              		.cfi_offset 6, -8
 705              		.cfi_offset 14, -4
 706 0002 0446     		mov	r4, r0
 707 0004 0E46     		mov	r6, r1
ARM GAS  /tmp/ccOm33QJ.s 			page 104


4908:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t xTimeToWake;
4909:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 708              		.loc 1 4909 0
 709 0006 1D4B     		ldr	r3, .L78
 710 0008 1D68     		ldr	r5, [r3]
 711              	.LVL58:
4910:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4911:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4912:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4913:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4914:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4915:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		when the task leaves the Blocked state. */
4916:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4917:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4918:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#endif
4919:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4920:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4921:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	as the same list item is used for both lists. */
4922:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 712              		.loc 1 4922 0
 713 000a 1D4B     		ldr	r3, .L78+4
 714 000c 1868     		ldr	r0, [r3]
 715              	.LVL59:
 716 000e 0430     		adds	r0, r0, #4
 717 0010 FFF7FEFF 		bl	uxListRemove
 718              	.LVL60:
 719 0014 50B9     		cbnz	r0, .L71
4923:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4924:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4925:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		check, and the port reset macro can be called directly. */
4926:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 720              		.loc 1 4926 0
 721 0016 1A4B     		ldr	r3, .L78+4
 722 0018 1B68     		ldr	r3, [r3]
 723 001a DA6A     		ldr	r2, [r3, #44]
 724 001c 0123     		movs	r3, #1
 725 001e 03FA02F2 		lsl	r2, r3, r2
 726 0022 1849     		ldr	r1, .L78+8
 727 0024 0B68     		ldr	r3, [r1]
 728 0026 23EA0203 		bic	r3, r3, r2
 729 002a 0B60     		str	r3, [r1]
 730              	.L71:
4927:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4928:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	else
4929:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4930:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4931:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
4932:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4933:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4934:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
4935:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 731              		.loc 1 4935 0
 732 002c B4F1FF3F 		cmp	r4, #-1
 733 0030 13D0     		beq	.L76
 734              	.L72:
4936:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4937:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
ARM GAS  /tmp/ccOm33QJ.s 			page 105


4938:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4939:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			indefinitely. */
4940:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4941:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
4942:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		else
4943:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
4944:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4945:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4946:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			kernel will manage it correctly. */
4947:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 735              		.loc 1 4947 0
 736 0032 2C44     		add	r4, r4, r5
 737              	.LVL61:
4948:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4949:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			/* The list item will be inserted in wake time order. */
4950:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 738              		.loc 1 4950 0
 739 0034 124B     		ldr	r3, .L78+4
 740 0036 1B68     		ldr	r3, [r3]
 741 0038 5C60     		str	r4, [r3, #4]
4951:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4952:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 742              		.loc 1 4952 0
 743 003a A542     		cmp	r5, r4
 744 003c 16D8     		bhi	.L77
4953:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4954:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4955:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				list. */
4956:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4957:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
4958:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			else
4959:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
4960:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4961:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				is used. */
4962:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 745              		.loc 1 4962 0
 746 003e 124B     		ldr	r3, .L78+12
 747 0040 1868     		ldr	r0, [r3]
 748 0042 0F4B     		ldr	r3, .L78+4
 749 0044 1968     		ldr	r1, [r3]
 750 0046 0431     		adds	r1, r1, #4
 751 0048 FFF7FEFF 		bl	vListInsert
 752              	.LVL62:
4963:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
4964:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				/* If the task entering the blocked state was placed at the
4965:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4966:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				needs to be updated too. */
4967:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 753              		.loc 1 4967 0
 754 004c 0F4B     		ldr	r3, .L78+16
 755 004e 1B68     		ldr	r3, [r3]
 756 0050 9C42     		cmp	r4, r3
 757 0052 01D2     		bcs	.L70
4968:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
4969:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 758              		.loc 1 4969 0
 759 0054 0D4B     		ldr	r3, .L78+16
ARM GAS  /tmp/ccOm33QJ.s 			page 106


 760 0056 1C60     		str	r4, [r3]
 761              	.L70:
 762 0058 70BD     		pop	{r4, r5, r6, pc}
 763              	.LVL63:
 764              	.L76:
4935:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 765              		.loc 1 4935 0 discriminator 1
 766 005a 002E     		cmp	r6, #0
 767 005c E9D0     		beq	.L72
4940:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 768              		.loc 1 4940 0
 769 005e 084B     		ldr	r3, .L78+4
 770 0060 1968     		ldr	r1, [r3]
 771 0062 0431     		adds	r1, r1, #4
 772 0064 0A48     		ldr	r0, .L78+20
 773 0066 FFF7FEFF 		bl	vListInsertEnd
 774              	.LVL64:
 775 006a 70BD     		pop	{r4, r5, r6, pc}
 776              	.LVL65:
 777              	.L77:
4956:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 778              		.loc 1 4956 0
 779 006c 094B     		ldr	r3, .L78+24
 780 006e 1868     		ldr	r0, [r3]
 781 0070 034B     		ldr	r3, .L78+4
 782 0072 1968     		ldr	r1, [r3]
 783 0074 0431     		adds	r1, r1, #4
 784 0076 FFF7FEFF 		bl	vListInsert
 785              	.LVL66:
 786 007a 70BD     		pop	{r4, r5, r6, pc}
 787              	.LVL67:
 788              	.L79:
 789              		.align	2
 790              	.L78:
 791 007c 00000000 		.word	.LANCHOR15
 792 0080 00000000 		.word	.LANCHOR10
 793 0084 00000000 		.word	.LANCHOR13
 794 0088 00000000 		.word	.LANCHOR2
 795 008c 00000000 		.word	.LANCHOR3
 796 0090 00000000 		.word	.LANCHOR0
 797 0094 00000000 		.word	.LANCHOR8
 798              		.cfi_endproc
 799              	.LFE54:
 801              		.section	.text.xTaskCreateStatic,"ax",%progbits
 802              		.align	1
 803              		.global	xTaskCreateStatic
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu fpv4-sp-d16
 809              	xTaskCreateStatic:
 810              	.LFB5:
 582:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxNewTCB;
 811              		.loc 1 582 0
 812              		.cfi_startproc
 813              		@ args = 12, pretend = 0, frame = 8
 814              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccOm33QJ.s 			page 107


 815              	.LVL68:
 816 0000 70B5     		push	{r4, r5, r6, lr}
 817              	.LCFI8:
 818              		.cfi_def_cfa_offset 16
 819              		.cfi_offset 4, -16
 820              		.cfi_offset 5, -12
 821              		.cfi_offset 6, -8
 822              		.cfi_offset 14, -4
 823 0002 86B0     		sub	sp, sp, #24
 824              	.LCFI9:
 825              		.cfi_def_cfa_offset 40
 826 0004 0B9D     		ldr	r5, [sp, #44]
 827 0006 0C9C     		ldr	r4, [sp, #48]
 586:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 828              		.loc 1 586 0
 829 0008 75B1     		cbz	r5, .L88
 587:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 830              		.loc 1 587 0
 831 000a B4B1     		cbz	r4, .L89
 832              	.LBB110:
 594:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 833              		.loc 1 594 0
 834 000c 5426     		movs	r6, #84
 835 000e 0496     		str	r6, [sp, #16]
 595:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 836              		.loc 1 595 0
 837 0010 049E     		ldr	r6, [sp, #16]
 838 0012 542E     		cmp	r6, #84
 839 0014 1AD0     		beq	.L85
 840              	.LBB111:
 841              	.LBB112:
 842              		.loc 2 195 0
 843              		.syntax unified
 844              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 845 0016 4FF05003 			mov r3, #80												
 846 001a 83F31188 		msr basepri, r3											
 847 001e BFF36F8F 		isb														
 848 0022 BFF34F8F 		dsb														
 849              	
 850              	@ 0 "" 2
 851              	.LVL69:
 852              		.thumb
 853              		.syntax unified
 854              	.L86:
 855 0026 FEE7     		b	.L86
 856              	.LVL70:
 857              	.L88:
 858              	.LBE112:
 859              	.LBE111:
 860              	.LBE110:
 861              	.LBB113:
 862              	.LBB114:
 863              		.syntax unified
 864              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 865 0028 4FF05003 			mov r3, #80												
 866 002c 83F31188 		msr basepri, r3											
 867 0030 BFF36F8F 		isb														
ARM GAS  /tmp/ccOm33QJ.s 			page 108


 868 0034 BFF34F8F 		dsb														
 869              	
 870              	@ 0 "" 2
 871              	.LVL71:
 872              		.thumb
 873              		.syntax unified
 874              	.L82:
 875 0038 FEE7     		b	.L82
 876              	.LVL72:
 877              	.L89:
 878              	.LBE114:
 879              	.LBE113:
 880              	.LBB115:
 881              	.LBB116:
 882              		.syntax unified
 883              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 884 003a 4FF05003 			mov r3, #80												
 885 003e 83F31188 		msr basepri, r3											
 886 0042 BFF36F8F 		isb														
 887 0046 BFF34F8F 		dsb														
 888              	
 889              	@ 0 "" 2
 890              	.LVL73:
 891              		.thumb
 892              		.syntax unified
 893              	.L84:
 894 004a FEE7     		b	.L84
 895              	.LVL74:
 896              	.L85:
 897              	.LBE116:
 898              	.LBE115:
 605:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 899              		.loc 1 605 0
 900 004c 2563     		str	r5, [r4, #48]
 611:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 901              		.loc 1 611 0
 902 004e 0225     		movs	r5, #2
 903 0050 84F85150 		strb	r5, [r4, #81]
 615:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 904              		.loc 1 615 0
 905 0054 0025     		movs	r5, #0
 906 0056 0395     		str	r5, [sp, #12]
 907 0058 0294     		str	r4, [sp, #8]
 908 005a 05AD     		add	r5, sp, #20
 909 005c 0195     		str	r5, [sp, #4]
 910 005e 0A9D     		ldr	r5, [sp, #40]
 911 0060 0095     		str	r5, [sp]
 912 0062 FFF7FEFF 		bl	prvInitialiseNewTask
 913              	.LVL75:
 616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 914              		.loc 1 616 0
 915 0066 2046     		mov	r0, r4
 916 0068 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 917              	.LVL76:
 624:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 918              		.loc 1 624 0
 919 006c 0598     		ldr	r0, [sp, #20]
ARM GAS  /tmp/ccOm33QJ.s 			page 109


 920 006e 06B0     		add	sp, sp, #24
 921              	.LCFI10:
 922              		.cfi_def_cfa_offset 16
 923              		@ sp needed
 924 0070 70BD     		pop	{r4, r5, r6, pc}
 925              		.cfi_endproc
 926              	.LFE5:
 928              		.section	.text.xTaskCreate,"ax",%progbits
 929              		.align	1
 930              		.global	xTaskCreate
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 934              		.fpu fpv4-sp-d16
 936              	xTaskCreate:
 937              	.LFB6:
 732:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxNewTCB;
 938              		.loc 1 732 0
 939              		.cfi_startproc
 940              		@ args = 8, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              	.LVL77:
 943 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 944              	.LCFI11:
 945              		.cfi_def_cfa_offset 28
 946              		.cfi_offset 4, -28
 947              		.cfi_offset 5, -24
 948              		.cfi_offset 6, -20
 949              		.cfi_offset 7, -16
 950              		.cfi_offset 8, -12
 951              		.cfi_offset 9, -8
 952              		.cfi_offset 14, -4
 953 0004 85B0     		sub	sp, sp, #20
 954              	.LCFI12:
 955              		.cfi_def_cfa_offset 48
 956 0006 0646     		mov	r6, r0
 957 0008 0F46     		mov	r7, r1
 958 000a 1546     		mov	r5, r2
 959 000c 9846     		mov	r8, r3
 960              	.LBB117:
 766:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 961              		.loc 1 766 0
 962 000e 9000     		lsls	r0, r2, #2
 963              	.LVL78:
 964 0010 FFF7FEFF 		bl	pvPortMalloc
 965              	.LVL79:
 768:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 966              		.loc 1 768 0
 967 0014 10B3     		cbz	r0, .L94
 968 0016 8146     		mov	r9, r0
 771:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 969              		.loc 1 771 0
 970 0018 5420     		movs	r0, #84
 971              	.LVL80:
 972 001a FFF7FEFF 		bl	pvPortMalloc
 973              	.LVL81:
 773:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
ARM GAS  /tmp/ccOm33QJ.s 			page 110


 974              		.loc 1 773 0
 975 001e 0446     		mov	r4, r0
 976 0020 C0B1     		cbz	r0, .L92
 776:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 977              		.loc 1 776 0
 978 0022 C0F83090 		str	r9, [r0, #48]
 979              	.LVL82:
 980              	.L91:
 981              	.LBE117:
 792:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 982              		.loc 1 792 0
 983 0026 DCB1     		cbz	r4, .L95
 798:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 984              		.loc 1 798 0
 985 0028 0023     		movs	r3, #0
 986 002a 84F85130 		strb	r3, [r4, #81]
 802:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 987              		.loc 1 802 0
 988 002e 0393     		str	r3, [sp, #12]
 989 0030 0294     		str	r4, [sp, #8]
 990 0032 0D9B     		ldr	r3, [sp, #52]
 991 0034 0193     		str	r3, [sp, #4]
 992 0036 0C9B     		ldr	r3, [sp, #48]
 993 0038 0093     		str	r3, [sp]
 994 003a 4346     		mov	r3, r8
 995 003c 2A46     		mov	r2, r5
 996 003e 3946     		mov	r1, r7
 997 0040 3046     		mov	r0, r6
 998 0042 FFF7FEFF 		bl	prvInitialiseNewTask
 999              	.LVL83:
 803:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdPASS;
 1000              		.loc 1 803 0
 1001 0046 2046     		mov	r0, r4
 1002 0048 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1003              	.LVL84:
 804:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 1004              		.loc 1 804 0
 1005 004c 0120     		movs	r0, #1
 1006              	.LVL85:
 1007              	.L90:
 812:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1008              		.loc 1 812 0
 1009 004e 05B0     		add	sp, sp, #20
 1010              	.LCFI13:
 1011              		.cfi_remember_state
 1012              		.cfi_def_cfa_offset 28
 1013              		@ sp needed
 1014 0050 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1015              	.LVL86:
 1016              	.L92:
 1017              	.LCFI14:
 1018              		.cfi_restore_state
 1019              	.LBB118:
 782:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 1020              		.loc 1 782 0
 1021 0054 4846     		mov	r0, r9
 1022              	.LVL87:
ARM GAS  /tmp/ccOm33QJ.s 			page 111


 1023 0056 FFF7FEFF 		bl	vPortFree
 1024              	.LVL88:
 1025 005a E4E7     		b	.L91
 1026              	.LVL89:
 1027              	.L94:
 787:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 1028              		.loc 1 787 0
 1029 005c 0024     		movs	r4, #0
 1030 005e E2E7     		b	.L91
 1031              	.LVL90:
 1032              	.L95:
 1033              	.LBE118:
 808:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 1034              		.loc 1 808 0
 1035 0060 4FF0FF30 		mov	r0, #-1
 1036              	.LVL91:
 811:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 1037              		.loc 1 811 0
 1038 0064 F3E7     		b	.L90
 1039              		.cfi_endproc
 1040              	.LFE6:
 1042              		.section	.text.vTaskDelete,"ax",%progbits
 1043              		.align	1
 1044              		.global	vTaskDelete
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu fpv4-sp-d16
 1050              	vTaskDelete:
 1051              	.LFB9:
1107:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
 1052              		.loc 1 1107 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 1056              	.LVL92:
 1057 0000 38B5     		push	{r3, r4, r5, lr}
 1058              	.LCFI15:
 1059              		.cfi_def_cfa_offset 16
 1060              		.cfi_offset 3, -16
 1061              		.cfi_offset 4, -12
 1062              		.cfi_offset 5, -8
 1063              		.cfi_offset 14, -4
 1064 0002 0446     		mov	r4, r0
1110:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 1065              		.loc 1 1110 0
 1066 0004 FFF7FEFF 		bl	vPortEnterCritical
 1067              	.LVL93:
1114:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1068              		.loc 1 1114 0
 1069 0008 002C     		cmp	r4, #0
 1070 000a 34D0     		beq	.L108
 1071              	.LVL94:
 1072              	.L98:
1117:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 1073              		.loc 1 1117 0 discriminator 4
 1074 000c 251D     		adds	r5, r4, #4
ARM GAS  /tmp/ccOm33QJ.s 			page 112


 1075 000e 2846     		mov	r0, r5
 1076 0010 FFF7FEFF 		bl	uxListRemove
 1077              	.LVL95:
 1078 0014 70B9     		cbnz	r0, .L99
1119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 1079              		.loc 1 1119 0
 1080 0016 E26A     		ldr	r2, [r4, #44]
 1081 0018 02EB8201 		add	r1, r2, r2, lsl #2
 1082 001c 8B00     		lsls	r3, r1, #2
 1083 001e 2649     		ldr	r1, .L111
 1084 0020 CB58     		ldr	r3, [r1, r3]
 1085 0022 3BB9     		cbnz	r3, .L99
1119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 1086              		.loc 1 1119 0 is_stmt 0 discriminator 1
 1087 0024 0123     		movs	r3, #1
 1088 0026 03FA02F2 		lsl	r2, r3, r2
 1089 002a 2449     		ldr	r1, .L111+4
 1090 002c 0B68     		ldr	r3, [r1]
 1091 002e 23EA0203 		bic	r3, r3, r2
 1092 0032 0B60     		str	r3, [r1]
 1093              	.L99:
1127:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 1094              		.loc 1 1127 0 is_stmt 1
 1095 0034 A36A     		ldr	r3, [r4, #40]
 1096 0036 1BB1     		cbz	r3, .L100
1129:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 1097              		.loc 1 1129 0
 1098 0038 04F11800 		add	r0, r4, #24
 1099 003c FFF7FEFF 		bl	uxListRemove
 1100              	.LVL96:
 1101              	.L100:
1140:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1102              		.loc 1 1140 0
 1103 0040 1F4A     		ldr	r2, .L111+8
 1104 0042 1368     		ldr	r3, [r2]
 1105 0044 0133     		adds	r3, r3, #1
 1106 0046 1360     		str	r3, [r2]
1142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 1107              		.loc 1 1142 0
 1108 0048 1E4B     		ldr	r3, .L111+12
 1109 004a 1B68     		ldr	r3, [r3]
 1110 004c 9C42     		cmp	r4, r3
 1111 004e 15D0     		beq	.L109
1165:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvDeleteTCB( pxTCB );
 1112              		.loc 1 1165 0
 1113 0050 1D4A     		ldr	r2, .L111+16
 1114 0052 1368     		ldr	r3, [r2]
 1115 0054 013B     		subs	r3, r3, #1
 1116 0056 1360     		str	r3, [r2]
1166:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1117              		.loc 1 1166 0
 1118 0058 2046     		mov	r0, r4
 1119 005a FFF7FEFF 		bl	prvDeleteTCB
 1120              	.LVL97:
1170:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 1121              		.loc 1 1170 0
 1122 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
ARM GAS  /tmp/ccOm33QJ.s 			page 113


 1123              	.LVL98:
 1124              	.L102:
1175:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1125              		.loc 1 1175 0
 1126 0062 FFF7FEFF 		bl	vPortExitCritical
 1127              	.LVL99:
1179:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 1128              		.loc 1 1179 0
 1129 0066 194B     		ldr	r3, .L111+20
 1130 0068 1B68     		ldr	r3, [r3]
 1131 006a 1BB1     		cbz	r3, .L97
1181:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 1132              		.loc 1 1181 0
 1133 006c 154B     		ldr	r3, .L111+12
 1134 006e 1B68     		ldr	r3, [r3]
 1135 0070 9C42     		cmp	r4, r3
 1136 0072 0CD0     		beq	.L110
 1137              	.L97:
 1138 0074 38BD     		pop	{r3, r4, r5, pc}
 1139              	.LVL100:
 1140              	.L108:
1114:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1141              		.loc 1 1114 0 discriminator 1
 1142 0076 134B     		ldr	r3, .L111+12
 1143 0078 1C68     		ldr	r4, [r3]
 1144              	.LVL101:
 1145 007a C7E7     		b	.L98
 1146              	.LVL102:
 1147              	.L109:
1149:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1148              		.loc 1 1149 0
 1149 007c 2946     		mov	r1, r5
 1150 007e 1448     		ldr	r0, .L111+24
 1151 0080 FFF7FEFF 		bl	vListInsertEnd
 1152              	.LVL103:
1154:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1153              		.loc 1 1154 0
 1154 0084 134A     		ldr	r2, .L111+28
 1155 0086 1368     		ldr	r3, [r2]
 1156 0088 0133     		adds	r3, r3, #1
 1157 008a 1360     		str	r3, [r2]
 1158 008c E9E7     		b	.L102
 1159              	.L110:
1183:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				portYIELD_WITHIN_API();
 1160              		.loc 1 1183 0
 1161 008e 124B     		ldr	r3, .L111+32
 1162 0090 1B68     		ldr	r3, [r3]
 1163 0092 43B1     		cbz	r3, .L104
 1164              	.LBB119:
 1165              	.LBB120:
 1166              		.loc 2 195 0
 1167              		.syntax unified
 1168              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1169 0094 4FF05003 			mov r3, #80												
 1170 0098 83F31188 		msr basepri, r3											
 1171 009c BFF36F8F 		isb														
 1172 00a0 BFF34F8F 		dsb														
ARM GAS  /tmp/ccOm33QJ.s 			page 114


 1173              	
 1174              	@ 0 "" 2
 1175              	.LVL104:
 1176              		.thumb
 1177              		.syntax unified
 1178              	.L105:
 1179 00a4 FEE7     		b	.L105
 1180              	.L104:
 1181              	.LBE120:
 1182              	.LBE119:
1184:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 1183              		.loc 1 1184 0
 1184 00a6 4FF08052 		mov	r2, #268435456
 1185 00aa 0C4B     		ldr	r3, .L111+36
 1186 00ac 1A60     		str	r2, [r3]
 1187              		.syntax unified
 1188              	@ 1184 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 1189 00ae BFF34F8F 		dsb
 1190              	@ 0 "" 2
 1191              	@ 1184 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 1192 00b2 BFF36F8F 		isb
 1193              	@ 0 "" 2
1191:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1194              		.loc 1 1191 0
 1195              		.thumb
 1196              		.syntax unified
 1197 00b6 DDE7     		b	.L97
 1198              	.L112:
 1199              		.align	2
 1200              	.L111:
 1201 00b8 00000000 		.word	.LANCHOR4
 1202 00bc 00000000 		.word	.LANCHOR13
 1203 00c0 00000000 		.word	.LANCHOR12
 1204 00c4 00000000 		.word	.LANCHOR10
 1205 00c8 00000000 		.word	.LANCHOR9
 1206 00cc 00000000 		.word	.LANCHOR11
 1207 00d0 00000000 		.word	.LANCHOR7
 1208 00d4 00000000 		.word	.LANCHOR14
 1209 00d8 00000000 		.word	.LANCHOR16
 1210 00dc 04ED00E0 		.word	-536810236
 1211              		.cfi_endproc
 1212              	.LFE9:
 1214              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1215              		.align	1
 1216              		.global	uxTaskPriorityGet
 1217              		.syntax unified
 1218              		.thumb
 1219              		.thumb_func
 1220              		.fpu fpv4-sp-d16
 1222              	uxTaskPriorityGet:
 1223              	.LFB11:
1399:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
 1224              		.loc 1 1399 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              	.LVL105:
ARM GAS  /tmp/ccOm33QJ.s 			page 115


 1229 0000 10B5     		push	{r4, lr}
 1230              	.LCFI16:
 1231              		.cfi_def_cfa_offset 8
 1232              		.cfi_offset 4, -8
 1233              		.cfi_offset 14, -4
 1234 0002 0446     		mov	r4, r0
1403:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 1235              		.loc 1 1403 0
 1236 0004 FFF7FEFF 		bl	vPortEnterCritical
 1237              	.LVL106:
1407:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1238              		.loc 1 1407 0
 1239 0008 24B1     		cbz	r4, .L117
 1240              	.LVL107:
 1241              	.L114:
1408:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 1242              		.loc 1 1408 0 discriminator 4
 1243 000a E46A     		ldr	r4, [r4, #44]
 1244              	.LVL108:
1410:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1245              		.loc 1 1410 0 discriminator 4
 1246 000c FFF7FEFF 		bl	vPortExitCritical
 1247              	.LVL109:
1413:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1248              		.loc 1 1413 0 discriminator 4
 1249 0010 2046     		mov	r0, r4
 1250 0012 10BD     		pop	{r4, pc}
 1251              	.LVL110:
 1252              	.L117:
1407:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1253              		.loc 1 1407 0 discriminator 1
 1254 0014 014B     		ldr	r3, .L118
 1255 0016 1C68     		ldr	r4, [r3]
 1256              	.LVL111:
 1257 0018 F7E7     		b	.L114
 1258              	.L119:
 1259 001a 00BF     		.align	2
 1260              	.L118:
 1261 001c 00000000 		.word	.LANCHOR10
 1262              		.cfi_endproc
 1263              	.LFE11:
 1265              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1266              		.align	1
 1267              		.global	uxTaskPriorityGetFromISR
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1271              		.fpu fpv4-sp-d16
 1273              	uxTaskPriorityGetFromISR:
 1274              	.LFB12:
1421:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
 1275              		.loc 1 1421 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279              	.LVL112:
 1280 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccOm33QJ.s 			page 116


 1281              	.LCFI17:
 1282              		.cfi_def_cfa_offset 8
 1283              		.cfi_offset 4, -8
 1284              		.cfi_offset 14, -4
 1285 0002 0446     		mov	r4, r0
1441:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1286              		.loc 1 1441 0
 1287 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1288              	.LVL113:
 1289              	.LBB121:
 1290              	.LBB122:
 196:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 197:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	isb														\n" \
 200:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	dsb														\n" \
 201:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	);
 203:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** }
 204:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 205:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
 206:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 207:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** {
 209:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	__asm volatile
 1291              		.loc 2 211 0
 1292              		.syntax unified
 1293              	@ 211 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1294 0008 EFF31183 			mrs r3, basepri											
 1295 000c 4FF05002 		mov r2, #80												
 1296 0010 82F31188 		msr basepri, r2											
 1297 0014 BFF36F8F 		isb														
 1298 0018 BFF34F8F 		dsb														
 1299              	
 1300              	@ 0 "" 2
 1301              		.thumb
 1302              		.syntax unified
 1303              	.LBE122:
 1304              	.LBE121:
1447:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1305              		.loc 1 1447 0
 1306 001c 1CB1     		cbz	r4, .L124
 1307              	.LVL114:
 1308              	.L121:
1448:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 1309              		.loc 1 1448 0 discriminator 4
 1310 001e E06A     		ldr	r0, [r4, #44]
 1311              	.LVL115:
 1312              	.LBB123:
 1313              	.LBB124:
 212:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 213:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	isb														\n" \
ARM GAS  /tmp/ccOm33QJ.s 			page 117


 217:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		"	dsb														\n" \
 218:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	);
 220:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 221:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	warnings. */
 223:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	return ulOriginalBASEPRI;
 224:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** }
 225:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** /*-----------------------------------------------------------*/
 226:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 
 227:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** {
 229:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	__asm volatile
 1314              		.loc 2 229 0 discriminator 4
 1315              		.syntax unified
 1316              	@ 229 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1317 0020 83F31188 			msr basepri, r3	
 1318              	@ 0 "" 2
 1319              	.LVL116:
 1320              		.thumb
 1321              		.syntax unified
 1322              	.LBE124:
 1323              	.LBE123:
1453:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1324              		.loc 1 1453 0 discriminator 4
 1325 0024 10BD     		pop	{r4, pc}
 1326              	.LVL117:
 1327              	.L124:
1447:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1328              		.loc 1 1447 0 discriminator 1
 1329 0026 014A     		ldr	r2, .L125
 1330 0028 1468     		ldr	r4, [r2]
 1331              	.LVL118:
 1332 002a F8E7     		b	.L121
 1333              	.L126:
 1334              		.align	2
 1335              	.L125:
 1336 002c 00000000 		.word	.LANCHOR10
 1337              		.cfi_endproc
 1338              	.LFE12:
 1340              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1341              		.align	1
 1342              		.global	vTaskPrioritySet
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu fpv4-sp-d16
 1348              	vTaskPrioritySet:
 1349              	.LFB13:
1461:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
 1350              		.loc 1 1461 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 1354              	.LVL119:
 1355 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1356              	.LCFI18:
ARM GAS  /tmp/ccOm33QJ.s 			page 118


 1357              		.cfi_def_cfa_offset 24
 1358              		.cfi_offset 3, -24
 1359              		.cfi_offset 4, -20
 1360              		.cfi_offset 5, -16
 1361              		.cfi_offset 6, -12
 1362              		.cfi_offset 7, -8
 1363              		.cfi_offset 14, -4
 1364              	.LVL120:
1466:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1365              		.loc 1 1466 0
 1366 0002 0629     		cmp	r1, #6
 1367 0004 08D9     		bls	.L128
 1368              	.LBB125:
 1369              	.LBB126:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 1370              		.loc 2 195 0
 1371              		.syntax unified
 1372              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1373 0006 4FF05003 			mov r3, #80												
 1374 000a 83F31188 		msr basepri, r3											
 1375 000e BFF36F8F 		isb														
 1376 0012 BFF34F8F 		dsb														
 1377              	
 1378              	@ 0 "" 2
 1379              	.LVL121:
 1380              		.thumb
 1381              		.syntax unified
 1382              	.L129:
 1383 0016 FEE7     		b	.L129
 1384              	.L128:
 1385 0018 0D46     		mov	r5, r1
 1386 001a 0446     		mov	r4, r0
 1387              	.LVL122:
 1388              	.LBE126:
 1389              	.LBE125:
1478:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 1390              		.loc 1 1478 0
 1391 001c FFF7FEFF 		bl	vPortEnterCritical
 1392              	.LVL123:
1482:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1393              		.loc 1 1482 0
 1394 0020 0CB9     		cbnz	r4, .L130
1482:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1395              		.loc 1 1482 0 is_stmt 0 discriminator 1
 1396 0022 2D4B     		ldr	r3, .L145
 1397 0024 1C68     		ldr	r4, [r3]
 1398              	.LVL124:
 1399              	.L130:
1488:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 1400              		.loc 1 1488 0 is_stmt 1 discriminator 4
 1401 0026 636C     		ldr	r3, [r4, #68]
 1402              	.LVL125:
1496:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 1403              		.loc 1 1496 0 discriminator 4
 1404 0028 9D42     		cmp	r5, r3
 1405 002a 44D0     		beq	.L131
1500:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
ARM GAS  /tmp/ccOm33QJ.s 			page 119


 1406              		.loc 1 1500 0
 1407 002c 46D9     		bls	.L132
1502:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 1408              		.loc 1 1502 0
 1409 002e 2A4A     		ldr	r2, .L145
 1410 0030 1268     		ldr	r2, [r2]
 1411 0032 9442     		cmp	r4, r2
 1412 0034 48D0     		beq	.L140
1507:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
 1413              		.loc 1 1507 0
 1414 0036 284A     		ldr	r2, .L145
 1415 0038 1268     		ldr	r2, [r2]
 1416 003a D26A     		ldr	r2, [r2, #44]
 1417 003c 9542     		cmp	r5, r2
 1418 003e 45D2     		bcs	.L141
1464:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1419              		.loc 1 1464 0
 1420 0040 0026     		movs	r6, #0
 1421              	.L133:
 1422              	.LVL126:
1540:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1423              		.loc 1 1540 0
 1424 0042 E76A     		ldr	r7, [r4, #44]
 1425              	.LVL127:
1546:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 1426              		.loc 1 1546 0
 1427 0044 BB42     		cmp	r3, r7
 1428 0046 00D1     		bne	.L134
1548:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 1429              		.loc 1 1548 0
 1430 0048 E562     		str	r5, [r4, #44]
 1431              	.L134:
1556:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 1432              		.loc 1 1556 0
 1433 004a 6564     		str	r5, [r4, #68]
1566:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 1434              		.loc 1 1566 0
 1435 004c A369     		ldr	r3, [r4, #24]
 1436              	.LVL128:
 1437 004e 002B     		cmp	r3, #0
 1438 0050 02DB     		blt	.L135
1568:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 1439              		.loc 1 1568 0
 1440 0052 C5F10705 		rsb	r5, r5, #7
 1441              	.LVL129:
 1442 0056 A561     		str	r5, [r4, #24]
 1443              	.L135:
1579:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 1444              		.loc 1 1579 0
 1445 0058 6169     		ldr	r1, [r4, #20]
 1446 005a 07EB8703 		add	r3, r7, r7, lsl #2
 1447 005e 9A00     		lsls	r2, r3, #2
 1448 0060 1E4B     		ldr	r3, .L145+4
 1449 0062 1344     		add	r3, r3, r2
 1450 0064 9942     		cmp	r1, r3
 1451 0066 35D1     		bne	.L143
 1452 0068 0123     		movs	r3, #1
ARM GAS  /tmp/ccOm33QJ.s 			page 120


 1453              	.L136:
1579:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 1454              		.loc 1 1579 0 is_stmt 0 discriminator 4
 1455 006a DBB1     		cbz	r3, .L137
1584:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 1456              		.loc 1 1584 0 is_stmt 1
 1457 006c 251D     		adds	r5, r4, #4
 1458 006e 2846     		mov	r0, r5
 1459 0070 FFF7FEFF 		bl	uxListRemove
 1460              	.LVL130:
 1461 0074 38B9     		cbnz	r0, .L138
1589:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 1462              		.loc 1 1589 0
 1463 0076 0123     		movs	r3, #1
 1464 0078 03FA07F7 		lsl	r7, r3, r7
 1465              	.LVL131:
 1466 007c 184A     		ldr	r2, .L145+8
 1467 007e 1368     		ldr	r3, [r2]
 1468 0080 23EA0703 		bic	r3, r3, r7
 1469 0084 1360     		str	r3, [r2]
 1470              	.L138:
1595:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 1471              		.loc 1 1595 0
 1472 0086 E36A     		ldr	r3, [r4, #44]
 1473 0088 0122     		movs	r2, #1
 1474 008a 9A40     		lsls	r2, r2, r3
 1475 008c 1449     		ldr	r1, .L145+8
 1476 008e 0868     		ldr	r0, [r1]
 1477 0090 0243     		orrs	r2, r2, r0
 1478 0092 0A60     		str	r2, [r1]
 1479 0094 03EB8303 		add	r3, r3, r3, lsl #2
 1480 0098 9A00     		lsls	r2, r3, #2
 1481 009a 2946     		mov	r1, r5
 1482 009c 0F48     		ldr	r0, .L145+4
 1483 009e 1044     		add	r0, r0, r2
 1484 00a0 FFF7FEFF 		bl	vListInsertEnd
 1485              	.LVL132:
 1486              	.L137:
1602:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 1487              		.loc 1 1602 0
 1488 00a4 3EB1     		cbz	r6, .L131
1604:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 1489              		.loc 1 1604 0
 1490 00a6 4FF08052 		mov	r2, #268435456
 1491 00aa 0E4B     		ldr	r3, .L145+12
 1492 00ac 1A60     		str	r2, [r3]
 1493              		.syntax unified
 1494              	@ 1604 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 1495 00ae BFF34F8F 		dsb
 1496              	@ 0 "" 2
 1497              	@ 1604 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 1498 00b2 BFF36F8F 		isb
 1499              	@ 0 "" 2
 1500              	.LVL133:
 1501              		.thumb
 1502              		.syntax unified
 1503              	.L131:
ARM GAS  /tmp/ccOm33QJ.s 			page 121


1616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 1504              		.loc 1 1616 0
 1505 00b6 FFF7FEFF 		bl	vPortExitCritical
 1506              	.LVL134:
 1507 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1508              	.LVL135:
 1509              	.L132:
1523:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 1510              		.loc 1 1523 0
 1511 00bc 064A     		ldr	r2, .L145
 1512 00be 1268     		ldr	r2, [r2]
 1513 00c0 9442     		cmp	r4, r2
 1514 00c2 05D0     		beq	.L142
1464:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1515              		.loc 1 1464 0
 1516 00c4 0026     		movs	r6, #0
 1517 00c6 BCE7     		b	.L133
 1518              	.L140:
 1519 00c8 0026     		movs	r6, #0
 1520 00ca BAE7     		b	.L133
 1521              	.L141:
1509:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
 1522              		.loc 1 1509 0
 1523 00cc 0126     		movs	r6, #1
 1524 00ce B8E7     		b	.L133
 1525              	.L142:
1528:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 1526              		.loc 1 1528 0
 1527 00d0 0126     		movs	r6, #1
 1528 00d2 B6E7     		b	.L133
 1529              	.LVL136:
 1530              	.L143:
1579:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 1531              		.loc 1 1579 0
 1532 00d4 0023     		movs	r3, #0
 1533 00d6 C8E7     		b	.L136
 1534              	.L146:
 1535              		.align	2
 1536              	.L145:
 1537 00d8 00000000 		.word	.LANCHOR10
 1538 00dc 00000000 		.word	.LANCHOR4
 1539 00e0 00000000 		.word	.LANCHOR13
 1540 00e4 04ED00E0 		.word	-536810236
 1541              		.cfi_endproc
 1542              	.LFE13:
 1544              		.section	.text.vTaskResume,"ax",%progbits
 1545              		.align	1
 1546              		.global	vTaskResume
 1547              		.syntax unified
 1548              		.thumb
 1549              		.thumb_func
 1550              		.fpu fpv4-sp-d16
 1552              	vTaskResume:
 1553              	.LFB16:
1772:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1554              		.loc 1 1772 0
 1555              		.cfi_startproc
ARM GAS  /tmp/ccOm33QJ.s 			page 122


 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558              	.LVL137:
 1559 0000 38B5     		push	{r3, r4, r5, lr}
 1560              	.LCFI19:
 1561              		.cfi_def_cfa_offset 16
 1562              		.cfi_offset 3, -16
 1563              		.cfi_offset 4, -12
 1564              		.cfi_offset 5, -8
 1565              		.cfi_offset 14, -4
 1566              	.LVL138:
1776:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1567              		.loc 1 1776 0
 1568 0002 68B1     		cbz	r0, .L153
 1569 0004 0446     		mov	r4, r0
1780:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 1570              		.loc 1 1780 0 discriminator 1
 1571 0006 1C4B     		ldr	r3, .L155
 1572 0008 1B68     		ldr	r3, [r3]
 1573 000a 9842     		cmp	r0, r3
 1574 000c 07D0     		beq	.L147
1782:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 1575              		.loc 1 1782 0
 1576 000e FFF7FEFF 		bl	vPortEnterCritical
 1577              	.LVL139:
1784:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 1578              		.loc 1 1784 0
 1579 0012 2046     		mov	r0, r4
 1580 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1581              	.LVL140:
 1582 0018 58B9     		cbnz	r0, .L154
 1583              	.L151:
1811:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 1584              		.loc 1 1811 0
 1585 001a FFF7FEFF 		bl	vPortExitCritical
 1586              	.LVL141:
 1587              	.L147:
 1588 001e 38BD     		pop	{r3, r4, r5, pc}
 1589              	.LVL142:
 1590              	.L153:
 1591              	.LBB127:
 1592              	.LBB128:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 1593              		.loc 2 195 0
 1594              		.syntax unified
 1595              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1596 0020 4FF05003 			mov r3, #80												
 1597 0024 83F31188 		msr basepri, r3											
 1598 0028 BFF36F8F 		isb														
 1599 002c BFF34F8F 		dsb														
 1600              	
 1601              	@ 0 "" 2
 1602              	.LVL143:
 1603              		.thumb
 1604              		.syntax unified
 1605              	.L149:
 1606 0030 FEE7     		b	.L149
ARM GAS  /tmp/ccOm33QJ.s 			page 123


 1607              	.LVL144:
 1608              	.L154:
 1609              	.LBE128:
 1610              	.LBE127:
1790:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1611              		.loc 1 1790 0
 1612 0032 251D     		adds	r5, r4, #4
 1613 0034 2846     		mov	r0, r5
 1614 0036 FFF7FEFF 		bl	uxListRemove
 1615              	.LVL145:
1791:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1616              		.loc 1 1791 0
 1617 003a E36A     		ldr	r3, [r4, #44]
 1618 003c 0122     		movs	r2, #1
 1619 003e 9A40     		lsls	r2, r2, r3
 1620 0040 0E49     		ldr	r1, .L155+4
 1621 0042 0868     		ldr	r0, [r1]
 1622 0044 0243     		orrs	r2, r2, r0
 1623 0046 0A60     		str	r2, [r1]
 1624 0048 03EB8303 		add	r3, r3, r3, lsl #2
 1625 004c 9A00     		lsls	r2, r3, #2
 1626 004e 2946     		mov	r1, r5
 1627 0050 0B48     		ldr	r0, .L155+8
 1628 0052 1044     		add	r0, r0, r2
 1629 0054 FFF7FEFF 		bl	vListInsertEnd
 1630              	.LVL146:
1794:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 1631              		.loc 1 1794 0
 1632 0058 E26A     		ldr	r2, [r4, #44]
 1633 005a 074B     		ldr	r3, .L155
 1634 005c 1B68     		ldr	r3, [r3]
 1635 005e DB6A     		ldr	r3, [r3, #44]
 1636 0060 9A42     		cmp	r2, r3
 1637 0062 DAD3     		bcc	.L151
1799:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 1638              		.loc 1 1799 0
 1639 0064 4FF08052 		mov	r2, #268435456
 1640 0068 064B     		ldr	r3, .L155+12
 1641 006a 1A60     		str	r2, [r3]
 1642              		.syntax unified
 1643              	@ 1799 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 1644 006c BFF34F8F 		dsb
 1645              	@ 0 "" 2
 1646              	@ 1799 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 1647 0070 BFF36F8F 		isb
 1648              	@ 0 "" 2
 1649              		.thumb
 1650              		.syntax unified
 1651 0074 D1E7     		b	.L151
 1652              	.L156:
 1653 0076 00BF     		.align	2
 1654              	.L155:
 1655 0078 00000000 		.word	.LANCHOR10
 1656 007c 00000000 		.word	.LANCHOR13
 1657 0080 00000000 		.word	.LANCHOR4
 1658 0084 04ED00E0 		.word	-536810236
 1659              		.cfi_endproc
ARM GAS  /tmp/ccOm33QJ.s 			page 124


 1660              	.LFE16:
 1662              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1663              		.align	1
 1664              		.global	xTaskResumeFromISR
 1665              		.syntax unified
 1666              		.thumb
 1667              		.thumb_func
 1668              		.fpu fpv4-sp-d16
 1670              	xTaskResumeFromISR:
 1671              	.LFB17:
1826:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1672              		.loc 1 1826 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              	.LVL147:
 1677 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1678              	.LCFI20:
 1679              		.cfi_def_cfa_offset 24
 1680              		.cfi_offset 3, -24
 1681              		.cfi_offset 4, -20
 1682              		.cfi_offset 5, -16
 1683              		.cfi_offset 6, -12
 1684              		.cfi_offset 7, -8
 1685              		.cfi_offset 14, -4
 1686              	.LVL148:
1831:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1687              		.loc 1 1831 0
 1688 0002 0028     		cmp	r0, #0
 1689 0004 32D0     		beq	.L166
 1690 0006 0446     		mov	r4, r0
1849:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1691              		.loc 1 1849 0
 1692 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1693              	.LVL149:
 1694              	.LBB129:
 1695              	.LBB130:
 211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 1696              		.loc 2 211 0
 1697              		.syntax unified
 1698              	@ 211 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1699 000c EFF31187 			mrs r7, basepri											
 1700 0010 4FF05003 		mov r3, #80												
 1701 0014 83F31188 		msr basepri, r3											
 1702 0018 BFF36F8F 		isb														
 1703 001c BFF34F8F 		dsb														
 1704              	
 1705              	@ 0 "" 2
 1706              		.thumb
 1707              		.syntax unified
 1708              	.LBE130:
 1709              	.LBE129:
1853:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 1710              		.loc 1 1853 0
 1711 0020 2046     		mov	r0, r4
 1712 0022 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1713              	.LVL150:
ARM GAS  /tmp/ccOm33QJ.s 			page 125


 1714 0026 0028     		cmp	r0, #0
 1715 0028 32D0     		beq	.L163
1858:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 1716              		.loc 1 1858 0
 1717 002a 1A4B     		ldr	r3, .L168
 1718 002c 1B68     		ldr	r3, [r3]
 1719 002e 43BB     		cbnz	r3, .L161
1862:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 1720              		.loc 1 1862 0
 1721 0030 E26A     		ldr	r2, [r4, #44]
 1722 0032 194B     		ldr	r3, .L168+4
 1723 0034 1B68     		ldr	r3, [r3]
 1724 0036 DB6A     		ldr	r3, [r3, #44]
 1725 0038 9A42     		cmp	r2, r3
 1726 003a 20D3     		bcc	.L167
1864:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 1727              		.loc 1 1864 0
 1728 003c 0125     		movs	r5, #1
 1729              	.L162:
 1730              	.LVL151:
1871:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1731              		.loc 1 1871 0
 1732 003e 261D     		adds	r6, r4, #4
 1733 0040 3046     		mov	r0, r6
 1734 0042 FFF7FEFF 		bl	uxListRemove
 1735              	.LVL152:
1872:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 1736              		.loc 1 1872 0
 1737 0046 E36A     		ldr	r3, [r4, #44]
 1738 0048 0122     		movs	r2, #1
 1739 004a 9A40     		lsls	r2, r2, r3
 1740 004c 1349     		ldr	r1, .L168+8
 1741 004e 0868     		ldr	r0, [r1]
 1742 0050 0243     		orrs	r2, r2, r0
 1743 0052 0A60     		str	r2, [r1]
 1744 0054 03EB8303 		add	r3, r3, r3, lsl #2
 1745 0058 9A00     		lsls	r2, r3, #2
 1746 005a 3146     		mov	r1, r6
 1747 005c 1048     		ldr	r0, .L168+12
 1748 005e 1044     		add	r0, r0, r2
 1749 0060 FFF7FEFF 		bl	vListInsertEnd
 1750              	.LVL153:
 1751              	.L160:
 1752              	.LBB131:
 1753              	.LBB132:
 1754              		.loc 2 229 0
 1755              		.syntax unified
 1756              	@ 229 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1757 0064 87F31188 			msr basepri, r7	
 1758              	@ 0 "" 2
 1759              	.LVL154:
 1760              		.thumb
 1761              		.syntax unified
 1762              	.LBE132:
 1763              	.LBE131:
1890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1764              		.loc 1 1890 0
ARM GAS  /tmp/ccOm33QJ.s 			page 126


 1765 0068 2846     		mov	r0, r5
 1766 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1767              	.LVL155:
 1768              	.L166:
 1769              	.LBB133:
 1770              	.LBB134:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 1771              		.loc 2 195 0
 1772              		.syntax unified
 1773              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1774 006c 4FF05003 			mov r3, #80												
 1775 0070 83F31188 		msr basepri, r3											
 1776 0074 BFF36F8F 		isb														
 1777 0078 BFF34F8F 		dsb														
 1778              	
 1779              	@ 0 "" 2
 1780              	.LVL156:
 1781              		.thumb
 1782              		.syntax unified
 1783              	.L159:
 1784 007c FEE7     		b	.L159
 1785              	.LVL157:
 1786              	.L167:
 1787              	.LBE134:
 1788              	.LBE133:
1827:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1789              		.loc 1 1827 0
 1790 007e 0025     		movs	r5, #0
 1791 0080 DDE7     		b	.L162
 1792              	.L161:
1879:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 1793              		.loc 1 1879 0
 1794 0082 04F11801 		add	r1, r4, #24
 1795 0086 0748     		ldr	r0, .L168+16
 1796 0088 FFF7FEFF 		bl	vListInsertEnd
 1797              	.LVL158:
1827:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1798              		.loc 1 1827 0
 1799 008c 0025     		movs	r5, #0
 1800 008e E9E7     		b	.L160
 1801              	.L163:
 1802 0090 0025     		movs	r5, #0
 1803 0092 E7E7     		b	.L160
 1804              	.L169:
 1805              		.align	2
 1806              	.L168:
 1807 0094 00000000 		.word	.LANCHOR16
 1808 0098 00000000 		.word	.LANCHOR10
 1809 009c 00000000 		.word	.LANCHOR13
 1810 00a0 00000000 		.word	.LANCHOR4
 1811 00a4 00000000 		.word	.LANCHOR1
 1812              		.cfi_endproc
 1813              	.LFE17:
 1815              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1816              		.align	1
 1817              		.global	vTaskStartScheduler
 1818              		.syntax unified
ARM GAS  /tmp/ccOm33QJ.s 			page 127


 1819              		.thumb
 1820              		.thumb_func
 1821              		.fpu fpv4-sp-d16
 1823              	vTaskStartScheduler:
 1824              	.LFB18:
1896:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xReturn;
 1825              		.loc 1 1896 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 16
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 1829 0000 10B5     		push	{r4, lr}
 1830              	.LCFI21:
 1831              		.cfi_def_cfa_offset 8
 1832              		.cfi_offset 4, -8
 1833              		.cfi_offset 14, -4
 1834 0002 88B0     		sub	sp, sp, #32
 1835              	.LCFI22:
 1836              		.cfi_def_cfa_offset 40
 1837              	.LBB135:
1902:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 1838              		.loc 1 1902 0
 1839 0004 0024     		movs	r4, #0
 1840 0006 0594     		str	r4, [sp, #20]
1903:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 1841              		.loc 1 1903 0
 1842 0008 0694     		str	r4, [sp, #24]
1908:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 1843              		.loc 1 1908 0
 1844 000a 07AA     		add	r2, sp, #28
 1845 000c 06A9     		add	r1, sp, #24
 1846 000e 05A8     		add	r0, sp, #20
 1847 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 1848              	.LVL159:
1909:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 												configIDLE_TASK_NAME,
 1849              		.loc 1 1909 0
 1850 0014 059B     		ldr	r3, [sp, #20]
 1851 0016 0293     		str	r3, [sp, #8]
 1852 0018 069B     		ldr	r3, [sp, #24]
 1853 001a 0193     		str	r3, [sp, #4]
 1854 001c 0094     		str	r4, [sp]
 1855 001e 2346     		mov	r3, r4
 1856 0020 079A     		ldr	r2, [sp, #28]
 1857 0022 1049     		ldr	r1, .L178
 1858 0024 1048     		ldr	r0, .L178+4
 1859 0026 FFF7FEFF 		bl	xTaskCreateStatic
 1860              	.LVL160:
1917:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 1861              		.loc 1 1917 0
 1862 002a 18B1     		cbz	r0, .L175
1919:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 1863              		.loc 1 1919 0
 1864 002c 0123     		movs	r3, #1
 1865              	.L171:
 1866              	.LVL161:
 1867              	.LBE135:
1951:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 1868              		.loc 1 1951 0
ARM GAS  /tmp/ccOm33QJ.s 			page 128


 1869 002e 1BB9     		cbnz	r3, .L177
 1870              	.LVL162:
 1871              	.L170:
2012:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 1872              		.loc 1 2012 0
 1873 0030 08B0     		add	sp, sp, #32
 1874              	.LCFI23:
 1875              		.cfi_remember_state
 1876              		.cfi_def_cfa_offset 8
 1877              		@ sp needed
 1878 0032 10BD     		pop	{r4, pc}
 1879              	.L175:
 1880              	.LCFI24:
 1881              		.cfi_restore_state
 1882              	.LBB136:
1923:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 1883              		.loc 1 1923 0
 1884 0034 0023     		movs	r3, #0
 1885 0036 FAE7     		b	.L171
 1886              	.LVL163:
 1887              	.L177:
 1888              	.LBE136:
 1889              	.LBB137:
 1890              	.LBB138:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 1891              		.loc 2 195 0
 1892              		.syntax unified
 1893              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1894 0038 4FF05003 			mov r3, #80												
 1895 003c 83F31188 		msr basepri, r3											
 1896 0040 BFF36F8F 		isb														
 1897 0044 BFF34F8F 		dsb														
 1898              	
 1899              	@ 0 "" 2
 1900              	.LVL164:
 1901              		.thumb
 1902              		.syntax unified
 1903              	.LBE138:
 1904              	.LBE137:
1977:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1905              		.loc 1 1977 0
 1906 0048 4FF0FF32 		mov	r2, #-1
 1907 004c 074B     		ldr	r3, .L178+8
 1908 004e 1A60     		str	r2, [r3]
1978:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1909              		.loc 1 1978 0
 1910 0050 0122     		movs	r2, #1
 1911 0052 074B     		ldr	r3, .L178+12
 1912 0054 1A60     		str	r2, [r3]
1979:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 1913              		.loc 1 1979 0
 1914 0056 0022     		movs	r2, #0
 1915 0058 064B     		ldr	r3, .L178+16
 1916 005a 1A60     		str	r2, [r3]
1991:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 1917              		.loc 1 1991 0
 1918 005c FFF7FEFF 		bl	xPortStartScheduler
ARM GAS  /tmp/ccOm33QJ.s 			page 129


 1919              	.LVL165:
 1920 0060 E6E7     		b	.L170
 1921              	.L179:
 1922 0062 00BF     		.align	2
 1923              	.L178:
 1924 0064 00000000 		.word	.LC0
 1925 0068 00000000 		.word	prvIdleTask
 1926 006c 00000000 		.word	.LANCHOR3
 1927 0070 00000000 		.word	.LANCHOR11
 1928 0074 00000000 		.word	.LANCHOR15
 1929              		.cfi_endproc
 1930              	.LFE18:
 1932              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1933              		.align	1
 1934              		.global	vTaskEndScheduler
 1935              		.syntax unified
 1936              		.thumb
 1937              		.thumb_func
 1938              		.fpu fpv4-sp-d16
 1940              	vTaskEndScheduler:
 1941              	.LFB19:
2016:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1942              		.loc 1 2016 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 0, uses_anonymous_args = 0
 1946 0000 08B5     		push	{r3, lr}
 1947              	.LCFI25:
 1948              		.cfi_def_cfa_offset 8
 1949              		.cfi_offset 3, -8
 1950              		.cfi_offset 14, -4
 1951              	.LBB139:
 1952              	.LBB140:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 1953              		.loc 2 195 0
 1954              		.syntax unified
 1955              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 1956 0002 4FF05003 			mov r3, #80												
 1957 0006 83F31188 		msr basepri, r3											
 1958 000a BFF36F8F 		isb														
 1959 000e BFF34F8F 		dsb														
 1960              	
 1961              	@ 0 "" 2
 1962              		.thumb
 1963              		.syntax unified
 1964              	.LBE140:
 1965              	.LBE139:
2021:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	vPortEndScheduler();
 1966              		.loc 1 2021 0
 1967 0012 0022     		movs	r2, #0
 1968 0014 024B     		ldr	r3, .L182
 1969 0016 1A60     		str	r2, [r3]
2022:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 1970              		.loc 1 2022 0
 1971 0018 FFF7FEFF 		bl	vPortEndScheduler
 1972              	.LVL166:
 1973 001c 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccOm33QJ.s 			page 130


 1974              	.L183:
 1975 001e 00BF     		.align	2
 1976              	.L182:
 1977 0020 00000000 		.word	.LANCHOR11
 1978              		.cfi_endproc
 1979              	.LFE19:
 1981              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1982              		.align	1
 1983              		.global	vTaskSuspendAll
 1984              		.syntax unified
 1985              		.thumb
 1986              		.thumb_func
 1987              		.fpu fpv4-sp-d16
 1989              	vTaskSuspendAll:
 1990              	.LFB20:
2027:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* A critical section is not required as the variable is of type
 1991              		.loc 1 2027 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 0
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
 1995              		@ link register save eliminated.
2032:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 1996              		.loc 1 2032 0
 1997 0000 024A     		ldr	r2, .L185
 1998 0002 1368     		ldr	r3, [r2]
 1999 0004 0133     		adds	r3, r3, #1
 2000 0006 1360     		str	r3, [r2]
 2001 0008 7047     		bx	lr
 2002              	.L186:
 2003 000a 00BF     		.align	2
 2004              	.L185:
 2005 000c 00000000 		.word	.LANCHOR16
 2006              		.cfi_endproc
 2007              	.LFE20:
 2009              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2010              		.align	1
 2011              		.global	xTaskGetTickCount
 2012              		.syntax unified
 2013              		.thumb
 2014              		.thumb_func
 2015              		.fpu fpv4-sp-d16
 2017              	xTaskGetTickCount:
 2018              	.LFB22:
2210:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t xTicks;
 2019              		.loc 1 2210 0
 2020              		.cfi_startproc
 2021              		@ args = 0, pretend = 0, frame = 0
 2022              		@ frame_needed = 0, uses_anonymous_args = 0
 2023              		@ link register save eliminated.
2216:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 2024              		.loc 1 2216 0
 2025 0000 014B     		ldr	r3, .L188
 2026 0002 1868     		ldr	r0, [r3]
 2027              	.LVL167:
2221:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 2028              		.loc 1 2221 0
 2029 0004 7047     		bx	lr
ARM GAS  /tmp/ccOm33QJ.s 			page 131


 2030              	.L189:
 2031 0006 00BF     		.align	2
 2032              	.L188:
 2033 0008 00000000 		.word	.LANCHOR15
 2034              		.cfi_endproc
 2035              	.LFE22:
 2037              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2038              		.align	1
 2039              		.global	xTaskGetTickCountFromISR
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
 2043              		.fpu fpv4-sp-d16
 2045              	xTaskGetTickCountFromISR:
 2046              	.LFB23:
2225:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t xReturn;
 2047              		.loc 1 2225 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051 0000 08B5     		push	{r3, lr}
 2052              	.LCFI26:
 2053              		.cfi_def_cfa_offset 8
 2054              		.cfi_offset 3, -8
 2055              		.cfi_offset 14, -4
2243:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2056              		.loc 1 2243 0
 2057 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2058              	.LVL168:
2247:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 2059              		.loc 1 2247 0
 2060 0006 014B     		ldr	r3, .L192
 2061 0008 1868     		ldr	r0, [r3]
 2062              	.LVL169:
2252:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 2063              		.loc 1 2252 0
 2064 000a 08BD     		pop	{r3, pc}
 2065              	.L193:
 2066              		.align	2
 2067              	.L192:
 2068 000c 00000000 		.word	.LANCHOR15
 2069              		.cfi_endproc
 2070              	.LFE23:
 2072              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2073              		.align	1
 2074              		.global	uxTaskGetNumberOfTasks
 2075              		.syntax unified
 2076              		.thumb
 2077              		.thumb_func
 2078              		.fpu fpv4-sp-d16
 2080              	uxTaskGetNumberOfTasks:
 2081              	.LFB24:
2256:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* A critical section is not required because the variables are of type
 2082              		.loc 1 2256 0
 2083              		.cfi_startproc
 2084              		@ args = 0, pretend = 0, frame = 0
 2085              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccOm33QJ.s 			page 132


 2086              		@ link register save eliminated.
2259:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 2087              		.loc 1 2259 0
 2088 0000 014B     		ldr	r3, .L195
 2089 0002 1868     		ldr	r0, [r3]
2260:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 2090              		.loc 1 2260 0
 2091 0004 7047     		bx	lr
 2092              	.L196:
 2093 0006 00BF     		.align	2
 2094              	.L195:
 2095 0008 00000000 		.word	.LANCHOR9
 2096              		.cfi_endproc
 2097              	.LFE24:
 2099              		.section	.text.pcTaskGetName,"ax",%progbits
 2100              		.align	1
 2101              		.global	pcTaskGetName
 2102              		.syntax unified
 2103              		.thumb
 2104              		.thumb_func
 2105              		.fpu fpv4-sp-d16
 2107              	pcTaskGetName:
 2108              	.LFB25:
2264:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxTCB;
 2109              		.loc 1 2264 0
 2110              		.cfi_startproc
 2111              		@ args = 0, pretend = 0, frame = 0
 2112              		@ frame_needed = 0, uses_anonymous_args = 0
 2113              		@ link register save eliminated.
 2114              	.LVL170:
2269:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTCB );
 2115              		.loc 1 2269 0
 2116 0000 10B1     		cbz	r0, .L202
 2117              	.LVL171:
 2118              	.L198:
2270:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2119              		.loc 1 2270 0 discriminator 4
 2120 0002 20B1     		cbz	r0, .L203
2272:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 2121              		.loc 1 2272 0
 2122 0004 3430     		adds	r0, r0, #52
 2123              	.LVL172:
 2124 0006 7047     		bx	lr
 2125              	.LVL173:
 2126              	.L202:
2269:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTCB );
 2127              		.loc 1 2269 0 discriminator 1
 2128 0008 054B     		ldr	r3, .L204
 2129 000a 1868     		ldr	r0, [r3]
 2130              	.LVL174:
 2131 000c F9E7     		b	.L198
 2132              	.LVL175:
 2133              	.L203:
 2134              	.LBB141:
 2135              	.LBB142:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 2136              		.loc 2 195 0
ARM GAS  /tmp/ccOm33QJ.s 			page 133


 2137              		.syntax unified
 2138              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 2139 000e 4FF05003 			mov r3, #80												
 2140 0012 83F31188 		msr basepri, r3											
 2141 0016 BFF36F8F 		isb														
 2142 001a BFF34F8F 		dsb														
 2143              	
 2144              	@ 0 "" 2
 2145              	.LVL176:
 2146              		.thumb
 2147              		.syntax unified
 2148              	.L200:
 2149 001e FEE7     		b	.L200
 2150              	.L205:
 2151              		.align	2
 2152              	.L204:
 2153 0020 00000000 		.word	.LANCHOR10
 2154              	.LBE142:
 2155              	.LBE141:
 2156              		.cfi_endproc
 2157              	.LFE25:
 2159              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2160              		.align	1
 2161              		.global	xTaskIncrementTick
 2162              		.syntax unified
 2163              		.thumb
 2164              		.thumb_func
 2165              		.fpu fpv4-sp-d16
 2167              	xTaskIncrementTick:
 2168              	.LFB26:
2584:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t * pxTCB;
 2169              		.loc 1 2584 0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 0
 2172              		@ frame_needed = 0, uses_anonymous_args = 0
 2173 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2174              	.LCFI27:
 2175              		.cfi_def_cfa_offset 24
 2176              		.cfi_offset 3, -24
 2177              		.cfi_offset 4, -20
 2178              		.cfi_offset 5, -16
 2179              		.cfi_offset 6, -12
 2180              		.cfi_offset 7, -8
 2181              		.cfi_offset 14, -4
 2182              	.LVL177:
2593:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 2183              		.loc 1 2593 0
 2184 0002 3C4B     		ldr	r3, .L230
 2185 0004 1B68     		ldr	r3, [r3]
 2186 0006 002B     		cmp	r3, #0
 2187 0008 68D1     		bne	.L207
 2188              	.LBB143:
2597:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2189              		.loc 1 2597 0
 2190 000a 3B4B     		ldr	r3, .L230+4
 2191 000c 1D68     		ldr	r5, [r3]
 2192 000e 0135     		adds	r5, r5, #1
ARM GAS  /tmp/ccOm33QJ.s 			page 134


 2193              	.LVL178:
2601:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2194              		.loc 1 2601 0
 2195 0010 1D60     		str	r5, [r3]
2603:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 2196              		.loc 1 2603 0
 2197 0012 C5B9     		cbnz	r5, .L208
 2198              	.LBB144:
2605:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 2199              		.loc 1 2605 0
 2200 0014 394B     		ldr	r3, .L230+8
 2201 0016 1B68     		ldr	r3, [r3]
 2202 0018 1B68     		ldr	r3, [r3]
 2203 001a 43B1     		cbz	r3, .L209
 2204              	.LBB145:
 2205              	.LBB146:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 2206              		.loc 2 195 0
 2207              		.syntax unified
 2208              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 2209 001c 4FF05003 			mov r3, #80												
 2210 0020 83F31188 		msr basepri, r3											
 2211 0024 BFF36F8F 		isb														
 2212 0028 BFF34F8F 		dsb														
 2213              	
 2214              	@ 0 "" 2
 2215              	.LVL179:
 2216              		.thumb
 2217              		.syntax unified
 2218              	.L210:
 2219 002c FEE7     		b	.L210
 2220              	.L209:
 2221              	.LBE146:
 2222              	.LBE145:
2605:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 2223              		.loc 1 2605 0 discriminator 2
 2224 002e 334A     		ldr	r2, .L230+8
 2225 0030 1168     		ldr	r1, [r2]
 2226              	.LVL180:
 2227 0032 334B     		ldr	r3, .L230+12
 2228 0034 1868     		ldr	r0, [r3]
 2229 0036 1060     		str	r0, [r2]
 2230 0038 1960     		str	r1, [r3]
 2231 003a 324A     		ldr	r2, .L230+16
 2232 003c 1368     		ldr	r3, [r2]
 2233 003e 0133     		adds	r3, r3, #1
 2234 0040 1360     		str	r3, [r2]
 2235 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2236              	.LVL181:
 2237              	.L208:
 2238              	.LBE144:
2616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 2239              		.loc 1 2616 0
 2240 0046 304B     		ldr	r3, .L230+20
 2241 0048 1B68     		ldr	r3, [r3]
 2242 004a 9D42     		cmp	r5, r3
 2243 004c 3AD2     		bcs	.L221
ARM GAS  /tmp/ccOm33QJ.s 			page 135


 2244              	.LBE143:
2587:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2245              		.loc 1 2587 0
 2246 004e 0024     		movs	r4, #0
 2247              	.LVL182:
 2248              	.L212:
 2249              	.LBB147:
2699:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 2250              		.loc 1 2699 0
 2251 0050 2E4B     		ldr	r3, .L230+24
 2252 0052 1B68     		ldr	r3, [r3]
 2253 0054 DB6A     		ldr	r3, [r3, #44]
 2254 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2255 005a 9A00     		lsls	r2, r3, #2
 2256 005c 2C4B     		ldr	r3, .L230+28
 2257 005e 9B58     		ldr	r3, [r3, r2]
 2258 0060 012B     		cmp	r3, #1
 2259 0062 40D9     		bls	.L219
2701:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 2260              		.loc 1 2701 0
 2261 0064 0124     		movs	r4, #1
 2262              	.LVL183:
 2263 0066 3EE0     		b	.L219
 2264              	.LVL184:
 2265              	.L223:
2682:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
 2266              		.loc 1 2682 0
 2267 0068 0124     		movs	r4, #1
 2268              	.LVL185:
 2269              	.L211:
2620:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 2270              		.loc 1 2620 0
 2271 006a 244B     		ldr	r3, .L230+8
 2272 006c 1B68     		ldr	r3, [r3]
 2273 006e 1B68     		ldr	r3, [r3]
 2274 0070 53B3     		cbz	r3, .L227
 2275 0072 0023     		movs	r3, #0
 2276              	.L213:
2620:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 2277              		.loc 1 2620 0 is_stmt 0 discriminator 4
 2278 0074 53BB     		cbnz	r3, .L228
2636:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2279              		.loc 1 2636 0 is_stmt 1
 2280 0076 214B     		ldr	r3, .L230+8
 2281 0078 1B68     		ldr	r3, [r3]
 2282 007a DB68     		ldr	r3, [r3, #12]
 2283 007c DE68     		ldr	r6, [r3, #12]
 2284              	.LVL186:
2637:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2285              		.loc 1 2637 0
 2286 007e 7368     		ldr	r3, [r6, #4]
 2287              	.LVL187:
2639:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 2288              		.loc 1 2639 0
 2289 0080 9D42     		cmp	r5, r3
 2290 0082 28D3     		bcc	.L229
2655:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 136


 2291              		.loc 1 2655 0
 2292 0084 371D     		adds	r7, r6, #4
 2293 0086 3846     		mov	r0, r7
 2294 0088 FFF7FEFF 		bl	uxListRemove
 2295              	.LVL188:
2659:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 2296              		.loc 1 2659 0
 2297 008c B36A     		ldr	r3, [r6, #40]
 2298 008e 1BB1     		cbz	r3, .L216
2661:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 2299              		.loc 1 2661 0
 2300 0090 06F11800 		add	r0, r6, #24
 2301 0094 FFF7FEFF 		bl	uxListRemove
 2302              	.LVL189:
 2303              	.L216:
2670:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2304              		.loc 1 2670 0
 2305 0098 F36A     		ldr	r3, [r6, #44]
 2306 009a 0122     		movs	r2, #1
 2307 009c 9A40     		lsls	r2, r2, r3
 2308 009e 1D49     		ldr	r1, .L230+32
 2309 00a0 0868     		ldr	r0, [r1]
 2310 00a2 0243     		orrs	r2, r2, r0
 2311 00a4 0A60     		str	r2, [r1]
 2312 00a6 03EB8303 		add	r3, r3, r3, lsl #2
 2313 00aa 9A00     		lsls	r2, r3, #2
 2314 00ac 3946     		mov	r1, r7
 2315 00ae 1848     		ldr	r0, .L230+28
 2316 00b0 1044     		add	r0, r0, r2
 2317 00b2 FFF7FEFF 		bl	vListInsertEnd
 2318              	.LVL190:
2680:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
 2319              		.loc 1 2680 0
 2320 00b6 F26A     		ldr	r2, [r6, #44]
 2321 00b8 144B     		ldr	r3, .L230+24
 2322 00ba 1B68     		ldr	r3, [r3]
 2323 00bc DB6A     		ldr	r3, [r3, #44]
 2324 00be 9A42     		cmp	r2, r3
 2325 00c0 D2D2     		bcs	.L223
 2326 00c2 D2E7     		b	.L211
 2327              	.LVL191:
 2328              	.L221:
 2329 00c4 0024     		movs	r4, #0
 2330 00c6 D0E7     		b	.L211
 2331              	.LVL192:
 2332              	.L227:
2620:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 2333              		.loc 1 2620 0
 2334 00c8 0123     		movs	r3, #1
 2335 00ca D3E7     		b	.L213
 2336              	.L228:
2627:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
 2337              		.loc 1 2627 0
 2338 00cc 4FF0FF32 		mov	r2, #-1
 2339 00d0 0D4B     		ldr	r3, .L230+20
 2340 00d2 1A60     		str	r2, [r3]
2628:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
ARM GAS  /tmp/ccOm33QJ.s 			page 137


 2341              		.loc 1 2628 0
 2342 00d4 BCE7     		b	.L212
 2343              	.LVL193:
 2344              	.L229:
2646:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						break;
 2345              		.loc 1 2646 0
 2346 00d6 0C4A     		ldr	r2, .L230+20
 2347 00d8 1360     		str	r3, [r2]
2647:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 2348              		.loc 1 2647 0
 2349 00da B9E7     		b	.L212
 2350              	.LVL194:
 2351              	.L207:
 2352              	.LBE147:
2727:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2353              		.loc 1 2727 0
 2354 00dc 0E4A     		ldr	r2, .L230+36
 2355 00de 1368     		ldr	r3, [r2]
 2356 00e0 0133     		adds	r3, r3, #1
 2357 00e2 1360     		str	r3, [r2]
2587:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2358              		.loc 1 2587 0
 2359 00e4 0024     		movs	r4, #0
 2360              	.LVL195:
 2361              	.L219:
2740:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 2362              		.loc 1 2740 0
 2363 00e6 0D4B     		ldr	r3, .L230+40
 2364 00e8 1B68     		ldr	r3, [r3]
 2365 00ea 03B1     		cbz	r3, .L206
2742:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 2366              		.loc 1 2742 0
 2367 00ec 0124     		movs	r4, #1
 2368              	.LVL196:
 2369              	.L206:
2752:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 2370              		.loc 1 2752 0
 2371 00ee 2046     		mov	r0, r4
 2372 00f0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2373              	.L231:
 2374 00f2 00BF     		.align	2
 2375              	.L230:
 2376 00f4 00000000 		.word	.LANCHOR16
 2377 00f8 00000000 		.word	.LANCHOR15
 2378 00fc 00000000 		.word	.LANCHOR2
 2379 0100 00000000 		.word	.LANCHOR8
 2380 0104 00000000 		.word	.LANCHOR17
 2381 0108 00000000 		.word	.LANCHOR3
 2382 010c 00000000 		.word	.LANCHOR10
 2383 0110 00000000 		.word	.LANCHOR4
 2384 0114 00000000 		.word	.LANCHOR13
 2385 0118 00000000 		.word	.LANCHOR18
 2386 011c 00000000 		.word	.LANCHOR19
 2387              		.cfi_endproc
 2388              	.LFE26:
 2390              		.section	.text.xTaskResumeAll,"ax",%progbits
 2391              		.align	1
ARM GAS  /tmp/ccOm33QJ.s 			page 138


 2392              		.global	xTaskResumeAll
 2393              		.syntax unified
 2394              		.thumb
 2395              		.thumb_func
 2396              		.fpu fpv4-sp-d16
 2398              	xTaskResumeAll:
 2399              	.LFB21:
2100:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxTCB = NULL;
 2400              		.loc 1 2100 0
 2401              		.cfi_startproc
 2402              		@ args = 0, pretend = 0, frame = 0
 2403              		@ frame_needed = 0, uses_anonymous_args = 0
 2404 0000 38B5     		push	{r3, r4, r5, lr}
 2405              	.LCFI28:
 2406              		.cfi_def_cfa_offset 16
 2407              		.cfi_offset 3, -16
 2408              		.cfi_offset 4, -12
 2409              		.cfi_offset 5, -8
 2410              		.cfi_offset 14, -4
 2411              	.LVL197:
2106:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2412              		.loc 1 2106 0
 2413 0002 354B     		ldr	r3, .L249
 2414 0004 1B68     		ldr	r3, [r3]
 2415 0006 43B9     		cbnz	r3, .L233
 2416              	.LBB148:
 2417              	.LBB149:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 2418              		.loc 2 195 0
 2419              		.syntax unified
 2420              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 2421 0008 4FF05003 			mov r3, #80												
 2422 000c 83F31188 		msr basepri, r3											
 2423 0010 BFF36F8F 		isb														
 2424 0014 BFF34F8F 		dsb														
 2425              	
 2426              	@ 0 "" 2
 2427              	.LVL198:
 2428              		.thumb
 2429              		.syntax unified
 2430              	.L234:
 2431 0018 FEE7     		b	.L234
 2432              	.L233:
 2433              	.LBE149:
 2434              	.LBE148:
2113:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 2435              		.loc 1 2113 0
 2436 001a FFF7FEFF 		bl	vPortEnterCritical
 2437              	.LVL199:
2115:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2438              		.loc 1 2115 0
 2439 001e 2E4B     		ldr	r3, .L249
 2440 0020 1A68     		ldr	r2, [r3]
 2441 0022 013A     		subs	r2, r2, #1
 2442 0024 1A60     		str	r2, [r3]
2117:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 2443              		.loc 1 2117 0
ARM GAS  /tmp/ccOm33QJ.s 			page 139


 2444 0026 1B68     		ldr	r3, [r3]
 2445 0028 002B     		cmp	r3, #0
 2446 002a 50D1     		bne	.L243
2119:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 2447              		.loc 1 2119 0
 2448 002c 2B4B     		ldr	r3, .L249+4
 2449 002e 1B68     		ldr	r3, [r3]
 2450 0030 23B9     		cbnz	r3, .L244
2102:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2451              		.loc 1 2102 0
 2452 0032 0024     		movs	r4, #0
 2453              	.LVL200:
 2454              	.L235:
2203:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2455              		.loc 1 2203 0
 2456 0034 FFF7FEFF 		bl	vPortExitCritical
 2457              	.LVL201:
2206:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 2458              		.loc 1 2206 0
 2459 0038 2046     		mov	r0, r4
 2460 003a 38BD     		pop	{r3, r4, r5, pc}
 2461              	.LVL202:
 2462              	.L244:
 2463 003c 0024     		movs	r4, #0
 2464              	.LVL203:
 2465              	.L236:
2123:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 2466              		.loc 1 2123 0
 2467 003e 284B     		ldr	r3, .L249+8
 2468 0040 1B68     		ldr	r3, [r3]
 2469 0042 1BB3     		cbz	r3, .L247
2125:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2470              		.loc 1 2125 0
 2471 0044 264B     		ldr	r3, .L249+8
 2472 0046 DB68     		ldr	r3, [r3, #12]
 2473 0048 DC68     		ldr	r4, [r3, #12]
 2474              	.LVL204:
2126:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2475              		.loc 1 2126 0
 2476 004a 04F11800 		add	r0, r4, #24
 2477 004e FFF7FEFF 		bl	uxListRemove
 2478              	.LVL205:
2127:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2479              		.loc 1 2127 0
 2480 0052 251D     		adds	r5, r4, #4
 2481 0054 2846     		mov	r0, r5
 2482 0056 FFF7FEFF 		bl	uxListRemove
 2483              	.LVL206:
2128:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2484              		.loc 1 2128 0
 2485 005a E36A     		ldr	r3, [r4, #44]
 2486 005c 0122     		movs	r2, #1
 2487 005e 9A40     		lsls	r2, r2, r3
 2488 0060 2049     		ldr	r1, .L249+12
 2489 0062 0868     		ldr	r0, [r1]
 2490 0064 0243     		orrs	r2, r2, r0
 2491 0066 0A60     		str	r2, [r1]
ARM GAS  /tmp/ccOm33QJ.s 			page 140


 2492 0068 03EB8303 		add	r3, r3, r3, lsl #2
 2493 006c 9A00     		lsls	r2, r3, #2
 2494 006e 2946     		mov	r1, r5
 2495 0070 1D48     		ldr	r0, .L249+16
 2496 0072 1044     		add	r0, r0, r2
 2497 0074 FFF7FEFF 		bl	vListInsertEnd
 2498              	.LVL207:
2132:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 2499              		.loc 1 2132 0
 2500 0078 E26A     		ldr	r2, [r4, #44]
 2501 007a 1C4B     		ldr	r3, .L249+20
 2502 007c 1B68     		ldr	r3, [r3]
 2503 007e DB6A     		ldr	r3, [r3, #44]
 2504 0080 9A42     		cmp	r2, r3
 2505 0082 DCD3     		bcc	.L236
2134:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 2506              		.loc 1 2134 0
 2507 0084 0122     		movs	r2, #1
 2508 0086 1A4B     		ldr	r3, .L249+24
 2509 0088 1A60     		str	r2, [r3]
 2510 008a D8E7     		b	.L236
 2511              	.L247:
2142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 2512              		.loc 1 2142 0
 2513 008c 0CB1     		cbz	r4, .L239
2150:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 2514              		.loc 1 2150 0
 2515 008e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2516              	.LVL208:
 2517              	.L239:
 2518              	.LBB150:
2158:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2519              		.loc 1 2158 0
 2520 0092 184B     		ldr	r3, .L249+28
 2521 0094 1C68     		ldr	r4, [r3]
 2522              	.LVL209:
2160:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 2523              		.loc 1 2160 0
 2524 0096 74B9     		cbnz	r4, .L242
 2525              	.L240:
 2526              	.LBE150:
2183:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 2527              		.loc 1 2183 0
 2528 0098 154B     		ldr	r3, .L249+24
 2529 009a 1B68     		ldr	r3, [r3]
 2530 009c CBB1     		cbz	r3, .L245
 2531              	.LVL210:
2190:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 2532              		.loc 1 2190 0
 2533 009e 4FF08052 		mov	r2, #268435456
 2534 00a2 154B     		ldr	r3, .L249+32
 2535 00a4 1A60     		str	r2, [r3]
 2536              		.syntax unified
 2537              	@ 2190 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 2538 00a6 BFF34F8F 		dsb
 2539              	@ 0 "" 2
 2540              	@ 2190 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
ARM GAS  /tmp/ccOm33QJ.s 			page 141


 2541 00aa BFF36F8F 		isb
 2542              	@ 0 "" 2
2187:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 2543              		.loc 1 2187 0
 2544              		.thumb
 2545              		.syntax unified
 2546 00ae 0124     		movs	r4, #1
 2547              	.LVL211:
 2548 00b0 C0E7     		b	.L235
 2549              	.LVL212:
 2550              	.L241:
 2551              	.LBB151:
2173:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2552              		.loc 1 2173 0
 2553 00b2 013C     		subs	r4, r4, #1
 2554              	.LVL213:
 2555 00b4 07D0     		beq	.L248
 2556              	.L242:
2164:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							{
 2557              		.loc 1 2164 0
 2558 00b6 FFF7FEFF 		bl	xTaskIncrementTick
 2559              	.LVL214:
 2560 00ba 0028     		cmp	r0, #0
 2561 00bc F9D0     		beq	.L241
2166:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 							}
 2562              		.loc 1 2166 0
 2563 00be 0122     		movs	r2, #1
 2564 00c0 0B4B     		ldr	r3, .L249+24
 2565 00c2 1A60     		str	r2, [r3]
 2566 00c4 F5E7     		b	.L241
 2567              	.L248:
2175:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 2568              		.loc 1 2175 0
 2569 00c6 0022     		movs	r2, #0
 2570 00c8 0A4B     		ldr	r3, .L249+28
 2571 00ca 1A60     		str	r2, [r3]
 2572 00cc E4E7     		b	.L240
 2573              	.LVL215:
 2574              	.L243:
 2575              	.LBE151:
2102:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2576              		.loc 1 2102 0
 2577 00ce 0024     		movs	r4, #0
 2578 00d0 B0E7     		b	.L235
 2579              	.LVL216:
 2580              	.L245:
 2581 00d2 0024     		movs	r4, #0
 2582              	.LVL217:
 2583 00d4 AEE7     		b	.L235
 2584              	.L250:
 2585 00d6 00BF     		.align	2
 2586              	.L249:
 2587 00d8 00000000 		.word	.LANCHOR16
 2588 00dc 00000000 		.word	.LANCHOR9
 2589 00e0 00000000 		.word	.LANCHOR1
 2590 00e4 00000000 		.word	.LANCHOR13
 2591 00e8 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/ccOm33QJ.s 			page 142


 2592 00ec 00000000 		.word	.LANCHOR10
 2593 00f0 00000000 		.word	.LANCHOR19
 2594 00f4 00000000 		.word	.LANCHOR18
 2595 00f8 04ED00E0 		.word	-536810236
 2596              		.cfi_endproc
 2597              	.LFE21:
 2599              		.section	.text.vTaskDelay,"ax",%progbits
 2600              		.align	1
 2601              		.global	vTaskDelay
 2602              		.syntax unified
 2603              		.thumb
 2604              		.thumb_func
 2605              		.fpu fpv4-sp-d16
 2607              	vTaskDelay:
 2608              	.LFB10:
1283:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2609              		.loc 1 1283 0
 2610              		.cfi_startproc
 2611              		@ args = 0, pretend = 0, frame = 0
 2612              		@ frame_needed = 0, uses_anonymous_args = 0
 2613              	.LVL218:
 2614 0000 10B5     		push	{r4, lr}
 2615              	.LCFI29:
 2616              		.cfi_def_cfa_offset 8
 2617              		.cfi_offset 4, -8
 2618              		.cfi_offset 14, -4
 2619              	.LVL219:
1287:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 2620              		.loc 1 1287 0
 2621 0002 A8B1     		cbz	r0, .L256
 2622 0004 0446     		mov	r4, r0
1289:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vTaskSuspendAll();
 2623              		.loc 1 1289 0
 2624 0006 104B     		ldr	r3, .L258
 2625 0008 1B68     		ldr	r3, [r3]
 2626 000a 43B1     		cbz	r3, .L253
 2627              	.LBB152:
 2628              	.LBB153:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 2629              		.loc 2 195 0
 2630              		.syntax unified
 2631              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 2632 000c 4FF05003 			mov r3, #80												
 2633 0010 83F31188 		msr basepri, r3											
 2634 0014 BFF36F8F 		isb														
 2635 0018 BFF34F8F 		dsb														
 2636              	
 2637              	@ 0 "" 2
 2638              	.LVL220:
 2639              		.thumb
 2640              		.syntax unified
 2641              	.L254:
 2642 001c FEE7     		b	.L254
 2643              	.L253:
 2644              	.LBE153:
 2645              	.LBE152:
1290:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
ARM GAS  /tmp/ccOm33QJ.s 			page 143


 2646              		.loc 1 1290 0
 2647 001e FFF7FEFF 		bl	vTaskSuspendAll
 2648              	.LVL221:
1301:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 2649              		.loc 1 1301 0
 2650 0022 0021     		movs	r1, #0
 2651 0024 2046     		mov	r0, r4
 2652 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2653              	.LVL222:
1303:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 2654              		.loc 1 1303 0
 2655 002a FFF7FEFF 		bl	xTaskResumeAll
 2656              	.LVL223:
 2657 002e 00E0     		b	.L252
 2658              	.LVL224:
 2659              	.L256:
1284:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2660              		.loc 1 1284 0
 2661 0030 0020     		movs	r0, #0
 2662              	.LVL225:
 2663              	.L252:
1312:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 2664              		.loc 1 1312 0
 2665 0032 38B9     		cbnz	r0, .L251
1314:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 2666              		.loc 1 1314 0
 2667 0034 4FF08052 		mov	r2, #268435456
 2668 0038 044B     		ldr	r3, .L258+4
 2669 003a 1A60     		str	r2, [r3]
 2670              		.syntax unified
 2671              	@ 1314 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 2672 003c BFF34F8F 		dsb
 2673              	@ 0 "" 2
 2674              	@ 1314 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 2675 0040 BFF36F8F 		isb
 2676              	@ 0 "" 2
 2677              		.thumb
 2678              		.syntax unified
 2679              	.L251:
 2680 0044 10BD     		pop	{r4, pc}
 2681              	.L259:
 2682 0046 00BF     		.align	2
 2683              	.L258:
 2684 0048 00000000 		.word	.LANCHOR16
 2685 004c 04ED00E0 		.word	-536810236
 2686              		.cfi_endproc
 2687              	.LFE10:
 2689              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2690              		.align	1
 2691              		.global	vTaskSwitchContext
 2692              		.syntax unified
 2693              		.thumb
 2694              		.thumb_func
 2695              		.fpu fpv4-sp-d16
 2697              	vTaskSwitchContext:
 2698              	.LFB27:
2846:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
ARM GAS  /tmp/ccOm33QJ.s 			page 144


 2699              		.loc 1 2846 0
 2700              		.cfi_startproc
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 0, uses_anonymous_args = 0
 2703              		@ link register save eliminated.
2847:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 2704              		.loc 1 2847 0
 2705 0000 214B     		ldr	r3, .L271
 2706 0002 1B68     		ldr	r3, [r3]
 2707 0004 C3B9     		cbnz	r3, .L269
2855:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2708              		.loc 1 2855 0
 2709 0006 0022     		movs	r2, #0
 2710 0008 204B     		ldr	r3, .L271+4
 2711 000a 1A60     		str	r2, [r3]
 2712              	.LBB154:
2890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_SWITCHED_IN();
 2713              		.loc 1 2890 0
 2714 000c 204B     		ldr	r3, .L271+8
 2715 000e 1B68     		ldr	r3, [r3]
 2716              	.LVL226:
 2717              	.LBB155:
 2718              	.LBB156:
 134:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 		return ucReturn;
 2719              		.loc 2 134 0
 2720              		.syntax unified
 2721              	@ 134 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 2722 0010 B3FA83F3 		clz r3, r3
 2723              	@ 0 "" 2
 2724              	.LVL227:
 2725              		.thumb
 2726              		.syntax unified
 2727 0014 DBB2     		uxtb	r3, r3
 2728              	.LBE156:
 2729              	.LBE155:
2890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_SWITCHED_IN();
 2730              		.loc 1 2890 0
 2731 0016 C3F11F03 		rsb	r3, r3, #31
 2732              	.LVL228:
 2733 001a 03EB8301 		add	r1, r3, r3, lsl #2
 2734 001e 8A00     		lsls	r2, r1, #2
 2735 0020 1C49     		ldr	r1, .L271+12
 2736 0022 8A58     		ldr	r2, [r1, r2]
 2737 0024 62B9     		cbnz	r2, .L263
 2738              	.LBB157:
 2739              	.LBB158:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 2740              		.loc 2 195 0
 2741              		.syntax unified
 2742              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 2743 0026 4FF05003 			mov r3, #80												
 2744 002a 83F31188 		msr basepri, r3											
 2745 002e BFF36F8F 		isb														
 2746 0032 BFF34F8F 		dsb														
 2747              	
 2748              	@ 0 "" 2
 2749              	.LVL229:
ARM GAS  /tmp/ccOm33QJ.s 			page 145


 2750              		.thumb
 2751              		.syntax unified
 2752              	.L264:
 2753 0036 FEE7     		b	.L264
 2754              	.L269:
 2755              	.LBE158:
 2756              	.LBE157:
 2757              	.LBE154:
2851:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 2758              		.loc 1 2851 0
 2759 0038 0122     		movs	r2, #1
 2760 003a 144B     		ldr	r3, .L271+4
 2761 003c 1A60     		str	r2, [r3]
 2762 003e 7047     		bx	lr
 2763              	.LVL230:
 2764              	.L263:
2846:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2765              		.loc 1 2846 0 discriminator 2
 2766 0040 10B4     		push	{r4}
 2767              	.LCFI30:
 2768              		.cfi_def_cfa_offset 4
 2769              		.cfi_offset 4, -4
 2770              	.LVL231:
 2771              	.LBB161:
 2772              	.LBB159:
2890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_SWITCHED_IN();
 2773              		.loc 1 2890 0 discriminator 2
 2774 0042 1448     		ldr	r0, .L271+12
 2775 0044 9A00     		lsls	r2, r3, #2
 2776 0046 D418     		adds	r4, r2, r3
 2777 0048 A100     		lsls	r1, r4, #2
 2778 004a 0144     		add	r1, r1, r0
 2779 004c 4C68     		ldr	r4, [r1, #4]
 2780 004e 6468     		ldr	r4, [r4, #4]
 2781 0050 4C60     		str	r4, [r1, #4]
 2782 0052 1A44     		add	r2, r2, r3
 2783 0054 9100     		lsls	r1, r2, #2
 2784 0056 0831     		adds	r1, r1, #8
 2785 0058 0844     		add	r0, r0, r1
 2786 005a 8442     		cmp	r4, r0
 2787 005c 0BD0     		beq	.L270
 2788              	.L265:
2890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_SWITCHED_IN();
 2789              		.loc 1 2890 0 is_stmt 0 discriminator 5
 2790 005e 03EB8303 		add	r3, r3, r3, lsl #2
 2791              	.LVL232:
 2792 0062 9A00     		lsls	r2, r3, #2
 2793 0064 0B4B     		ldr	r3, .L271+12
 2794 0066 1344     		add	r3, r3, r2
 2795 0068 5B68     		ldr	r3, [r3, #4]
 2796 006a DA68     		ldr	r2, [r3, #12]
 2797 006c 0A4B     		ldr	r3, .L271+16
 2798 006e 1A60     		str	r2, [r3]
 2799              	.LBE159:
 2800              	.LBE161:
2901:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 2801              		.loc 1 2901 0 is_stmt 1 discriminator 5
ARM GAS  /tmp/ccOm33QJ.s 			page 146


 2802 0070 5DF8044B 		ldr	r4, [sp], #4
 2803              	.LCFI31:
 2804              		.cfi_remember_state
 2805              		.cfi_restore 4
 2806              		.cfi_def_cfa_offset 0
 2807 0074 7047     		bx	lr
 2808              	.LVL233:
 2809              	.L270:
 2810              	.LCFI32:
 2811              		.cfi_restore_state
 2812              	.LBB162:
 2813              	.LBB160:
2890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		traceTASK_SWITCHED_IN();
 2814              		.loc 1 2890 0 discriminator 3
 2815 0076 6068     		ldr	r0, [r4, #4]
 2816 0078 03EB8302 		add	r2, r3, r3, lsl #2
 2817 007c 9100     		lsls	r1, r2, #2
 2818 007e 054A     		ldr	r2, .L271+12
 2819 0080 0A44     		add	r2, r2, r1
 2820 0082 5060     		str	r0, [r2, #4]
 2821 0084 EBE7     		b	.L265
 2822              	.L272:
 2823 0086 00BF     		.align	2
 2824              	.L271:
 2825 0088 00000000 		.word	.LANCHOR16
 2826 008c 00000000 		.word	.LANCHOR19
 2827 0090 00000000 		.word	.LANCHOR13
 2828 0094 00000000 		.word	.LANCHOR4
 2829 0098 00000000 		.word	.LANCHOR10
 2830              	.LBE160:
 2831              	.LBE162:
 2832              		.cfi_endproc
 2833              	.LFE27:
 2835              		.section	.text.vTaskSuspend,"ax",%progbits
 2836              		.align	1
 2837              		.global	vTaskSuspend
 2838              		.syntax unified
 2839              		.thumb
 2840              		.thumb_func
 2841              		.fpu fpv4-sp-d16
 2843              	vTaskSuspend:
 2844              	.LFB14:
1625:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
 2845              		.loc 1 1625 0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 0
 2848              		@ frame_needed = 0, uses_anonymous_args = 0
 2849              	.LVL234:
 2850 0000 38B5     		push	{r3, r4, r5, lr}
 2851              	.LCFI33:
 2852              		.cfi_def_cfa_offset 16
 2853              		.cfi_offset 3, -16
 2854              		.cfi_offset 4, -12
 2855              		.cfi_offset 5, -8
 2856              		.cfi_offset 14, -4
 2857 0002 0446     		mov	r4, r0
1628:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
ARM GAS  /tmp/ccOm33QJ.s 			page 147


 2858              		.loc 1 1628 0
 2859 0004 FFF7FEFF 		bl	vPortEnterCritical
 2860              	.LVL235:
1632:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2861              		.loc 1 1632 0
 2862 0008 64B3     		cbz	r4, .L286
 2863              	.LVL236:
 2864              	.L274:
1638:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 2865              		.loc 1 1638 0 discriminator 4
 2866 000a 251D     		adds	r5, r4, #4
 2867 000c 2846     		mov	r0, r5
 2868 000e FFF7FEFF 		bl	uxListRemove
 2869              	.LVL237:
 2870 0012 70B9     		cbnz	r0, .L275
1640:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 2871              		.loc 1 1640 0
 2872 0014 E26A     		ldr	r2, [r4, #44]
 2873 0016 02EB8201 		add	r1, r2, r2, lsl #2
 2874 001a 8B00     		lsls	r3, r1, #2
 2875 001c 2B49     		ldr	r1, .L290
 2876 001e CB58     		ldr	r3, [r1, r3]
 2877 0020 3BB9     		cbnz	r3, .L275
1640:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 2878              		.loc 1 1640 0 is_stmt 0 discriminator 1
 2879 0022 0123     		movs	r3, #1
 2880 0024 03FA02F2 		lsl	r2, r3, r2
 2881 0028 2949     		ldr	r1, .L290+4
 2882 002a 0B68     		ldr	r3, [r1]
 2883 002c 23EA0203 		bic	r3, r3, r2
 2884 0030 0B60     		str	r3, [r1]
 2885              	.L275:
1648:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 2886              		.loc 1 1648 0 is_stmt 1
 2887 0032 A36A     		ldr	r3, [r4, #40]
 2888 0034 1BB1     		cbz	r3, .L276
1650:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 2889              		.loc 1 1650 0
 2890 0036 04F11800 		add	r0, r4, #24
 2891 003a FFF7FEFF 		bl	uxListRemove
 2892              	.LVL238:
 2893              	.L276:
1657:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2894              		.loc 1 1657 0
 2895 003e 2946     		mov	r1, r5
 2896 0040 2448     		ldr	r0, .L290+8
 2897 0042 FFF7FEFF 		bl	vListInsertEnd
 2898              	.LVL239:
1661:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 2899              		.loc 1 1661 0
 2900 0046 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 2901 004a DBB2     		uxtb	r3, r3
 2902 004c 012B     		cmp	r3, #1
 2903 004e 0CD0     		beq	.L287
 2904              	.L277:
1670:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2905              		.loc 1 1670 0
ARM GAS  /tmp/ccOm33QJ.s 			page 148


 2906 0050 FFF7FEFF 		bl	vPortExitCritical
 2907              	.LVL240:
1672:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 2908              		.loc 1 1672 0
 2909 0054 204B     		ldr	r3, .L290+12
 2910 0056 1B68     		ldr	r3, [r3]
 2911 0058 5BB9     		cbnz	r3, .L288
 2912              	.L278:
1687:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 2913              		.loc 1 1687 0
 2914 005a 204B     		ldr	r3, .L290+16
 2915 005c 1B68     		ldr	r3, [r3]
 2916 005e 9C42     		cmp	r4, r3
 2917 0060 0ED0     		beq	.L289
 2918              	.L273:
 2919 0062 38BD     		pop	{r3, r4, r5, pc}
 2920              	.LVL241:
 2921              	.L286:
1632:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 2922              		.loc 1 1632 0 discriminator 1
 2923 0064 1D4B     		ldr	r3, .L290+16
 2924 0066 1C68     		ldr	r4, [r3]
 2925              	.LVL242:
 2926 0068 CFE7     		b	.L274
 2927              	.LVL243:
 2928              	.L287:
1665:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 2929              		.loc 1 1665 0
 2930 006a 0023     		movs	r3, #0
 2931 006c 84F85030 		strb	r3, [r4, #80]
 2932 0070 EEE7     		b	.L277
 2933              	.L288:
1676:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 2934              		.loc 1 1676 0
 2935 0072 FFF7FEFF 		bl	vPortEnterCritical
 2936              	.LVL244:
1678:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 2937              		.loc 1 1678 0
 2938 0076 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2939              	.LVL245:
1680:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 2940              		.loc 1 1680 0
 2941 007a FFF7FEFF 		bl	vPortExitCritical
 2942              	.LVL246:
 2943 007e ECE7     		b	.L278
 2944              	.L289:
1689:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 2945              		.loc 1 1689 0
 2946 0080 154B     		ldr	r3, .L290+12
 2947 0082 1B68     		ldr	r3, [r3]
 2948 0084 A3B1     		cbz	r3, .L280
1692:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				portYIELD_WITHIN_API();
 2949              		.loc 1 1692 0
 2950 0086 164B     		ldr	r3, .L290+20
 2951 0088 1B68     		ldr	r3, [r3]
 2952 008a 43B1     		cbz	r3, .L281
 2953              	.LBB163:
ARM GAS  /tmp/ccOm33QJ.s 			page 149


 2954              	.LBB164:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 2955              		.loc 2 195 0
 2956              		.syntax unified
 2957              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 2958 008c 4FF05003 			mov r3, #80												
 2959 0090 83F31188 		msr basepri, r3											
 2960 0094 BFF36F8F 		isb														
 2961 0098 BFF34F8F 		dsb														
 2962              	
 2963              	@ 0 "" 2
 2964              	.LVL247:
 2965              		.thumb
 2966              		.syntax unified
 2967              	.L282:
 2968 009c FEE7     		b	.L282
 2969              	.L281:
 2970              	.LBE164:
 2971              	.LBE163:
1693:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 2972              		.loc 1 1693 0
 2973 009e 4FF08052 		mov	r2, #268435456
 2974 00a2 104B     		ldr	r3, .L290+24
 2975 00a4 1A60     		str	r2, [r3]
 2976              		.syntax unified
 2977              	@ 1693 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 2978 00a6 BFF34F8F 		dsb
 2979              	@ 0 "" 2
 2980              	@ 1693 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 2981 00aa BFF36F8F 		isb
 2982              	@ 0 "" 2
 2983              		.thumb
 2984              		.syntax unified
 2985 00ae 38BD     		pop	{r3, r4, r5, pc}
 2986              	.LVL248:
 2987              	.L280:
1700:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 2988              		.loc 1 1700 0
 2989 00b0 084B     		ldr	r3, .L290+8
 2990 00b2 1A68     		ldr	r2, [r3]
 2991 00b4 0C4B     		ldr	r3, .L290+28
 2992 00b6 1B68     		ldr	r3, [r3]
 2993 00b8 9A42     		cmp	r2, r3
 2994 00ba 03D1     		bne	.L283
1706:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 2995              		.loc 1 1706 0
 2996 00bc 0022     		movs	r2, #0
 2997 00be 074B     		ldr	r3, .L290+16
 2998 00c0 1A60     		str	r2, [r3]
 2999 00c2 38BD     		pop	{r3, r4, r5, pc}
 3000              	.LVL249:
 3001              	.L283:
1710:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 3002              		.loc 1 1710 0
 3003 00c4 FFF7FEFF 		bl	vTaskSwitchContext
 3004              	.LVL250:
1718:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 150


 3005              		.loc 1 1718 0
 3006 00c8 CBE7     		b	.L273
 3007              	.L291:
 3008 00ca 00BF     		.align	2
 3009              	.L290:
 3010 00cc 00000000 		.word	.LANCHOR4
 3011 00d0 00000000 		.word	.LANCHOR13
 3012 00d4 00000000 		.word	.LANCHOR0
 3013 00d8 00000000 		.word	.LANCHOR11
 3014 00dc 00000000 		.word	.LANCHOR10
 3015 00e0 00000000 		.word	.LANCHOR16
 3016 00e4 04ED00E0 		.word	-536810236
 3017 00e8 00000000 		.word	.LANCHOR9
 3018              		.cfi_endproc
 3019              	.LFE14:
 3021              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3022              		.align	1
 3023              		.global	vTaskPlaceOnEventList
 3024              		.syntax unified
 3025              		.thumb
 3026              		.thumb_func
 3027              		.fpu fpv4-sp-d16
 3029              	vTaskPlaceOnEventList:
 3030              	.LFB28:
2905:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxEventList );
 3031              		.loc 1 2905 0
 3032              		.cfi_startproc
 3033              		@ args = 0, pretend = 0, frame = 0
 3034              		@ frame_needed = 0, uses_anonymous_args = 0
 3035              	.LVL251:
2906:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3036              		.loc 1 2906 0
 3037 0000 40B9     		cbnz	r0, .L293
 3038              	.LBB165:
 3039              	.LBB166:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3040              		.loc 2 195 0
 3041              		.syntax unified
 3042              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3043 0002 4FF05003 			mov r3, #80												
 3044 0006 83F31188 		msr basepri, r3											
 3045 000a BFF36F8F 		isb														
 3046 000e BFF34F8F 		dsb														
 3047              	
 3048              	@ 0 "" 2
 3049              	.LVL252:
 3050              		.thumb
 3051              		.syntax unified
 3052              	.L294:
 3053 0012 FEE7     		b	.L294
 3054              	.L293:
 3055              	.LBE166:
 3056              	.LBE165:
2905:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxEventList );
 3057              		.loc 1 2905 0
 3058 0014 10B5     		push	{r4, lr}
 3059              	.LCFI34:
ARM GAS  /tmp/ccOm33QJ.s 			page 151


 3060              		.cfi_def_cfa_offset 8
 3061              		.cfi_offset 4, -8
 3062              		.cfi_offset 14, -4
 3063 0016 0C46     		mov	r4, r1
2915:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3064              		.loc 1 2915 0
 3065 0018 044B     		ldr	r3, .L297
 3066 001a 1968     		ldr	r1, [r3]
 3067              	.LVL253:
 3068 001c 1831     		adds	r1, r1, #24
 3069 001e FFF7FEFF 		bl	vListInsert
 3070              	.LVL254:
2917:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 3071              		.loc 1 2917 0
 3072 0022 0121     		movs	r1, #1
 3073 0024 2046     		mov	r0, r4
 3074 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3075              	.LVL255:
 3076 002a 10BD     		pop	{r4, pc}
 3077              	.LVL256:
 3078              	.L298:
 3079              		.align	2
 3080              	.L297:
 3081 002c 00000000 		.word	.LANCHOR10
 3082              		.cfi_endproc
 3083              	.LFE28:
 3085              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3086              		.align	1
 3087              		.global	vTaskPlaceOnUnorderedEventList
 3088              		.syntax unified
 3089              		.thumb
 3090              		.thumb_func
 3091              		.fpu fpv4-sp-d16
 3093              	vTaskPlaceOnUnorderedEventList:
 3094              	.LFB29:
2922:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxEventList );
 3095              		.loc 1 2922 0
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 0
 3098              		@ frame_needed = 0, uses_anonymous_args = 0
 3099              	.LVL257:
2923:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3100              		.loc 1 2923 0
 3101 0000 60B1     		cbz	r0, .L306
 3102 0002 0346     		mov	r3, r0
2927:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3103              		.loc 1 2927 0
 3104 0004 1348     		ldr	r0, .L307
 3105              	.LVL258:
 3106 0006 0068     		ldr	r0, [r0]
 3107 0008 88B9     		cbnz	r0, .L302
 3108              	.LBB167:
 3109              	.LBB168:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3110              		.loc 2 195 0
 3111              		.syntax unified
 3112              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
ARM GAS  /tmp/ccOm33QJ.s 			page 152


 3113 000a 4FF05003 			mov r3, #80												
 3114 000e 83F31188 		msr basepri, r3											
 3115 0012 BFF36F8F 		isb														
 3116 0016 BFF34F8F 		dsb														
 3117              	
 3118              	@ 0 "" 2
 3119              	.LVL259:
 3120              		.thumb
 3121              		.syntax unified
 3122              	.L303:
 3123 001a FEE7     		b	.L303
 3124              	.LVL260:
 3125              	.L306:
 3126              	.LBE168:
 3127              	.LBE167:
 3128              	.LBB169:
 3129              	.LBB170:
 3130              		.syntax unified
 3131              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3132 001c 4FF05003 			mov r3, #80												
 3133 0020 83F31188 		msr basepri, r3											
 3134 0024 BFF36F8F 		isb														
 3135 0028 BFF34F8F 		dsb														
 3136              	
 3137              	@ 0 "" 2
 3138              	.LVL261:
 3139              		.thumb
 3140              		.syntax unified
 3141              	.L301:
 3142 002c FEE7     		b	.L301
 3143              	.LVL262:
 3144              	.L302:
 3145              	.LBE170:
 3146              	.LBE169:
2922:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxEventList );
 3147              		.loc 1 2922 0
 3148 002e 10B5     		push	{r4, lr}
 3149              	.LCFI35:
 3150              		.cfi_def_cfa_offset 8
 3151              		.cfi_offset 4, -8
 3152              		.cfi_offset 14, -4
 3153 0030 1846     		mov	r0, r3
 3154 0032 1446     		mov	r4, r2
 3155 0034 0B46     		mov	r3, r1
 3156              	.LVL263:
2932:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3157              		.loc 1 2932 0
 3158 0036 084A     		ldr	r2, .L307+4
 3159              	.LVL264:
 3160 0038 1168     		ldr	r1, [r2]
 3161              	.LVL265:
 3162 003a 43F00043 		orr	r3, r3, #-2147483648
 3163              	.LVL266:
 3164 003e 8B61     		str	r3, [r1, #24]
2939:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3165              		.loc 1 2939 0
 3166 0040 1168     		ldr	r1, [r2]
ARM GAS  /tmp/ccOm33QJ.s 			page 153


 3167 0042 1831     		adds	r1, r1, #24
 3168 0044 FFF7FEFF 		bl	vListInsertEnd
 3169              	.LVL267:
2941:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 3170              		.loc 1 2941 0
 3171 0048 0121     		movs	r1, #1
 3172 004a 2046     		mov	r0, r4
 3173 004c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3174              	.LVL268:
 3175 0050 10BD     		pop	{r4, pc}
 3176              	.LVL269:
 3177              	.L308:
 3178 0052 00BF     		.align	2
 3179              	.L307:
 3180 0054 00000000 		.word	.LANCHOR16
 3181 0058 00000000 		.word	.LANCHOR10
 3182              		.cfi_endproc
 3183              	.LFE29:
 3185              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3186              		.align	1
 3187              		.global	xTaskRemoveFromEventList
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv4-sp-d16
 3193              	xTaskRemoveFromEventList:
 3194              	.LFB30:
2979:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxUnblockedTCB;
 3195              		.loc 1 2979 0
 3196              		.cfi_startproc
 3197              		@ args = 0, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199              	.LVL270:
 3200 0000 38B5     		push	{r3, r4, r5, lr}
 3201              	.LCFI36:
 3202              		.cfi_def_cfa_offset 16
 3203              		.cfi_offset 3, -16
 3204              		.cfi_offset 4, -12
 3205              		.cfi_offset 5, -8
 3206              		.cfi_offset 14, -4
2996:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3207              		.loc 1 2996 0
 3208 0002 C368     		ldr	r3, [r0, #12]
 3209 0004 DC68     		ldr	r4, [r3, #12]
 3210              	.LVL271:
2997:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3211              		.loc 1 2997 0
 3212 0006 24B3     		cbz	r4, .L317
2998:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3213              		.loc 1 2998 0
 3214 0008 04F11805 		add	r5, r4, #24
 3215 000c 2846     		mov	r0, r5
 3216              	.LVL272:
 3217 000e FFF7FEFF 		bl	uxListRemove
 3218              	.LVL273:
3000:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 3219              		.loc 1 3000 0
ARM GAS  /tmp/ccOm33QJ.s 			page 154


 3220 0012 184B     		ldr	r3, .L318
 3221 0014 1B68     		ldr	r3, [r3]
 3222 0016 2BBB     		cbnz	r3, .L312
3002:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3223              		.loc 1 3002 0
 3224 0018 251D     		adds	r5, r4, #4
 3225 001a 2846     		mov	r0, r5
 3226 001c FFF7FEFF 		bl	uxListRemove
 3227              	.LVL274:
3003:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 3228              		.loc 1 3003 0
 3229 0020 E36A     		ldr	r3, [r4, #44]
 3230 0022 0122     		movs	r2, #1
 3231 0024 9A40     		lsls	r2, r2, r3
 3232 0026 1449     		ldr	r1, .L318+4
 3233 0028 0868     		ldr	r0, [r1]
 3234 002a 0243     		orrs	r2, r2, r0
 3235 002c 0A60     		str	r2, [r1]
 3236 002e 03EB8303 		add	r3, r3, r3, lsl #2
 3237 0032 9A00     		lsls	r2, r3, #2
 3238 0034 2946     		mov	r1, r5
 3239 0036 1148     		ldr	r0, .L318+8
 3240 0038 1044     		add	r0, r0, r2
 3241 003a FFF7FEFF 		bl	vListInsertEnd
 3242              	.LVL275:
 3243              	.L313:
3012:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 3244              		.loc 1 3012 0
 3245 003e E26A     		ldr	r2, [r4, #44]
 3246 0040 0F4B     		ldr	r3, .L318+12
 3247 0042 1B68     		ldr	r3, [r3]
 3248 0044 DB6A     		ldr	r3, [r3, #44]
 3249 0046 9A42     		cmp	r2, r3
 3250 0048 11D9     		bls	.L315
 3251              	.LVL276:
3021:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 3252              		.loc 1 3021 0
 3253 004a 0120     		movs	r0, #1
 3254 004c 0D4B     		ldr	r3, .L318+16
 3255 004e 1860     		str	r0, [r3]
 3256 0050 38BD     		pop	{r3, r4, r5, pc}
 3257              	.LVL277:
 3258              	.L317:
 3259              	.LBB171:
 3260              	.LBB172:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3261              		.loc 2 195 0
 3262              		.syntax unified
 3263              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3264 0052 4FF05003 			mov r3, #80												
 3265 0056 83F31188 		msr basepri, r3											
 3266 005a BFF36F8F 		isb														
 3267 005e BFF34F8F 		dsb														
 3268              	
 3269              	@ 0 "" 2
 3270              	.LVL278:
 3271              		.thumb
ARM GAS  /tmp/ccOm33QJ.s 			page 155


 3272              		.syntax unified
 3273              	.L311:
 3274 0062 FEE7     		b	.L311
 3275              	.LVL279:
 3276              	.L312:
 3277              	.LBE172:
 3278              	.LBE171:
3009:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 3279              		.loc 1 3009 0
 3280 0064 2946     		mov	r1, r5
 3281 0066 0848     		ldr	r0, .L318+20
 3282 0068 FFF7FEFF 		bl	vListInsertEnd
 3283              	.LVL280:
 3284 006c E7E7     		b	.L313
 3285              	.L315:
3025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 3286              		.loc 1 3025 0
 3287 006e 0020     		movs	r0, #0
 3288              	.LVL281:
3043:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 3289              		.loc 1 3043 0
 3290 0070 38BD     		pop	{r3, r4, r5, pc}
 3291              	.LVL282:
 3292              	.L319:
 3293 0072 00BF     		.align	2
 3294              	.L318:
 3295 0074 00000000 		.word	.LANCHOR16
 3296 0078 00000000 		.word	.LANCHOR13
 3297 007c 00000000 		.word	.LANCHOR4
 3298 0080 00000000 		.word	.LANCHOR10
 3299 0084 00000000 		.word	.LANCHOR19
 3300 0088 00000000 		.word	.LANCHOR1
 3301              		.cfi_endproc
 3302              	.LFE30:
 3304              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3305              		.align	1
 3306              		.global	vTaskRemoveFromUnorderedEventList
 3307              		.syntax unified
 3308              		.thumb
 3309              		.thumb_func
 3310              		.fpu fpv4-sp-d16
 3312              	vTaskRemoveFromUnorderedEventList:
 3313              	.LFB31:
3047:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TCB_t *pxUnblockedTCB;
 3314              		.loc 1 3047 0
 3315              		.cfi_startproc
 3316              		@ args = 0, pretend = 0, frame = 0
 3317              		@ frame_needed = 0, uses_anonymous_args = 0
 3318              	.LVL283:
 3319 0000 38B5     		push	{r3, r4, r5, lr}
 3320              	.LCFI37:
 3321              		.cfi_def_cfa_offset 16
 3322              		.cfi_offset 3, -16
 3323              		.cfi_offset 4, -12
 3324              		.cfi_offset 5, -8
 3325              		.cfi_offset 14, -4
3052:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 156


 3326              		.loc 1 3052 0
 3327 0002 1C4B     		ldr	r3, .L328
 3328 0004 1B68     		ldr	r3, [r3]
 3329 0006 43B9     		cbnz	r3, .L321
 3330              	.LBB173:
 3331              	.LBB174:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3332              		.loc 2 195 0
 3333              		.syntax unified
 3334              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3335 0008 4FF05003 			mov r3, #80												
 3336 000c 83F31188 		msr basepri, r3											
 3337 0010 BFF36F8F 		isb														
 3338 0014 BFF34F8F 		dsb														
 3339              	
 3340              	@ 0 "" 2
 3341              	.LVL284:
 3342              		.thumb
 3343              		.syntax unified
 3344              	.L322:
 3345 0018 FEE7     		b	.L322
 3346              	.L321:
 3347              	.LBE174:
 3348              	.LBE173:
3055:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3349              		.loc 1 3055 0
 3350 001a 41F00041 		orr	r1, r1, #-2147483648
 3351              	.LVL285:
 3352 001e 0160     		str	r1, [r0]
3059:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3353              		.loc 1 3059 0
 3354 0020 C468     		ldr	r4, [r0, #12]
 3355              	.LVL286:
3060:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3356              		.loc 1 3060 0
 3357 0022 F4B1     		cbz	r4, .L327
3061:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3358              		.loc 1 3061 0
 3359 0024 FFF7FEFF 		bl	uxListRemove
 3360              	.LVL287:
3066:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3361              		.loc 1 3066 0
 3362 0028 251D     		adds	r5, r4, #4
 3363 002a 2846     		mov	r0, r5
 3364 002c FFF7FEFF 		bl	uxListRemove
 3365              	.LVL288:
3067:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3366              		.loc 1 3067 0
 3367 0030 E36A     		ldr	r3, [r4, #44]
 3368 0032 0122     		movs	r2, #1
 3369 0034 9A40     		lsls	r2, r2, r3
 3370 0036 1049     		ldr	r1, .L328+4
 3371 0038 0868     		ldr	r0, [r1]
 3372 003a 0243     		orrs	r2, r2, r0
 3373 003c 0A60     		str	r2, [r1]
 3374 003e 03EB8303 		add	r3, r3, r3, lsl #2
 3375 0042 9A00     		lsls	r2, r3, #2
ARM GAS  /tmp/ccOm33QJ.s 			page 157


 3376 0044 2946     		mov	r1, r5
 3377 0046 0D48     		ldr	r0, .L328+8
 3378 0048 1044     		add	r0, r0, r2
 3379 004a FFF7FEFF 		bl	vListInsertEnd
 3380              	.LVL289:
3069:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 3381              		.loc 1 3069 0
 3382 004e E26A     		ldr	r2, [r4, #44]
 3383 0050 0B4B     		ldr	r3, .L328+12
 3384 0052 1B68     		ldr	r3, [r3]
 3385 0054 DB6A     		ldr	r3, [r3, #44]
 3386 0056 9A42     		cmp	r2, r3
 3387 0058 02D9     		bls	.L320
3075:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 3388              		.loc 1 3075 0
 3389 005a 0122     		movs	r2, #1
 3390 005c 094B     		ldr	r3, .L328+16
 3391 005e 1A60     		str	r2, [r3]
 3392              	.L320:
 3393 0060 38BD     		pop	{r3, r4, r5, pc}
 3394              	.LVL290:
 3395              	.L327:
 3396              	.LBB175:
 3397              	.LBB176:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3398              		.loc 2 195 0
 3399              		.syntax unified
 3400              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3401 0062 4FF05003 			mov r3, #80												
 3402 0066 83F31188 		msr basepri, r3											
 3403 006a BFF36F8F 		isb														
 3404 006e BFF34F8F 		dsb														
 3405              	
 3406              	@ 0 "" 2
 3407              	.LVL291:
 3408              		.thumb
 3409              		.syntax unified
 3410              	.L324:
 3411 0072 FEE7     		b	.L324
 3412              	.L329:
 3413              		.align	2
 3414              	.L328:
 3415 0074 00000000 		.word	.LANCHOR16
 3416 0078 00000000 		.word	.LANCHOR13
 3417 007c 00000000 		.word	.LANCHOR4
 3418 0080 00000000 		.word	.LANCHOR10
 3419 0084 00000000 		.word	.LANCHOR19
 3420              	.LBE176:
 3421              	.LBE175:
 3422              		.cfi_endproc
 3423              	.LFE31:
 3425              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3426              		.align	1
 3427              		.global	vTaskSetTimeOutState
 3428              		.syntax unified
 3429              		.thumb
 3430              		.thumb_func
ARM GAS  /tmp/ccOm33QJ.s 			page 158


 3431              		.fpu fpv4-sp-d16
 3433              	vTaskSetTimeOutState:
 3434              	.LFB32:
3081:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTimeOut );
 3435              		.loc 1 3081 0
 3436              		.cfi_startproc
 3437              		@ args = 0, pretend = 0, frame = 0
 3438              		@ frame_needed = 0, uses_anonymous_args = 0
 3439              	.LVL292:
3082:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	taskENTER_CRITICAL();
 3440              		.loc 1 3082 0
 3441 0000 40B9     		cbnz	r0, .L331
 3442              	.LBB177:
 3443              	.LBB178:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3444              		.loc 2 195 0
 3445              		.syntax unified
 3446              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3447 0002 4FF05003 			mov r3, #80												
 3448 0006 83F31188 		msr basepri, r3											
 3449 000a BFF36F8F 		isb														
 3450 000e BFF34F8F 		dsb														
 3451              	
 3452              	@ 0 "" 2
 3453              	.LVL293:
 3454              		.thumb
 3455              		.syntax unified
 3456              	.L332:
 3457 0012 FEE7     		b	.L332
 3458              	.L331:
 3459              	.LBE178:
 3460              	.LBE177:
3081:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTimeOut );
 3461              		.loc 1 3081 0
 3462 0014 10B5     		push	{r4, lr}
 3463              	.LCFI38:
 3464              		.cfi_def_cfa_offset 8
 3465              		.cfi_offset 4, -8
 3466              		.cfi_offset 14, -4
 3467 0016 0446     		mov	r4, r0
3083:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 3468              		.loc 1 3083 0
 3469 0018 FFF7FEFF 		bl	vPortEnterCritical
 3470              	.LVL294:
3085:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3471              		.loc 1 3085 0
 3472 001c 044B     		ldr	r3, .L335
 3473 001e 1B68     		ldr	r3, [r3]
 3474 0020 2360     		str	r3, [r4]
3086:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 3475              		.loc 1 3086 0
 3476 0022 044B     		ldr	r3, .L335+4
 3477 0024 1B68     		ldr	r3, [r3]
 3478 0026 6360     		str	r3, [r4, #4]
3088:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 3479              		.loc 1 3088 0
 3480 0028 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/ccOm33QJ.s 			page 159


 3481              	.LVL295:
 3482 002c 10BD     		pop	{r4, pc}
 3483              	.LVL296:
 3484              	.L336:
 3485 002e 00BF     		.align	2
 3486              	.L335:
 3487 0030 00000000 		.word	.LANCHOR17
 3488 0034 00000000 		.word	.LANCHOR15
 3489              		.cfi_endproc
 3490              	.LFE32:
 3492              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3493              		.align	1
 3494              		.global	vTaskInternalSetTimeOutState
 3495              		.syntax unified
 3496              		.thumb
 3497              		.thumb_func
 3498              		.fpu fpv4-sp-d16
 3500              	vTaskInternalSetTimeOutState:
 3501              	.LFB33:
3093:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3502              		.loc 1 3093 0
 3503              		.cfi_startproc
 3504              		@ args = 0, pretend = 0, frame = 0
 3505              		@ frame_needed = 0, uses_anonymous_args = 0
 3506              		@ link register save eliminated.
 3507              	.LVL297:
3095:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3508              		.loc 1 3095 0
 3509 0000 034B     		ldr	r3, .L338
 3510 0002 1B68     		ldr	r3, [r3]
 3511 0004 0360     		str	r3, [r0]
3096:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 3512              		.loc 1 3096 0
 3513 0006 034B     		ldr	r3, .L338+4
 3514 0008 1B68     		ldr	r3, [r3]
 3515 000a 4360     		str	r3, [r0, #4]
 3516 000c 7047     		bx	lr
 3517              	.L339:
 3518 000e 00BF     		.align	2
 3519              	.L338:
 3520 0010 00000000 		.word	.LANCHOR17
 3521 0014 00000000 		.word	.LANCHOR15
 3522              		.cfi_endproc
 3523              	.LFE33:
 3525              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3526              		.align	1
 3527              		.global	xTaskCheckForTimeOut
 3528              		.syntax unified
 3529              		.thumb
 3530              		.thumb_func
 3531              		.fpu fpv4-sp-d16
 3533              	xTaskCheckForTimeOut:
 3534              	.LFB34:
3101:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** BaseType_t xReturn;
 3535              		.loc 1 3101 0
 3536              		.cfi_startproc
 3537              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccOm33QJ.s 			page 160


 3538              		@ frame_needed = 0, uses_anonymous_args = 0
 3539              	.LVL298:
 3540 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3541              	.LCFI39:
 3542              		.cfi_def_cfa_offset 24
 3543              		.cfi_offset 3, -24
 3544              		.cfi_offset 4, -20
 3545              		.cfi_offset 5, -16
 3546              		.cfi_offset 6, -12
 3547              		.cfi_offset 7, -8
 3548              		.cfi_offset 14, -4
3104:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	configASSERT( pxTicksToWait );
 3549              		.loc 1 3104 0
 3550 0002 E0B1     		cbz	r0, .L351
 3551 0004 0546     		mov	r5, r0
3105:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3552              		.loc 1 3105 0
 3553 0006 19B3     		cbz	r1, .L352
 3554 0008 0C46     		mov	r4, r1
3107:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	{
 3555              		.loc 1 3107 0
 3556 000a FFF7FEFF 		bl	vPortEnterCritical
 3557              	.LVL299:
 3558              	.LBB179:
3110:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3559              		.loc 1 3110 0
 3560 000e 1A4B     		ldr	r3, .L354
 3561 0010 1868     		ldr	r0, [r3]
 3562              	.LVL300:
3111:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3563              		.loc 1 3111 0
 3564 0012 6968     		ldr	r1, [r5, #4]
 3565 0014 421A     		subs	r2, r0, r1
 3566              	.LVL301:
3125:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 3567              		.loc 1 3125 0
 3568 0016 2368     		ldr	r3, [r4]
 3569 0018 B3F1FF3F 		cmp	r3, #-1
 3570 001c 28D0     		beq	.L348
3135:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 3571              		.loc 1 3135 0
 3572 001e 2F68     		ldr	r7, [r5]
 3573 0020 164E     		ldr	r6, .L354+4
 3574 0022 3668     		ldr	r6, [r6]
 3575 0024 B742     		cmp	r7, r6
 3576 0026 01D0     		beq	.L346
3135:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 3577              		.loc 1 3135 0 is_stmt 0 discriminator 1
 3578 0028 8842     		cmp	r0, r1
 3579 002a 23D2     		bcs	.L349
 3580              	.L346:
3144:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 3581              		.loc 1 3144 0 is_stmt 1
 3582 002c 9A42     		cmp	r2, r3
 3583 002e 18D3     		bcc	.L353
3153:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdTRUE;
 3584              		.loc 1 3153 0
ARM GAS  /tmp/ccOm33QJ.s 			page 161


 3585 0030 0023     		movs	r3, #0
 3586 0032 2360     		str	r3, [r4]
 3587              	.LVL302:
3154:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 3588              		.loc 1 3154 0
 3589 0034 0124     		movs	r4, #1
 3590              	.LVL303:
 3591              	.L345:
 3592              	.LBE179:
3157:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3593              		.loc 1 3157 0
 3594 0036 FFF7FEFF 		bl	vPortExitCritical
 3595              	.LVL304:
3160:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 3596              		.loc 1 3160 0
 3597 003a 2046     		mov	r0, r4
 3598 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3599              	.LVL305:
 3600              	.L351:
 3601              	.LBB180:
 3602              	.LBB181:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3603              		.loc 2 195 0
 3604              		.syntax unified
 3605              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3606 003e 4FF05003 			mov r3, #80												
 3607 0042 83F31188 		msr basepri, r3											
 3608 0046 BFF36F8F 		isb														
 3609 004a BFF34F8F 		dsb														
 3610              	
 3611              	@ 0 "" 2
 3612              	.LVL306:
 3613              		.thumb
 3614              		.syntax unified
 3615              	.L342:
 3616 004e FEE7     		b	.L342
 3617              	.L352:
 3618              	.LBE181:
 3619              	.LBE180:
 3620              	.LBB182:
 3621              	.LBB183:
 3622              		.syntax unified
 3623              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3624 0050 4FF05003 			mov r3, #80												
 3625 0054 83F31188 		msr basepri, r3											
 3626 0058 BFF36F8F 		isb														
 3627 005c BFF34F8F 		dsb														
 3628              	
 3629              	@ 0 "" 2
 3630              	.LVL307:
 3631              		.thumb
 3632              		.syntax unified
 3633              	.L344:
 3634 0060 FEE7     		b	.L344
 3635              	.LVL308:
 3636              	.L353:
 3637              	.LBE183:
ARM GAS  /tmp/ccOm33QJ.s 			page 162


 3638              	.LBE182:
 3639              	.LBB184:
3147:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3640              		.loc 1 3147 0
 3641 0062 9B1A     		subs	r3, r3, r2
 3642 0064 2360     		str	r3, [r4]
3148:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			xReturn = pdFALSE;
 3643              		.loc 1 3148 0
 3644 0066 2846     		mov	r0, r5
 3645              	.LVL309:
 3646 0068 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3647              	.LVL310:
3149:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 3648              		.loc 1 3149 0
 3649 006c 0024     		movs	r4, #0
 3650              	.LVL311:
 3651 006e E2E7     		b	.L345
 3652              	.LVL312:
 3653              	.L348:
3130:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 3654              		.loc 1 3130 0
 3655 0070 0024     		movs	r4, #0
 3656              	.LVL313:
 3657 0072 E0E7     		b	.L345
 3658              	.LVL314:
 3659              	.L349:
3142:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 3660              		.loc 1 3142 0
 3661 0074 0124     		movs	r4, #1
 3662              	.LVL315:
 3663 0076 DEE7     		b	.L345
 3664              	.L355:
 3665              		.align	2
 3666              	.L354:
 3667 0078 00000000 		.word	.LANCHOR15
 3668 007c 00000000 		.word	.LANCHOR17
 3669              	.LBE184:
 3670              		.cfi_endproc
 3671              	.LFE34:
 3673              		.section	.text.vTaskMissedYield,"ax",%progbits
 3674              		.align	1
 3675              		.global	vTaskMissedYield
 3676              		.syntax unified
 3677              		.thumb
 3678              		.thumb_func
 3679              		.fpu fpv4-sp-d16
 3681              	vTaskMissedYield:
 3682              	.LFB35:
3164:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	xYieldPending = pdTRUE;
 3683              		.loc 1 3164 0
 3684              		.cfi_startproc
 3685              		@ args = 0, pretend = 0, frame = 0
 3686              		@ frame_needed = 0, uses_anonymous_args = 0
 3687              		@ link register save eliminated.
3165:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** }
 3688              		.loc 1 3165 0
 3689 0000 0122     		movs	r2, #1
ARM GAS  /tmp/ccOm33QJ.s 			page 163


 3690 0002 014B     		ldr	r3, .L357
 3691 0004 1A60     		str	r2, [r3]
 3692 0006 7047     		bx	lr
 3693              	.L358:
 3694              		.align	2
 3695              	.L357:
 3696 0008 00000000 		.word	.LANCHOR19
 3697              		.cfi_endproc
 3698              	.LFE35:
 3700              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3701              		.align	1
 3702              		.global	xTaskGetCurrentTaskHandle
 3703              		.syntax unified
 3704              		.thumb
 3705              		.thumb_func
 3706              		.fpu fpv4-sp-d16
 3708              	xTaskGetCurrentTaskHandle:
 3709              	.LFB41:
3751:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TaskHandle_t xReturn;
 3710              		.loc 1 3751 0
 3711              		.cfi_startproc
 3712              		@ args = 0, pretend = 0, frame = 0
 3713              		@ frame_needed = 0, uses_anonymous_args = 0
 3714              		@ link register save eliminated.
3757:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3715              		.loc 1 3757 0
 3716 0000 014B     		ldr	r3, .L360
 3717 0002 1868     		ldr	r0, [r3]
 3718              	.LVL316:
3760:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3719              		.loc 1 3760 0
 3720 0004 7047     		bx	lr
 3721              	.L361:
 3722 0006 00BF     		.align	2
 3723              	.L360:
 3724 0008 00000000 		.word	.LANCHOR10
 3725              		.cfi_endproc
 3726              	.LFE41:
 3728              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3729              		.align	1
 3730              		.global	xTaskGetSchedulerState
 3731              		.syntax unified
 3732              		.thumb
 3733              		.thumb_func
 3734              		.fpu fpv4-sp-d16
 3736              	xTaskGetSchedulerState:
 3737              	.LFB42:
3768:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn;
 3738              		.loc 1 3768 0
 3739              		.cfi_startproc
 3740              		@ args = 0, pretend = 0, frame = 0
 3741              		@ frame_needed = 0, uses_anonymous_args = 0
 3742              		@ link register save eliminated.
3771:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 3743              		.loc 1 3771 0
 3744 0000 054B     		ldr	r3, .L366
 3745 0002 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccOm33QJ.s 			page 164


 3746 0004 23B1     		cbz	r3, .L364
3777:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 3747              		.loc 1 3777 0
 3748 0006 054B     		ldr	r3, .L366+4
 3749 0008 1B68     		ldr	r3, [r3]
 3750 000a 1BB9     		cbnz	r3, .L365
3779:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 3751              		.loc 1 3779 0
 3752 000c 0220     		movs	r0, #2
 3753 000e 7047     		bx	lr
 3754              	.L364:
3773:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 3755              		.loc 1 3773 0
 3756 0010 0120     		movs	r0, #1
 3757 0012 7047     		bx	lr
 3758              	.L365:
3783:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 3759              		.loc 1 3783 0
 3760 0014 0020     		movs	r0, #0
 3761              	.LVL317:
3788:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3762              		.loc 1 3788 0
 3763 0016 7047     		bx	lr
 3764              	.L367:
 3765              		.align	2
 3766              	.L366:
 3767 0018 00000000 		.word	.LANCHOR11
 3768 001c 00000000 		.word	.LANCHOR16
 3769              		.cfi_endproc
 3770              	.LFE42:
 3772              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 3773              		.align	1
 3774              		.global	xTaskPriorityInherit
 3775              		.syntax unified
 3776              		.thumb
 3777              		.thumb_func
 3778              		.fpu fpv4-sp-d16
 3780              	xTaskPriorityInherit:
 3781              	.LFB43:
3796:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3782              		.loc 1 3796 0
 3783              		.cfi_startproc
 3784              		@ args = 0, pretend = 0, frame = 0
 3785              		@ frame_needed = 0, uses_anonymous_args = 0
 3786              	.LVL318:
3803:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 3787              		.loc 1 3803 0
 3788 0000 0028     		cmp	r0, #0
 3789 0002 54D0     		beq	.L375
3796:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3790              		.loc 1 3796 0
 3791 0004 38B5     		push	{r3, r4, r5, lr}
 3792              	.LCFI40:
 3793              		.cfi_def_cfa_offset 16
 3794              		.cfi_offset 3, -16
 3795              		.cfi_offset 4, -12
 3796              		.cfi_offset 5, -8
ARM GAS  /tmp/ccOm33QJ.s 			page 165


 3797              		.cfi_offset 14, -4
 3798 0006 0446     		mov	r4, r0
3808:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 3799              		.loc 1 3808 0
 3800 0008 C26A     		ldr	r2, [r0, #44]
 3801 000a 2A49     		ldr	r1, .L385
 3802 000c 0968     		ldr	r1, [r1]
 3803 000e C96A     		ldr	r1, [r1, #44]
 3804 0010 8A42     		cmp	r2, r1
 3805 0012 42D2     		bcs	.L370
3813:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 3806              		.loc 1 3813 0
 3807 0014 8169     		ldr	r1, [r0, #24]
 3808 0016 0029     		cmp	r1, #0
 3809 0018 05DB     		blt	.L371
3815:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 3810              		.loc 1 3815 0
 3811 001a 2649     		ldr	r1, .L385
 3812 001c 0968     		ldr	r1, [r1]
 3813 001e C96A     		ldr	r1, [r1, #44]
 3814 0020 C1F10701 		rsb	r1, r1, #7
 3815 0024 8161     		str	r1, [r0, #24]
 3816              	.L371:
3824:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 3817              		.loc 1 3824 0
 3818 0026 6069     		ldr	r0, [r4, #20]
 3819              	.LVL319:
 3820 0028 02EB8202 		add	r2, r2, r2, lsl #2
 3821 002c 9100     		lsls	r1, r2, #2
 3822 002e 224A     		ldr	r2, .L385+4
 3823 0030 0A44     		add	r2, r2, r1
 3824 0032 9042     		cmp	r0, r2
 3825 0034 07D0     		beq	.L382
 3826 0036 0022     		movs	r2, #0
 3827              	.L372:
3824:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 3828              		.loc 1 3824 0 is_stmt 0 discriminator 4
 3829 0038 3AB9     		cbnz	r2, .L383
3842:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 3830              		.loc 1 3842 0 is_stmt 1
 3831 003a 1E4A     		ldr	r2, .L385
 3832 003c 1268     		ldr	r2, [r2]
 3833 003e D26A     		ldr	r2, [r2, #44]
 3834 0040 E262     		str	r2, [r4, #44]
3848:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 3835              		.loc 1 3848 0
 3836 0042 0120     		movs	r0, #1
 3837 0044 38BD     		pop	{r3, r4, r5, pc}
 3838              	.LVL320:
 3839              	.L382:
3824:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 3840              		.loc 1 3824 0
 3841 0046 0122     		movs	r2, #1
 3842 0048 F6E7     		b	.L372
 3843              	.L383:
3826:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 3844              		.loc 1 3826 0
ARM GAS  /tmp/ccOm33QJ.s 			page 166


 3845 004a 251D     		adds	r5, r4, #4
 3846 004c 2846     		mov	r0, r5
 3847 004e FFF7FEFF 		bl	uxListRemove
 3848              	.LVL321:
 3849 0052 68B9     		cbnz	r0, .L374
3828:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 3850              		.loc 1 3828 0
 3851 0054 E36A     		ldr	r3, [r4, #44]
 3852 0056 03EB8301 		add	r1, r3, r3, lsl #2
 3853 005a 8A00     		lsls	r2, r1, #2
 3854 005c 1649     		ldr	r1, .L385+4
 3855 005e 8A58     		ldr	r2, [r1, r2]
 3856 0060 32B9     		cbnz	r2, .L374
3828:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 3857              		.loc 1 3828 0 is_stmt 0 discriminator 1
 3858 0062 0122     		movs	r2, #1
 3859 0064 9A40     		lsls	r2, r2, r3
 3860 0066 1549     		ldr	r1, .L385+8
 3861 0068 0B68     		ldr	r3, [r1]
 3862 006a 23EA0203 		bic	r3, r3, r2
 3863 006e 0B60     		str	r3, [r1]
 3864              	.L374:
3836:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3865              		.loc 1 3836 0 is_stmt 1
 3866 0070 104B     		ldr	r3, .L385
 3867 0072 1B68     		ldr	r3, [r3]
 3868 0074 DB6A     		ldr	r3, [r3, #44]
 3869 0076 E362     		str	r3, [r4, #44]
3837:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 3870              		.loc 1 3837 0
 3871 0078 0124     		movs	r4, #1
 3872              	.LVL322:
 3873 007a 04FA03F2 		lsl	r2, r4, r3
 3874 007e 0F49     		ldr	r1, .L385+8
 3875 0080 0868     		ldr	r0, [r1]
 3876 0082 0243     		orrs	r2, r2, r0
 3877 0084 0A60     		str	r2, [r1]
 3878 0086 03EB8303 		add	r3, r3, r3, lsl #2
 3879 008a 9A00     		lsls	r2, r3, #2
 3880 008c 2946     		mov	r1, r5
 3881 008e 0A48     		ldr	r0, .L385+4
 3882 0090 1044     		add	r0, r0, r2
 3883 0092 FFF7FEFF 		bl	vListInsertEnd
 3884              	.LVL323:
3848:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 3885              		.loc 1 3848 0
 3886 0096 2046     		mov	r0, r4
 3887 0098 38BD     		pop	{r3, r4, r5, pc}
 3888              	.LVL324:
 3889              	.L370:
3852:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 3890              		.loc 1 3852 0
 3891 009a 426C     		ldr	r2, [r0, #68]
 3892 009c 054B     		ldr	r3, .L385
 3893 009e 1B68     		ldr	r3, [r3]
 3894 00a0 DB6A     		ldr	r3, [r3, #44]
 3895 00a2 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccOm33QJ.s 			page 167


 3896 00a4 01D2     		bcs	.L384
3861:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 3897              		.loc 1 3861 0
 3898 00a6 0120     		movs	r0, #1
 3899              	.LVL325:
3875:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3900              		.loc 1 3875 0
 3901 00a8 38BD     		pop	{r3, r4, r5, pc}
 3902              	.LVL326:
 3903              	.L384:
3798:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 3904              		.loc 1 3798 0
 3905 00aa 0020     		movs	r0, #0
 3906              	.LVL327:
 3907 00ac 38BD     		pop	{r3, r4, r5, pc}
 3908              	.LVL328:
 3909              	.L375:
 3910              	.LCFI41:
 3911              		.cfi_def_cfa_offset 0
 3912              		.cfi_restore 3
 3913              		.cfi_restore 4
 3914              		.cfi_restore 5
 3915              		.cfi_restore 14
 3916 00ae 0020     		movs	r0, #0
 3917              	.LVL329:
 3918 00b0 7047     		bx	lr
 3919              	.L386:
 3920 00b2 00BF     		.align	2
 3921              	.L385:
 3922 00b4 00000000 		.word	.LANCHOR10
 3923 00b8 00000000 		.word	.LANCHOR4
 3924 00bc 00000000 		.word	.LANCHOR13
 3925              		.cfi_endproc
 3926              	.LFE43:
 3928              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 3929              		.align	1
 3930              		.global	xTaskPriorityDisinherit
 3931              		.syntax unified
 3932              		.thumb
 3933              		.thumb_func
 3934              		.fpu fpv4-sp-d16
 3936              	xTaskPriorityDisinherit:
 3937              	.LFB44:
3883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3938              		.loc 1 3883 0
 3939              		.cfi_startproc
 3940              		@ args = 0, pretend = 0, frame = 0
 3941              		@ frame_needed = 0, uses_anonymous_args = 0
 3942              	.LVL330:
3887:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 3943              		.loc 1 3887 0
 3944 0000 0028     		cmp	r0, #0
 3945 0002 4AD0     		beq	.L394
3883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3946              		.loc 1 3883 0
 3947 0004 38B5     		push	{r3, r4, r5, lr}
 3948              	.LCFI42:
ARM GAS  /tmp/ccOm33QJ.s 			page 168


 3949              		.cfi_def_cfa_offset 16
 3950              		.cfi_offset 3, -16
 3951              		.cfi_offset 4, -12
 3952              		.cfi_offset 5, -8
 3953              		.cfi_offset 14, -4
 3954 0006 0446     		mov	r4, r0
3893:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3955              		.loc 1 3893 0
 3956 0008 274A     		ldr	r2, .L401
 3957 000a 1268     		ldr	r2, [r2]
 3958 000c 9042     		cmp	r0, r2
 3959 000e 08D0     		beq	.L389
 3960              	.LBB185:
 3961              	.LBB186:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3962              		.loc 2 195 0
 3963              		.syntax unified
 3964              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3965 0010 4FF05003 			mov r3, #80												
 3966 0014 83F31188 		msr basepri, r3											
 3967 0018 BFF36F8F 		isb														
 3968 001c BFF34F8F 		dsb														
 3969              	
 3970              	@ 0 "" 2
 3971              	.LVL331:
 3972              		.thumb
 3973              		.syntax unified
 3974              	.L390:
 3975 0020 FEE7     		b	.L390
 3976              	.L389:
 3977              	.LBE186:
 3978              	.LBE185:
3894:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3979              		.loc 1 3894 0
 3980 0022 826C     		ldr	r2, [r0, #72]
 3981 0024 42B9     		cbnz	r2, .L391
 3982              	.LBB187:
 3983              	.LBB188:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 3984              		.loc 2 195 0
 3985              		.syntax unified
 3986              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 3987 0026 4FF05003 			mov r3, #80												
 3988 002a 83F31188 		msr basepri, r3											
 3989 002e BFF36F8F 		isb														
 3990 0032 BFF34F8F 		dsb														
 3991              	
 3992              	@ 0 "" 2
 3993              	.LVL332:
 3994              		.thumb
 3995              		.syntax unified
 3996              	.L392:
 3997 0036 FEE7     		b	.L392
 3998              	.L391:
 3999              	.LBE188:
 4000              	.LBE187:
3895:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
ARM GAS  /tmp/ccOm33QJ.s 			page 169


 4001              		.loc 1 3895 0
 4002 0038 013A     		subs	r2, r2, #1
 4003 003a 8264     		str	r2, [r0, #72]
3899:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4004              		.loc 1 3899 0
 4005 003c C06A     		ldr	r0, [r0, #44]
 4006              	.LVL333:
 4007 003e 616C     		ldr	r1, [r4, #68]
 4008 0040 8842     		cmp	r0, r1
 4009 0042 2CD0     		beq	.L395
3902:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 4010              		.loc 1 3902 0
 4011 0044 6ABB     		cbnz	r2, .L396
3909:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 4012              		.loc 1 3909 0
 4013 0046 251D     		adds	r5, r4, #4
 4014 0048 2846     		mov	r0, r5
 4015 004a FFF7FEFF 		bl	uxListRemove
 4016              	.LVL334:
 4017 004e 70B9     		cbnz	r0, .L393
3911:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4018              		.loc 1 3911 0
 4019 0050 E26A     		ldr	r2, [r4, #44]
 4020 0052 02EB8201 		add	r1, r2, r2, lsl #2
 4021 0056 8B00     		lsls	r3, r1, #2
 4022 0058 1449     		ldr	r1, .L401+4
 4023 005a CB58     		ldr	r3, [r1, r3]
 4024 005c 3BB9     		cbnz	r3, .L393
3911:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4025              		.loc 1 3911 0 is_stmt 0 discriminator 1
 4026 005e 0123     		movs	r3, #1
 4027 0060 03FA02F2 		lsl	r2, r3, r2
 4028 0064 1249     		ldr	r1, .L401+8
 4029 0066 0B68     		ldr	r3, [r1]
 4030 0068 23EA0203 		bic	r3, r3, r2
 4031 006c 0B60     		str	r3, [r1]
 4032              	.L393:
3921:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4033              		.loc 1 3921 0 is_stmt 1
 4034 006e 636C     		ldr	r3, [r4, #68]
 4035 0070 E362     		str	r3, [r4, #44]
3926:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4036              		.loc 1 3926 0
 4037 0072 C3F10702 		rsb	r2, r3, #7
 4038 0076 A261     		str	r2, [r4, #24]
3927:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4039              		.loc 1 3927 0
 4040 0078 0124     		movs	r4, #1
 4041              	.LVL335:
 4042 007a 04FA03F2 		lsl	r2, r4, r3
 4043 007e 0C49     		ldr	r1, .L401+8
 4044 0080 0868     		ldr	r0, [r1]
 4045 0082 0243     		orrs	r2, r2, r0
 4046 0084 0A60     		str	r2, [r1]
 4047 0086 03EB8303 		add	r3, r3, r3, lsl #2
 4048 008a 9A00     		lsls	r2, r3, #2
 4049 008c 2946     		mov	r1, r5
ARM GAS  /tmp/ccOm33QJ.s 			page 170


 4050 008e 0748     		ldr	r0, .L401+4
 4051 0090 1044     		add	r0, r0, r2
 4052 0092 FFF7FEFF 		bl	vListInsertEnd
 4053              	.LVL336:
3937:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 4054              		.loc 1 3937 0
 4055 0096 2046     		mov	r0, r4
 4056 0098 38BD     		pop	{r3, r4, r5, pc}
 4057              	.LVL337:
 4058              	.L394:
 4059              	.LCFI43:
 4060              		.cfi_def_cfa_offset 0
 4061              		.cfi_restore 3
 4062              		.cfi_restore 4
 4063              		.cfi_restore 5
 4064              		.cfi_restore 14
3885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4065              		.loc 1 3885 0
 4066 009a 0020     		movs	r0, #0
 4067              	.LVL338:
 4068 009c 7047     		bx	lr
 4069              	.LVL339:
 4070              	.L395:
 4071              	.LCFI44:
 4072              		.cfi_def_cfa_offset 16
 4073              		.cfi_offset 3, -16
 4074              		.cfi_offset 4, -12
 4075              		.cfi_offset 5, -8
 4076              		.cfi_offset 14, -4
 4077 009e 0020     		movs	r0, #0
 4078 00a0 38BD     		pop	{r3, r4, r5, pc}
 4079              	.LVL340:
 4080              	.L396:
 4081 00a2 0020     		movs	r0, #0
3955:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4082              		.loc 1 3955 0
 4083 00a4 38BD     		pop	{r3, r4, r5, pc}
 4084              	.LVL341:
 4085              	.L402:
 4086 00a6 00BF     		.align	2
 4087              	.L401:
 4088 00a8 00000000 		.word	.LANCHOR10
 4089 00ac 00000000 		.word	.LANCHOR4
 4090 00b0 00000000 		.word	.LANCHOR13
 4091              		.cfi_endproc
 4092              	.LFE44:
 4094              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4095              		.align	1
 4096              		.global	vTaskPriorityDisinheritAfterTimeout
 4097              		.syntax unified
 4098              		.thumb
 4099              		.thumb_func
 4100              		.fpu fpv4-sp-d16
 4102              	vTaskPriorityDisinheritAfterTimeout:
 4103              	.LFB45:
3963:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4104              		.loc 1 3963 0
ARM GAS  /tmp/ccOm33QJ.s 			page 171


 4105              		.cfi_startproc
 4106              		@ args = 0, pretend = 0, frame = 0
 4107              		@ frame_needed = 0, uses_anonymous_args = 0
 4108              	.LVL342:
3968:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 4109              		.loc 1 3968 0
 4110 0000 0028     		cmp	r0, #0
 4111 0002 5BD0     		beq	.L415
3963:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4112              		.loc 1 3963 0
 4113 0004 38B5     		push	{r3, r4, r5, lr}
 4114              	.LCFI45:
 4115              		.cfi_def_cfa_offset 16
 4116              		.cfi_offset 3, -16
 4117              		.cfi_offset 4, -12
 4118              		.cfi_offset 5, -8
 4119              		.cfi_offset 14, -4
 4120 0006 0446     		mov	r4, r0
3972:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4121              		.loc 1 3972 0
 4122 0008 806C     		ldr	r0, [r0, #72]
 4123              	.LVL343:
 4124 000a 40B9     		cbnz	r0, .L405
 4125              	.LBB189:
 4126              	.LBB190:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 4127              		.loc 2 195 0
 4128              		.syntax unified
 4129              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 4130 000c 4FF05003 			mov r3, #80												
 4131 0010 83F31188 		msr basepri, r3											
 4132 0014 BFF36F8F 		isb														
 4133 0018 BFF34F8F 		dsb														
 4134              	
 4135              	@ 0 "" 2
 4136              	.LVL344:
 4137              		.thumb
 4138              		.syntax unified
 4139              	.L406:
 4140 001c FEE7     		b	.L406
 4141              	.L405:
 4142              	.LBE190:
 4143              	.LBE189:
3978:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4144              		.loc 1 3978 0
 4145 001e 626C     		ldr	r2, [r4, #68]
 4146 0020 8A42     		cmp	r2, r1
 4147 0022 00D2     		bcs	.L407
3980:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 4148              		.loc 1 3980 0
 4149 0024 0A46     		mov	r2, r1
 4150              	.L407:
 4151              	.LVL345:
3988:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4152              		.loc 1 3988 0
 4153 0026 E16A     		ldr	r1, [r4, #44]
 4154              	.LVL346:
ARM GAS  /tmp/ccOm33QJ.s 			page 172


 4155 0028 8A42     		cmp	r2, r1
 4156 002a 01D0     		beq	.L403
3994:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 4157              		.loc 1 3994 0
 4158 002c 0128     		cmp	r0, #1
 4159 002e 00D0     		beq	.L418
 4160              	.LVL347:
 4161              	.L403:
 4162 0030 38BD     		pop	{r3, r4, r5, pc}
 4163              	.LVL348:
 4164              	.L418:
3999:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4165              		.loc 1 3999 0
 4166 0032 2348     		ldr	r0, .L419
 4167 0034 0068     		ldr	r0, [r0]
 4168 0036 8442     		cmp	r4, r0
 4169 0038 08D1     		bne	.L408
 4170              	.LBB191:
 4171              	.LBB192:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 4172              		.loc 2 195 0
 4173              		.syntax unified
 4174              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 4175 003a 4FF05003 			mov r3, #80												
 4176 003e 83F31188 		msr basepri, r3											
 4177 0042 BFF36F8F 		isb														
 4178 0046 BFF34F8F 		dsb														
 4179              	
 4180              	@ 0 "" 2
 4181              	.LVL349:
 4182              		.thumb
 4183              		.syntax unified
 4184              	.L409:
 4185 004a FEE7     		b	.L409
 4186              	.L408:
 4187              	.LVL350:
 4188              	.LBE192:
 4189              	.LBE191:
4006:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4190              		.loc 1 4006 0
 4191 004c E262     		str	r2, [r4, #44]
4010:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 4192              		.loc 1 4010 0
 4193 004e A069     		ldr	r0, [r4, #24]
 4194 0050 0028     		cmp	r0, #0
 4195 0052 02DB     		blt	.L410
4012:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4196              		.loc 1 4012 0
 4197 0054 C2F10702 		rsb	r2, r2, #7
 4198              	.LVL351:
 4199 0058 A261     		str	r2, [r4, #24]
 4200              	.L410:
4025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 4201              		.loc 1 4025 0
 4202 005a 6369     		ldr	r3, [r4, #20]
 4203 005c 01EB8101 		add	r1, r1, r1, lsl #2
 4204              	.LVL352:
ARM GAS  /tmp/ccOm33QJ.s 			page 173


 4205 0060 8800     		lsls	r0, r1, #2
 4206 0062 184A     		ldr	r2, .L419+4
 4207 0064 0244     		add	r2, r2, r0
 4208 0066 9342     		cmp	r3, r2
 4209 0068 26D1     		bne	.L413
 4210 006a 0122     		movs	r2, #1
 4211              	.L411:
4025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 4212              		.loc 1 4025 0 is_stmt 0 discriminator 4
 4213 006c 002A     		cmp	r2, #0
 4214 006e DFD0     		beq	.L403
4027:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						{
 4215              		.loc 1 4027 0 is_stmt 1
 4216 0070 251D     		adds	r5, r4, #4
 4217 0072 2846     		mov	r0, r5
 4218 0074 FFF7FEFF 		bl	uxListRemove
 4219              	.LVL353:
 4220 0078 70B9     		cbnz	r0, .L412
4029:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
 4221              		.loc 1 4029 0
 4222 007a E26A     		ldr	r2, [r4, #44]
 4223 007c 02EB8201 		add	r1, r2, r2, lsl #2
 4224 0080 8B00     		lsls	r3, r1, #2
 4225 0082 1049     		ldr	r1, .L419+4
 4226 0084 CB58     		ldr	r3, [r1, r3]
 4227 0086 3BB9     		cbnz	r3, .L412
4029:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 						}
 4228              		.loc 1 4029 0 is_stmt 0 discriminator 1
 4229 0088 0123     		movs	r3, #1
 4230 008a 03FA02F2 		lsl	r2, r3, r2
 4231 008e 0E49     		ldr	r1, .L419+8
 4232 0090 0B68     		ldr	r3, [r1]
 4233 0092 23EA0203 		bic	r3, r3, r2
 4234 0096 0B60     		str	r3, [r1]
 4235              	.L412:
4036:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4236              		.loc 1 4036 0 is_stmt 1
 4237 0098 E36A     		ldr	r3, [r4, #44]
 4238 009a 0122     		movs	r2, #1
 4239 009c 9A40     		lsls	r2, r2, r3
 4240 009e 0A49     		ldr	r1, .L419+8
 4241 00a0 0868     		ldr	r0, [r1]
 4242 00a2 0243     		orrs	r2, r2, r0
 4243 00a4 0A60     		str	r2, [r1]
 4244 00a6 03EB8303 		add	r3, r3, r3, lsl #2
 4245 00aa 9A00     		lsls	r2, r3, #2
 4246 00ac 2946     		mov	r1, r5
 4247 00ae 0548     		ldr	r0, .L419+4
 4248 00b0 1044     		add	r0, r0, r2
 4249 00b2 FFF7FEFF 		bl	vListInsertEnd
 4250              	.LVL354:
4057:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4251              		.loc 1 4057 0
 4252 00b6 BBE7     		b	.L403
 4253              	.LVL355:
 4254              	.L413:
4025:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
ARM GAS  /tmp/ccOm33QJ.s 			page 174


 4255              		.loc 1 4025 0
 4256 00b8 0022     		movs	r2, #0
 4257 00ba D7E7     		b	.L411
 4258              	.LVL356:
 4259              	.L415:
 4260              	.LCFI46:
 4261              		.cfi_def_cfa_offset 0
 4262              		.cfi_restore 3
 4263              		.cfi_restore 4
 4264              		.cfi_restore 5
 4265              		.cfi_restore 14
 4266 00bc 7047     		bx	lr
 4267              	.L420:
 4268 00be 00BF     		.align	2
 4269              	.L419:
 4270 00c0 00000000 		.word	.LANCHOR10
 4271 00c4 00000000 		.word	.LANCHOR4
 4272 00c8 00000000 		.word	.LANCHOR13
 4273              		.cfi_endproc
 4274              	.LFE45:
 4276              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4277              		.align	1
 4278              		.global	uxTaskResetEventItemValue
 4279              		.syntax unified
 4280              		.thumb
 4281              		.thumb_func
 4282              		.fpu fpv4-sp-d16
 4284              	uxTaskResetEventItemValue:
 4285              	.LFB46:
4377:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** TickType_t uxReturn;
 4286              		.loc 1 4377 0
 4287              		.cfi_startproc
 4288              		@ args = 0, pretend = 0, frame = 0
 4289              		@ frame_needed = 0, uses_anonymous_args = 0
 4290              		@ link register save eliminated.
4380:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4291              		.loc 1 4380 0
 4292 0000 044B     		ldr	r3, .L422
 4293 0002 1A68     		ldr	r2, [r3]
 4294 0004 9069     		ldr	r0, [r2, #24]
 4295              	.LVL357:
4384:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4296              		.loc 1 4384 0
 4297 0006 1A68     		ldr	r2, [r3]
 4298 0008 1B68     		ldr	r3, [r3]
 4299 000a DB6A     		ldr	r3, [r3, #44]
 4300 000c C3F10703 		rsb	r3, r3, #7
 4301 0010 9361     		str	r3, [r2, #24]
4387:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** /*-----------------------------------------------------------*/
 4302              		.loc 1 4387 0
 4303 0012 7047     		bx	lr
 4304              	.L423:
 4305              		.align	2
 4306              	.L422:
 4307 0014 00000000 		.word	.LANCHOR10
 4308              		.cfi_endproc
 4309              	.LFE46:
ARM GAS  /tmp/ccOm33QJ.s 			page 175


 4311              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4312              		.align	1
 4313              		.global	pvTaskIncrementMutexHeldCount
 4314              		.syntax unified
 4315              		.thumb
 4316              		.thumb_func
 4317              		.fpu fpv4-sp-d16
 4319              	pvTaskIncrementMutexHeldCount:
 4320              	.LFB47:
4393:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4321              		.loc 1 4393 0
 4322              		.cfi_startproc
 4323              		@ args = 0, pretend = 0, frame = 0
 4324              		@ frame_needed = 0, uses_anonymous_args = 0
 4325              		@ link register save eliminated.
4396:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 4326              		.loc 1 4396 0
 4327 0000 054B     		ldr	r3, .L426
 4328 0002 1B68     		ldr	r3, [r3]
 4329 0004 23B1     		cbz	r3, .L425
4398:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 4330              		.loc 1 4398 0
 4331 0006 044B     		ldr	r3, .L426
 4332 0008 1A68     		ldr	r2, [r3]
 4333 000a 936C     		ldr	r3, [r2, #72]
 4334 000c 0133     		adds	r3, r3, #1
 4335 000e 9364     		str	r3, [r2, #72]
 4336              	.L425:
4401:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	}
 4337              		.loc 1 4401 0
 4338 0010 014B     		ldr	r3, .L426
 4339 0012 1868     		ldr	r0, [r3]
4402:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4340              		.loc 1 4402 0
 4341 0014 7047     		bx	lr
 4342              	.L427:
 4343 0016 00BF     		.align	2
 4344              	.L426:
 4345 0018 00000000 		.word	.LANCHOR10
 4346              		.cfi_endproc
 4347              	.LFE47:
 4349              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4350              		.align	1
 4351              		.global	ulTaskNotifyTake
 4352              		.syntax unified
 4353              		.thumb
 4354              		.thumb_func
 4355              		.fpu fpv4-sp-d16
 4357              	ulTaskNotifyTake:
 4358              	.LFB48:
4410:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint32_t ulReturn;
 4359              		.loc 1 4410 0
 4360              		.cfi_startproc
 4361              		@ args = 0, pretend = 0, frame = 0
 4362              		@ frame_needed = 0, uses_anonymous_args = 0
 4363              	.LVL358:
 4364 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccOm33QJ.s 			page 176


 4365              	.LCFI47:
 4366              		.cfi_def_cfa_offset 16
 4367              		.cfi_offset 3, -16
 4368              		.cfi_offset 4, -12
 4369              		.cfi_offset 5, -8
 4370              		.cfi_offset 14, -4
 4371 0002 0546     		mov	r5, r0
 4372 0004 0C46     		mov	r4, r1
4413:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 4373              		.loc 1 4413 0
 4374 0006 FFF7FEFF 		bl	vPortEnterCritical
 4375              	.LVL359:
4416:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4376              		.loc 1 4416 0
 4377 000a 194B     		ldr	r3, .L435
 4378 000c 1B68     		ldr	r3, [r3]
 4379 000e DB6C     		ldr	r3, [r3, #76]
 4380 0010 2BB9     		cbnz	r3, .L429
4419:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4381              		.loc 1 4419 0
 4382 0012 174B     		ldr	r3, .L435
 4383 0014 1B68     		ldr	r3, [r3]
 4384 0016 0122     		movs	r2, #1
 4385 0018 83F85020 		strb	r2, [r3, #80]
4421:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 4386              		.loc 1 4421 0
 4387 001c ACB9     		cbnz	r4, .L433
 4388              	.L429:
4442:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4389              		.loc 1 4442 0
 4390 001e FFF7FEFF 		bl	vPortExitCritical
 4391              	.LVL360:
4444:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 4392              		.loc 1 4444 0
 4393 0022 FFF7FEFF 		bl	vPortEnterCritical
 4394              	.LVL361:
4447:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4395              		.loc 1 4447 0
 4396 0026 124B     		ldr	r3, .L435
 4397 0028 1B68     		ldr	r3, [r3]
 4398 002a DC6C     		ldr	r4, [r3, #76]
 4399              	.LVL362:
4449:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4400              		.loc 1 4449 0
 4401 002c 24B1     		cbz	r4, .L430
4451:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 4402              		.loc 1 4451 0
 4403 002e CDB9     		cbnz	r5, .L434
4457:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 4404              		.loc 1 4457 0
 4405 0030 0F4B     		ldr	r3, .L435
 4406 0032 1B68     		ldr	r3, [r3]
 4407 0034 621E     		subs	r2, r4, #1
 4408 0036 DA64     		str	r2, [r3, #76]
 4409              	.L430:
4465:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 4410              		.loc 1 4465 0
ARM GAS  /tmp/ccOm33QJ.s 			page 177


 4411 0038 0D4B     		ldr	r3, .L435
 4412 003a 1B68     		ldr	r3, [r3]
 4413 003c 0022     		movs	r2, #0
 4414 003e 83F85020 		strb	r2, [r3, #80]
4467:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4415              		.loc 1 4467 0
 4416 0042 FFF7FEFF 		bl	vPortExitCritical
 4417              	.LVL363:
4470:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4418              		.loc 1 4470 0
 4419 0046 2046     		mov	r0, r4
 4420 0048 38BD     		pop	{r3, r4, r5, pc}
 4421              	.LVL364:
 4422              	.L433:
4423:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4423              		.loc 1 4423 0
 4424 004a 1146     		mov	r1, r2
 4425 004c 2046     		mov	r0, r4
 4426 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4427              	.LVL365:
4430:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 4428              		.loc 1 4430 0
 4429 0052 4FF08052 		mov	r2, #268435456
 4430 0056 074B     		ldr	r3, .L435+4
 4431 0058 1A60     		str	r2, [r3]
 4432              		.syntax unified
 4433              	@ 4430 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 4434 005a BFF34F8F 		dsb
 4435              	@ 0 "" 2
 4436              	@ 4430 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 4437 005e BFF36F8F 		isb
 4438              	@ 0 "" 2
 4439              		.thumb
 4440              		.syntax unified
 4441 0062 DCE7     		b	.L429
 4442              	.LVL366:
 4443              	.L434:
4453:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 4444              		.loc 1 4453 0
 4445 0064 024B     		ldr	r3, .L435
 4446 0066 1B68     		ldr	r3, [r3]
 4447 0068 0022     		movs	r2, #0
 4448 006a DA64     		str	r2, [r3, #76]
 4449 006c E4E7     		b	.L430
 4450              	.L436:
 4451 006e 00BF     		.align	2
 4452              	.L435:
 4453 0070 00000000 		.word	.LANCHOR10
 4454 0074 04ED00E0 		.word	-536810236
 4455              		.cfi_endproc
 4456              	.LFE48:
 4458              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4459              		.align	1
 4460              		.global	xTaskNotifyWait
 4461              		.syntax unified
 4462              		.thumb
 4463              		.thumb_func
ARM GAS  /tmp/ccOm33QJ.s 			page 178


 4464              		.fpu fpv4-sp-d16
 4466              	xTaskNotifyWait:
 4467              	.LFB49:
4478:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	BaseType_t xReturn;
 4468              		.loc 1 4478 0
 4469              		.cfi_startproc
 4470              		@ args = 0, pretend = 0, frame = 0
 4471              		@ frame_needed = 0, uses_anonymous_args = 0
 4472              	.LVL367:
 4473 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4474              	.LCFI48:
 4475              		.cfi_def_cfa_offset 24
 4476              		.cfi_offset 3, -24
 4477              		.cfi_offset 4, -20
 4478              		.cfi_offset 5, -16
 4479              		.cfi_offset 6, -12
 4480              		.cfi_offset 7, -8
 4481              		.cfi_offset 14, -4
 4482 0002 0746     		mov	r7, r0
 4483 0004 0D46     		mov	r5, r1
 4484 0006 1446     		mov	r4, r2
 4485 0008 1E46     		mov	r6, r3
4481:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 4486              		.loc 1 4481 0
 4487 000a FFF7FEFF 		bl	vPortEnterCritical
 4488              	.LVL368:
4484:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4489              		.loc 1 4484 0
 4490 000e 204B     		ldr	r3, .L445
 4491 0010 1B68     		ldr	r3, [r3]
 4492 0012 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4493 0016 DBB2     		uxtb	r3, r3
 4494 0018 022B     		cmp	r3, #2
 4495 001a 0AD0     		beq	.L438
4489:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4496              		.loc 1 4489 0
 4497 001c 1C4B     		ldr	r3, .L445
 4498 001e 1A68     		ldr	r2, [r3]
 4499 0020 D06C     		ldr	r0, [r2, #76]
 4500 0022 20EA0700 		bic	r0, r0, r7
 4501 0026 D064     		str	r0, [r2, #76]
4492:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4502              		.loc 1 4492 0
 4503 0028 1B68     		ldr	r3, [r3]
 4504 002a 0122     		movs	r2, #1
 4505 002c 83F85020 		strb	r2, [r3, #80]
4494:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 4506              		.loc 1 4494 0
 4507 0030 CEB9     		cbnz	r6, .L443
 4508              	.L438:
4515:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4509              		.loc 1 4515 0
 4510 0032 FFF7FEFF 		bl	vPortExitCritical
 4511              	.LVL369:
4517:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 4512              		.loc 1 4517 0
 4513 0036 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  /tmp/ccOm33QJ.s 			page 179


 4514              	.LVL370:
4521:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4515              		.loc 1 4521 0
 4516 003a 1CB1     		cbz	r4, .L439
4525:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 4517              		.loc 1 4525 0
 4518 003c 144B     		ldr	r3, .L445
 4519 003e 1B68     		ldr	r3, [r3]
 4520 0040 DB6C     		ldr	r3, [r3, #76]
 4521 0042 2360     		str	r3, [r4]
 4522              	.L439:
4532:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4523              		.loc 1 4532 0
 4524 0044 124B     		ldr	r3, .L445
 4525 0046 1B68     		ldr	r3, [r3]
 4526 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4527 004c DBB2     		uxtb	r3, r3
 4528 004e 022B     		cmp	r3, #2
 4529 0050 16D0     		beq	.L444
4535:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 4530              		.loc 1 4535 0
 4531 0052 0024     		movs	r4, #0
 4532              	.LVL371:
 4533              	.L440:
4545:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		}
 4534              		.loc 1 4545 0
 4535 0054 0E4B     		ldr	r3, .L445
 4536 0056 1B68     		ldr	r3, [r3]
 4537 0058 0022     		movs	r2, #0
 4538 005a 83F85020 		strb	r2, [r3, #80]
4547:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4539              		.loc 1 4547 0
 4540 005e FFF7FEFF 		bl	vPortExitCritical
 4541              	.LVL372:
4550:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4542              		.loc 1 4550 0
 4543 0062 2046     		mov	r0, r4
 4544 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4545              	.LVL373:
 4546              	.L443:
4496:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4547              		.loc 1 4496 0
 4548 0066 1146     		mov	r1, r2
 4549 0068 3046     		mov	r0, r6
 4550 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4551              	.LVL374:
4503:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 4552              		.loc 1 4503 0
 4553 006e 4FF08052 		mov	r2, #268435456
 4554 0072 084B     		ldr	r3, .L445+4
 4555 0074 1A60     		str	r2, [r3]
 4556              		.syntax unified
 4557              	@ 4503 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 4558 0076 BFF34F8F 		dsb
 4559              	@ 0 "" 2
 4560              	@ 4503 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 4561 007a BFF36F8F 		isb
ARM GAS  /tmp/ccOm33QJ.s 			page 180


 4562              	@ 0 "" 2
 4563              		.thumb
 4564              		.syntax unified
 4565 007e D8E7     		b	.L438
 4566              	.L444:
4541:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdTRUE;
 4567              		.loc 1 4541 0
 4568 0080 034B     		ldr	r3, .L445
 4569 0082 1A68     		ldr	r2, [r3]
 4570 0084 D36C     		ldr	r3, [r2, #76]
 4571 0086 23EA0505 		bic	r5, r3, r5
 4572              	.LVL375:
 4573 008a D564     		str	r5, [r2, #76]
 4574              	.LVL376:
4542:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 4575              		.loc 1 4542 0
 4576 008c 0124     		movs	r4, #1
 4577              	.LVL377:
 4578 008e E1E7     		b	.L440
 4579              	.L446:
 4580              		.align	2
 4581              	.L445:
 4582 0090 00000000 		.word	.LANCHOR10
 4583 0094 04ED00E0 		.word	-536810236
 4584              		.cfi_endproc
 4585              	.LFE49:
 4587              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4588              		.align	1
 4589              		.global	xTaskGenericNotify
 4590              		.syntax unified
 4591              		.thumb
 4592              		.thumb_func
 4593              		.fpu fpv4-sp-d16
 4595              	xTaskGenericNotify:
 4596              	.LFB50:
4558:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * pxTCB;
 4597              		.loc 1 4558 0
 4598              		.cfi_startproc
 4599              		@ args = 0, pretend = 0, frame = 0
 4600              		@ frame_needed = 0, uses_anonymous_args = 0
 4601              	.LVL378:
 4602 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4603              	.LCFI49:
 4604              		.cfi_def_cfa_offset 24
 4605              		.cfi_offset 3, -24
 4606              		.cfi_offset 4, -20
 4607              		.cfi_offset 5, -16
 4608              		.cfi_offset 6, -12
 4609              		.cfi_offset 7, -8
 4610              		.cfi_offset 14, -4
 4611              	.LVL379:
4563:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4612              		.loc 1 4563 0
 4613 0002 A8B1     		cbz	r0, .L463
 4614 0004 0446     		mov	r4, r0
 4615 0006 1F46     		mov	r7, r3
 4616 0008 1546     		mov	r5, r2
ARM GAS  /tmp/ccOm33QJ.s 			page 181


 4617 000a 0E46     		mov	r6, r1
 4618              	.LVL380:
4566:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 4619              		.loc 1 4566 0
 4620 000c FFF7FEFF 		bl	vPortEnterCritical
 4621              	.LVL381:
4568:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4622              		.loc 1 4568 0
 4623 0010 0FB1     		cbz	r7, .L450
4570:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 4624              		.loc 1 4570 0
 4625 0012 E36C     		ldr	r3, [r4, #76]
 4626 0014 3B60     		str	r3, [r7]
 4627              	.L450:
4573:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4628              		.loc 1 4573 0
 4629 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 4630 001a DBB2     		uxtb	r3, r3
 4631              	.LVL382:
4575:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4632              		.loc 1 4575 0
 4633 001c 0222     		movs	r2, #2
 4634 001e 84F85020 		strb	r2, [r4, #80]
4577:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4635              		.loc 1 4577 0
 4636 0022 6A1E     		subs	r2, r5, #1
 4637 0024 032A     		cmp	r2, #3
 4638 0026 3DD8     		bhi	.L460
 4639 0028 DFE802F0 		tbb	[pc, r2]
 4640              	.L453:
 4641 002c 0B       		.byte	(.L452-.L453)/2
 4642 002d 2F       		.byte	(.L454-.L453)/2
 4643 002e 34       		.byte	(.L455-.L453)/2
 4644 002f 37       		.byte	(.L456-.L453)/2
 4645              	.LVL383:
 4646              		.p2align 1
 4647              	.L463:
 4648              	.LBB193:
 4649              	.LBB194:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 4650              		.loc 2 195 0
 4651              		.syntax unified
 4652              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 4653 0030 4FF05003 			mov r3, #80												
 4654 0034 83F31188 		msr basepri, r3											
 4655 0038 BFF36F8F 		isb														
 4656 003c BFF34F8F 		dsb														
 4657              	
 4658              	@ 0 "" 2
 4659              	.LVL384:
 4660              		.thumb
 4661              		.syntax unified
 4662              	.L449:
 4663 0040 FEE7     		b	.L449
 4664              	.LVL385:
 4665              	.L452:
 4666              	.LBE194:
ARM GAS  /tmp/ccOm33QJ.s 			page 182


 4667              	.LBE193:
4580:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
 4668              		.loc 1 4580 0
 4669 0042 E26C     		ldr	r2, [r4, #76]
 4670 0044 1643     		orrs	r6, r6, r2
 4671              	.LVL386:
 4672 0046 E664     		str	r6, [r4, #76]
4560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4673              		.loc 1 4560 0
 4674 0048 0125     		movs	r5, #1
 4675              	.L451:
 4676              	.LVL387:
4613:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4677              		.loc 1 4613 0
 4678 004a 012B     		cmp	r3, #1
 4679 004c 3CD1     		bne	.L457
4615:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4680              		.loc 1 4615 0
 4681 004e 261D     		adds	r6, r4, #4
 4682 0050 3046     		mov	r0, r6
 4683 0052 FFF7FEFF 		bl	uxListRemove
 4684              	.LVL388:
4616:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4685              		.loc 1 4616 0
 4686 0056 E36A     		ldr	r3, [r4, #44]
 4687 0058 0122     		movs	r2, #1
 4688 005a 9A40     		lsls	r2, r2, r3
 4689 005c 1C49     		ldr	r1, .L464
 4690 005e 0868     		ldr	r0, [r1]
 4691 0060 0243     		orrs	r2, r2, r0
 4692 0062 0A60     		str	r2, [r1]
 4693 0064 03EB8303 		add	r3, r3, r3, lsl #2
 4694 0068 9A00     		lsls	r2, r3, #2
 4695 006a 3146     		mov	r1, r6
 4696 006c 1948     		ldr	r0, .L464+4
 4697 006e 1044     		add	r0, r0, r2
 4698 0070 FFF7FEFF 		bl	vListInsertEnd
 4699              	.LVL389:
4619:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4700              		.loc 1 4619 0
 4701 0074 A36A     		ldr	r3, [r4, #40]
 4702 0076 CBB1     		cbz	r3, .L458
 4703              	.LBB195:
 4704              	.LBB196:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 4705              		.loc 2 195 0
 4706              		.syntax unified
 4707              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 4708 0078 4FF05003 			mov r3, #80												
 4709 007c 83F31188 		msr basepri, r3											
 4710 0080 BFF36F8F 		isb														
 4711 0084 BFF34F8F 		dsb														
 4712              	
 4713              	@ 0 "" 2
 4714              	.LVL390:
 4715              		.thumb
 4716              		.syntax unified
ARM GAS  /tmp/ccOm33QJ.s 			page 183


 4717              	.L459:
 4718 0088 FEE7     		b	.L459
 4719              	.LVL391:
 4720              	.L454:
 4721              	.LBE196:
 4722              	.LBE195:
4584:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
 4723              		.loc 1 4584 0
 4724 008a E26C     		ldr	r2, [r4, #76]
 4725 008c 0132     		adds	r2, r2, #1
 4726 008e E264     		str	r2, [r4, #76]
4560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4727              		.loc 1 4560 0
 4728 0090 0125     		movs	r5, #1
4585:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4729              		.loc 1 4585 0
 4730 0092 DAE7     		b	.L451
 4731              	.L455:
4588:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
 4732              		.loc 1 4588 0
 4733 0094 E664     		str	r6, [r4, #76]
4560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4734              		.loc 1 4560 0
 4735 0096 0125     		movs	r5, #1
4589:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4736              		.loc 1 4589 0
 4737 0098 D7E7     		b	.L451
 4738              	.L456:
4592:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 4739              		.loc 1 4592 0
 4740 009a 022B     		cmp	r3, #2
 4741 009c 04D0     		beq	.L461
4594:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4742              		.loc 1 4594 0
 4743 009e E664     		str	r6, [r4, #76]
4560:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4744              		.loc 1 4560 0
 4745 00a0 0125     		movs	r5, #1
 4746 00a2 D2E7     		b	.L451
 4747              	.L460:
 4748 00a4 0125     		movs	r5, #1
 4749 00a6 D0E7     		b	.L451
 4750              	.L461:
4599:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4751              		.loc 1 4599 0
 4752 00a8 0025     		movs	r5, #0
 4753 00aa CEE7     		b	.L451
 4754              	.LVL392:
 4755              	.L458:
4637:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 4756              		.loc 1 4637 0
 4757 00ac E26A     		ldr	r2, [r4, #44]
 4758 00ae 0A4B     		ldr	r3, .L464+8
 4759 00b0 1B68     		ldr	r3, [r3]
 4760 00b2 DB6A     		ldr	r3, [r3, #44]
 4761 00b4 9A42     		cmp	r2, r3
 4762 00b6 07D9     		bls	.L457
ARM GAS  /tmp/ccOm33QJ.s 			page 184


4641:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 4763              		.loc 1 4641 0
 4764 00b8 4FF08052 		mov	r2, #268435456
 4765 00bc 074B     		ldr	r3, .L464+12
 4766 00be 1A60     		str	r2, [r3]
 4767              		.syntax unified
 4768              	@ 4641 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 4769 00c0 BFF34F8F 		dsb
 4770              	@ 0 "" 2
 4771              	@ 4641 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c" 1
 4772 00c4 BFF36F8F 		isb
 4773              	@ 0 "" 2
 4774              		.thumb
 4775              		.syntax unified
 4776              	.L457:
4653:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4777              		.loc 1 4653 0
 4778 00c8 FFF7FEFF 		bl	vPortExitCritical
 4779              	.LVL393:
4656:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4780              		.loc 1 4656 0
 4781 00cc 2846     		mov	r0, r5
 4782 00ce F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4783              	.LVL394:
 4784              	.L465:
 4785              		.align	2
 4786              	.L464:
 4787 00d0 00000000 		.word	.LANCHOR13
 4788 00d4 00000000 		.word	.LANCHOR4
 4789 00d8 00000000 		.word	.LANCHOR10
 4790 00dc 04ED00E0 		.word	-536810236
 4791              		.cfi_endproc
 4792              	.LFE50:
 4794              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4795              		.align	1
 4796              		.global	xTaskGenericNotifyFromISR
 4797              		.syntax unified
 4798              		.thumb
 4799              		.thumb_func
 4800              		.fpu fpv4-sp-d16
 4802              	xTaskGenericNotifyFromISR:
 4803              	.LFB51:
4664:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * pxTCB;
 4804              		.loc 1 4664 0
 4805              		.cfi_startproc
 4806              		@ args = 4, pretend = 0, frame = 0
 4807              		@ frame_needed = 0, uses_anonymous_args = 0
 4808              	.LVL395:
 4809 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4810              	.LCFI50:
 4811              		.cfi_def_cfa_offset 32
 4812              		.cfi_offset 3, -32
 4813              		.cfi_offset 4, -28
 4814              		.cfi_offset 5, -24
 4815              		.cfi_offset 6, -20
 4816              		.cfi_offset 7, -16
 4817              		.cfi_offset 8, -12
ARM GAS  /tmp/ccOm33QJ.s 			page 185


 4818              		.cfi_offset 9, -8
 4819              		.cfi_offset 14, -4
 4820 0004 089E     		ldr	r6, [sp, #32]
 4821              	.LVL396:
4670:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4822              		.loc 1 4670 0
 4823 0006 10B3     		cbz	r0, .L485
 4824 0008 0446     		mov	r4, r0
 4825 000a 9946     		mov	r9, r3
 4826 000c 1546     		mov	r5, r2
 4827 000e 0F46     		mov	r7, r1
4688:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4828              		.loc 1 4688 0
 4829 0010 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4830              	.LVL397:
 4831              	.LBB197:
 4832              	.LBB198:
 211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 4833              		.loc 2 211 0
 4834              		.syntax unified
 4835              	@ 211 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 4836 0014 EFF31188 			mrs r8, basepri											
 4837 0018 4FF05003 		mov r3, #80												
 4838 001c 83F31188 		msr basepri, r3											
 4839 0020 BFF36F8F 		isb														
 4840 0024 BFF34F8F 		dsb														
 4841              	
 4842              	@ 0 "" 2
 4843              		.thumb
 4844              		.syntax unified
 4845              	.LBE198:
 4846              	.LBE197:
4694:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4847              		.loc 1 4694 0
 4848 0028 B9F1000F 		cmp	r9, #0
 4849 002c 02D0     		beq	.L469
4696:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 4850              		.loc 1 4696 0
 4851 002e E36C     		ldr	r3, [r4, #76]
 4852 0030 C9F80030 		str	r3, [r9]
 4853              	.L469:
4699:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4854              		.loc 1 4699 0
 4855 0034 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 4856 0038 DBB2     		uxtb	r3, r3
 4857              	.LVL398:
4700:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4858              		.loc 1 4700 0
 4859 003a 0222     		movs	r2, #2
 4860 003c 84F85020 		strb	r2, [r4, #80]
4702:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4861              		.loc 1 4702 0
 4862 0040 6A1E     		subs	r2, r5, #1
 4863 0042 032A     		cmp	r2, #3
 4864 0044 2AD8     		bhi	.L482
 4865 0046 DFE802F0 		tbb	[pc, r2]
 4866              	.L472:
ARM GAS  /tmp/ccOm33QJ.s 			page 186


 4867 004a 0B       		.byte	(.L471-.L472)/2
 4868 004b 1C       		.byte	(.L473-.L472)/2
 4869 004c 21       		.byte	(.L474-.L472)/2
 4870 004d 24       		.byte	(.L475-.L472)/2
 4871              	.LVL399:
 4872              		.p2align 1
 4873              	.L485:
 4874              	.LBB199:
 4875              	.LBB200:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 4876              		.loc 2 195 0
 4877              		.syntax unified
 4878              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 4879 004e 4FF05003 			mov r3, #80												
 4880 0052 83F31188 		msr basepri, r3											
 4881 0056 BFF36F8F 		isb														
 4882 005a BFF34F8F 		dsb														
 4883              	
 4884              	@ 0 "" 2
 4885              	.LVL400:
 4886              		.thumb
 4887              		.syntax unified
 4888              	.L468:
 4889 005e FEE7     		b	.L468
 4890              	.LVL401:
 4891              	.L471:
 4892              	.LBE200:
 4893              	.LBE199:
4705:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
 4894              		.loc 1 4705 0
 4895 0060 E26C     		ldr	r2, [r4, #76]
 4896 0062 1743     		orrs	r7, r7, r2
 4897              	.LVL402:
 4898 0064 E764     		str	r7, [r4, #76]
4667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4899              		.loc 1 4667 0
 4900 0066 0125     		movs	r5, #1
 4901              	.L470:
 4902              	.LVL403:
4738:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 4903              		.loc 1 4738 0
 4904 0068 012B     		cmp	r3, #1
 4905 006a 3AD1     		bne	.L476
4741:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4906              		.loc 1 4741 0
 4907 006c A36A     		ldr	r3, [r4, #40]
 4908              	.LVL404:
 4909 006e CBB1     		cbz	r3, .L477
 4910              	.LBB201:
 4911              	.LBB202:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 4912              		.loc 2 195 0
 4913              		.syntax unified
 4914              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 4915 0070 4FF05003 			mov r3, #80												
 4916 0074 83F31188 		msr basepri, r3											
 4917 0078 BFF36F8F 		isb														
ARM GAS  /tmp/ccOm33QJ.s 			page 187


 4918 007c BFF34F8F 		dsb														
 4919              	
 4920              	@ 0 "" 2
 4921              	.LVL405:
 4922              		.thumb
 4923              		.syntax unified
 4924              	.L478:
 4925 0080 FEE7     		b	.L478
 4926              	.LVL406:
 4927              	.L473:
 4928              	.LBE202:
 4929              	.LBE201:
4709:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
 4930              		.loc 1 4709 0
 4931 0082 E26C     		ldr	r2, [r4, #76]
 4932 0084 0132     		adds	r2, r2, #1
 4933 0086 E264     		str	r2, [r4, #76]
4667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4934              		.loc 1 4667 0
 4935 0088 0125     		movs	r5, #1
4710:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4936              		.loc 1 4710 0
 4937 008a EDE7     		b	.L470
 4938              	.L474:
4713:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					break;
 4939              		.loc 1 4713 0
 4940 008c E764     		str	r7, [r4, #76]
4667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4941              		.loc 1 4667 0
 4942 008e 0125     		movs	r5, #1
4714:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 4943              		.loc 1 4714 0
 4944 0090 EAE7     		b	.L470
 4945              	.L475:
4717:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 4946              		.loc 1 4717 0
 4947 0092 022B     		cmp	r3, #2
 4948 0094 04D0     		beq	.L483
4719:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4949              		.loc 1 4719 0
 4950 0096 E764     		str	r7, [r4, #76]
4667:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4951              		.loc 1 4667 0
 4952 0098 0125     		movs	r5, #1
 4953 009a E5E7     		b	.L470
 4954              	.L482:
 4955 009c 0125     		movs	r5, #1
 4956 009e E3E7     		b	.L470
 4957              	.L483:
4724:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4958              		.loc 1 4724 0
 4959 00a0 0025     		movs	r5, #0
 4960 00a2 E1E7     		b	.L470
 4961              	.LVL407:
 4962              	.L477:
4743:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 4963              		.loc 1 4743 0
ARM GAS  /tmp/ccOm33QJ.s 			page 188


 4964 00a4 164B     		ldr	r3, .L486
 4965 00a6 1B68     		ldr	r3, [r3]
 4966 00a8 03BB     		cbnz	r3, .L479
4745:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4967              		.loc 1 4745 0
 4968 00aa 271D     		adds	r7, r4, #4
 4969 00ac 3846     		mov	r0, r7
 4970 00ae FFF7FEFF 		bl	uxListRemove
 4971              	.LVL408:
4746:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 4972              		.loc 1 4746 0
 4973 00b2 E36A     		ldr	r3, [r4, #44]
 4974 00b4 0122     		movs	r2, #1
 4975 00b6 9A40     		lsls	r2, r2, r3
 4976 00b8 1249     		ldr	r1, .L486+4
 4977 00ba 0868     		ldr	r0, [r1]
 4978 00bc 0243     		orrs	r2, r2, r0
 4979 00be 0A60     		str	r2, [r1]
 4980 00c0 03EB8303 		add	r3, r3, r3, lsl #2
 4981 00c4 9A00     		lsls	r2, r3, #2
 4982 00c6 3946     		mov	r1, r7
 4983 00c8 0F48     		ldr	r0, .L486+8
 4984 00ca 1044     		add	r0, r0, r2
 4985 00cc FFF7FEFF 		bl	vListInsertEnd
 4986              	.LVL409:
 4987              	.L480:
4755:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 4988              		.loc 1 4755 0
 4989 00d0 E26A     		ldr	r2, [r4, #44]
 4990 00d2 0E4B     		ldr	r3, .L486+12
 4991 00d4 1B68     		ldr	r3, [r3]
 4992 00d6 DB6A     		ldr	r3, [r3, #44]
 4993 00d8 9A42     		cmp	r2, r3
 4994 00da 02D9     		bls	.L476
4759:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 4995              		.loc 1 4759 0
 4996 00dc 66B1     		cbz	r6, .L481
4761:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 4997              		.loc 1 4761 0
 4998 00de 0123     		movs	r3, #1
 4999 00e0 3360     		str	r3, [r6]
 5000              	.L476:
 5001              	.LVL410:
 5002              	.LBB203:
 5003              	.LBB204:
 5004              		.loc 2 229 0
 5005              		.syntax unified
 5006              	@ 229 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 5007 00e2 88F31188 			msr basepri, r8	
 5008              	@ 0 "" 2
 5009              	.LVL411:
 5010              		.thumb
 5011              		.syntax unified
 5012              	.LBE204:
 5013              	.LBE203:
4780:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5014              		.loc 1 4780 0
ARM GAS  /tmp/ccOm33QJ.s 			page 189


 5015 00e6 2846     		mov	r0, r5
 5016 00e8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5017              	.LVL412:
 5018              	.L479:
4752:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 5019              		.loc 1 4752 0
 5020 00ec 04F11801 		add	r1, r4, #24
 5021 00f0 0748     		ldr	r0, .L486+16
 5022 00f2 FFF7FEFF 		bl	vListInsertEnd
 5023              	.LVL413:
 5024 00f6 EBE7     		b	.L480
 5025              	.L481:
4768:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 5026              		.loc 1 4768 0
 5027 00f8 0122     		movs	r2, #1
 5028 00fa 064B     		ldr	r3, .L486+20
 5029 00fc 1A60     		str	r2, [r3]
 5030 00fe F0E7     		b	.L476
 5031              	.L487:
 5032              		.align	2
 5033              	.L486:
 5034 0100 00000000 		.word	.LANCHOR16
 5035 0104 00000000 		.word	.LANCHOR13
 5036 0108 00000000 		.word	.LANCHOR4
 5037 010c 00000000 		.word	.LANCHOR10
 5038 0110 00000000 		.word	.LANCHOR1
 5039 0114 00000000 		.word	.LANCHOR19
 5040              		.cfi_endproc
 5041              	.LFE51:
 5043              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5044              		.align	1
 5045              		.global	vTaskNotifyGiveFromISR
 5046              		.syntax unified
 5047              		.thumb
 5048              		.thumb_func
 5049              		.fpu fpv4-sp-d16
 5051              	vTaskNotifyGiveFromISR:
 5052              	.LFB52:
4788:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t * pxTCB;
 5053              		.loc 1 4788 0
 5054              		.cfi_startproc
 5055              		@ args = 0, pretend = 0, frame = 0
 5056              		@ frame_needed = 0, uses_anonymous_args = 0
 5057              	.LVL414:
 5058 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5059              	.LCFI51:
 5060              		.cfi_def_cfa_offset 24
 5061              		.cfi_offset 3, -24
 5062              		.cfi_offset 4, -20
 5063              		.cfi_offset 5, -16
 5064              		.cfi_offset 6, -12
 5065              		.cfi_offset 7, -8
 5066              		.cfi_offset 14, -4
4793:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5067              		.loc 1 4793 0
 5068 0002 18B3     		cbz	r0, .L498
 5069 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccOm33QJ.s 			page 190


 5070 0006 0D46     		mov	r5, r1
4811:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5071              		.loc 1 4811 0
 5072 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5073              	.LVL415:
 5074              	.LBB205:
 5075              	.LBB206:
 211:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 5076              		.loc 2 211 0
 5077              		.syntax unified
 5078              	@ 211 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 5079 000c EFF31187 			mrs r7, basepri											
 5080 0010 4FF05003 		mov r3, #80												
 5081 0014 83F31188 		msr basepri, r3											
 5082 0018 BFF36F8F 		isb														
 5083 001c BFF34F8F 		dsb														
 5084              	
 5085              	@ 0 "" 2
 5086              		.thumb
 5087              		.syntax unified
 5088              	.LBE206:
 5089              	.LBE205:
4817:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5090              		.loc 1 4817 0
 5091 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5092 0024 DBB2     		uxtb	r3, r3
 5093              	.LVL416:
4818:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5094              		.loc 1 4818 0
 5095 0026 0222     		movs	r2, #2
 5096 0028 84F85020 		strb	r2, [r4, #80]
4822:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5097              		.loc 1 4822 0
 5098 002c E26C     		ldr	r2, [r4, #76]
 5099 002e 0132     		adds	r2, r2, #1
 5100 0030 E264     		str	r2, [r4, #76]
4828:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 5101              		.loc 1 4828 0
 5102 0032 012B     		cmp	r3, #1
 5103 0034 32D1     		bne	.L491
4831:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5104              		.loc 1 4831 0
 5105 0036 A36A     		ldr	r3, [r4, #40]
 5106              	.LVL417:
 5107 0038 8BB1     		cbz	r3, .L492
 5108              	.LBB207:
 5109              	.LBB208:
 195:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portmacro.h **** 	(
 5110              		.loc 2 195 0
 5111              		.syntax unified
 5112              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 5113 003a 4FF05003 			mov r3, #80												
 5114 003e 83F31188 		msr basepri, r3											
 5115 0042 BFF36F8F 		isb														
 5116 0046 BFF34F8F 		dsb														
 5117              	
 5118              	@ 0 "" 2
ARM GAS  /tmp/ccOm33QJ.s 			page 191


 5119              	.LVL418:
 5120              		.thumb
 5121              		.syntax unified
 5122              	.L493:
 5123 004a FEE7     		b	.L493
 5124              	.LVL419:
 5125              	.L498:
 5126              	.LBE208:
 5127              	.LBE207:
 5128              	.LBB209:
 5129              	.LBB210:
 5130              		.syntax unified
 5131              	@ 195 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 5132 004c 4FF05003 			mov r3, #80												
 5133 0050 83F31188 		msr basepri, r3											
 5134 0054 BFF36F8F 		isb														
 5135 0058 BFF34F8F 		dsb														
 5136              	
 5137              	@ 0 "" 2
 5138              	.LVL420:
 5139              		.thumb
 5140              		.syntax unified
 5141              	.L490:
 5142 005c FEE7     		b	.L490
 5143              	.LVL421:
 5144              	.L492:
 5145              	.LBE210:
 5146              	.LBE209:
4833:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
 5147              		.loc 1 4833 0
 5148 005e 164B     		ldr	r3, .L499
 5149 0060 1B68     		ldr	r3, [r3]
 5150 0062 F3B9     		cbnz	r3, .L494
4835:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5151              		.loc 1 4835 0
 5152 0064 261D     		adds	r6, r4, #4
 5153 0066 3046     		mov	r0, r6
 5154 0068 FFF7FEFF 		bl	uxListRemove
 5155              	.LVL422:
4836:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 5156              		.loc 1 4836 0
 5157 006c E36A     		ldr	r3, [r4, #44]
 5158 006e 0122     		movs	r2, #1
 5159 0070 9A40     		lsls	r2, r2, r3
 5160 0072 1249     		ldr	r1, .L499+4
 5161 0074 0868     		ldr	r0, [r1]
 5162 0076 0243     		orrs	r2, r2, r0
 5163 0078 0A60     		str	r2, [r1]
 5164 007a 03EB8303 		add	r3, r3, r3, lsl #2
 5165 007e 9A00     		lsls	r2, r3, #2
 5166 0080 3146     		mov	r1, r6
 5167 0082 0F48     		ldr	r0, .L499+8
 5168 0084 1044     		add	r0, r0, r2
 5169 0086 FFF7FEFF 		bl	vListInsertEnd
 5170              	.LVL423:
 5171              	.L495:
4845:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				{
ARM GAS  /tmp/ccOm33QJ.s 			page 192


 5172              		.loc 1 4845 0
 5173 008a E26A     		ldr	r2, [r4, #44]
 5174 008c 0D4B     		ldr	r3, .L499+12
 5175 008e 1B68     		ldr	r3, [r3]
 5176 0090 DB6A     		ldr	r3, [r3, #44]
 5177 0092 9A42     		cmp	r2, r3
 5178 0094 02D9     		bls	.L491
4849:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					{
 5179              		.loc 1 4849 0
 5180 0096 55B1     		cbz	r5, .L496
4851:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 5181              		.loc 1 4851 0
 5182 0098 0123     		movs	r3, #1
 5183 009a 2B60     		str	r3, [r5]
 5184              	.L491:
 5185              	.LVL424:
 5186              	.LBB211:
 5187              	.LBB212:
 5188              		.loc 2 229 0
 5189              		.syntax unified
 5190              	@ 229 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/portable/gcc/arm_cm4f/portm
 5191 009c 87F31188 			msr basepri, r7	
 5192              	@ 0 "" 2
 5193              	.LVL425:
 5194              		.thumb
 5195              		.syntax unified
 5196 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5197              	.LVL426:
 5198              	.L494:
 5199              	.LBE212:
 5200              	.LBE211:
4842:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				}
 5201              		.loc 1 4842 0
 5202 00a2 04F11801 		add	r1, r4, #24
 5203 00a6 0848     		ldr	r0, .L499+16
 5204 00a8 FFF7FEFF 		bl	vListInsertEnd
 5205              	.LVL427:
 5206 00ac EDE7     		b	.L495
 5207              	.L496:
4858:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 					}
 5208              		.loc 1 4858 0
 5209 00ae 0122     		movs	r2, #1
 5210 00b0 064B     		ldr	r3, .L499+20
 5211 00b2 1A60     		str	r2, [r3]
 5212 00b4 F2E7     		b	.L491
 5213              	.L500:
 5214 00b6 00BF     		.align	2
 5215              	.L499:
 5216 00b8 00000000 		.word	.LANCHOR16
 5217 00bc 00000000 		.word	.LANCHOR13
 5218 00c0 00000000 		.word	.LANCHOR4
 5219 00c4 00000000 		.word	.LANCHOR10
 5220 00c8 00000000 		.word	.LANCHOR1
 5221 00cc 00000000 		.word	.LANCHOR19
 5222              		.cfi_endproc
 5223              	.LFE52:
 5225              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
ARM GAS  /tmp/ccOm33QJ.s 			page 193


 5226              		.align	1
 5227              		.global	xTaskNotifyStateClear
 5228              		.syntax unified
 5229              		.thumb
 5230              		.thumb_func
 5231              		.fpu fpv4-sp-d16
 5233              	xTaskNotifyStateClear:
 5234              	.LFB53:
4877:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 	TCB_t *pxTCB;
 5235              		.loc 1 4877 0
 5236              		.cfi_startproc
 5237              		@ args = 0, pretend = 0, frame = 0
 5238              		@ frame_needed = 0, uses_anonymous_args = 0
 5239              	.LVL428:
 5240 0000 10B5     		push	{r4, lr}
 5241              	.LCFI52:
 5242              		.cfi_def_cfa_offset 8
 5243              		.cfi_offset 4, -8
 5244              		.cfi_offset 14, -4
4883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5245              		.loc 1 4883 0
 5246 0002 0446     		mov	r4, r0
 5247 0004 58B1     		cbz	r0, .L507
 5248              	.L502:
 5249              	.LVL429:
4885:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 		{
 5250              		.loc 1 4885 0 discriminator 4
 5251 0006 FFF7FEFF 		bl	vPortEnterCritical
 5252              	.LVL430:
4887:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			{
 5253              		.loc 1 4887 0 discriminator 4
 5254 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5255 000e DBB2     		uxtb	r3, r3
 5256 0010 022B     		cmp	r3, #2
 5257 0012 07D0     		beq	.L508
4894:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 5258              		.loc 1 4894 0
 5259 0014 0024     		movs	r4, #0
 5260              	.LVL431:
 5261              	.L503:
4897:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5262              		.loc 1 4897 0
 5263 0016 FFF7FEFF 		bl	vPortExitCritical
 5264              	.LVL432:
4900:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5265              		.loc 1 4900 0
 5266 001a 2046     		mov	r0, r4
 5267 001c 10BD     		pop	{r4, pc}
 5268              	.LVL433:
 5269              	.L507:
4883:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 
 5270              		.loc 1 4883 0 discriminator 1
 5271 001e 044B     		ldr	r3, .L509
 5272 0020 1C68     		ldr	r4, [r3]
 5273 0022 F0E7     		b	.L502
 5274              	.LVL434:
 5275              	.L508:
ARM GAS  /tmp/ccOm33QJ.s 			page 194


4889:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 				xReturn = pdPASS;
 5276              		.loc 1 4889 0
 5277 0024 0023     		movs	r3, #0
 5278 0026 84F85030 		strb	r3, [r4, #80]
 5279              	.LVL435:
4890:/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/tasks.c **** 			}
 5280              		.loc 1 4890 0
 5281 002a 0124     		movs	r4, #1
 5282              	.LVL436:
 5283 002c F3E7     		b	.L503
 5284              	.L510:
 5285 002e 00BF     		.align	2
 5286              	.L509:
 5287 0030 00000000 		.word	.LANCHOR10
 5288              		.cfi_endproc
 5289              	.LFE53:
 5291              		.global	pxCurrentTCB
 5292              		.section	.bss.pxCurrentTCB,"aw",%nobits
 5293              		.align	2
 5294              		.set	.LANCHOR10,. + 0
 5297              	pxCurrentTCB:
 5298 0000 00000000 		.space	4
 5299              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 5300              		.align	2
 5301              		.set	.LANCHOR2,. + 0
 5304              	pxDelayedTaskList:
 5305 0000 00000000 		.space	4
 5306              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 5307              		.align	2
 5308              		.set	.LANCHOR8,. + 0
 5311              	pxOverflowDelayedTaskList:
 5312 0000 00000000 		.space	4
 5313              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 5314              		.align	2
 5315              		.set	.LANCHOR4,. + 0
 5318              	pxReadyTasksLists:
 5319 0000 00000000 		.space	140
 5319      00000000 
 5319      00000000 
 5319      00000000 
 5319      00000000 
 5320              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 5321              		.align	2
 5322              		.set	.LANCHOR9,. + 0
 5325              	uxCurrentNumberOfTasks:
 5326 0000 00000000 		.space	4
 5327              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 5328              		.align	2
 5329              		.set	.LANCHOR14,. + 0
 5332              	uxDeletedTasksWaitingCleanUp:
 5333 0000 00000000 		.space	4
 5334              		.section	.bss.uxPendedTicks,"aw",%nobits
 5335              		.align	2
 5336              		.set	.LANCHOR18,. + 0
 5339              	uxPendedTicks:
 5340 0000 00000000 		.space	4
 5341              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
ARM GAS  /tmp/ccOm33QJ.s 			page 195


 5342              		.align	2
 5343              		.set	.LANCHOR16,. + 0
 5346              	uxSchedulerSuspended:
 5347 0000 00000000 		.space	4
 5348              		.section	.bss.uxTaskNumber,"aw",%nobits
 5349              		.align	2
 5350              		.set	.LANCHOR12,. + 0
 5353              	uxTaskNumber:
 5354 0000 00000000 		.space	4
 5355              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 5356              		.align	2
 5357              		.set	.LANCHOR13,. + 0
 5360              	uxTopReadyPriority:
 5361 0000 00000000 		.space	4
 5362              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 5363              		.align	2
 5364              		.set	.LANCHOR5,. + 0
 5367              	xDelayedTaskList1:
 5368 0000 00000000 		.space	20
 5368      00000000 
 5368      00000000 
 5368      00000000 
 5368      00000000 
 5369              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 5370              		.align	2
 5371              		.set	.LANCHOR6,. + 0
 5374              	xDelayedTaskList2:
 5375 0000 00000000 		.space	20
 5375      00000000 
 5375      00000000 
 5375      00000000 
 5375      00000000 
 5376              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 5377              		.align	2
 5378              		.set	.LANCHOR3,. + 0
 5381              	xNextTaskUnblockTime:
 5382 0000 00000000 		.space	4
 5383              		.section	.bss.xNumOfOverflows,"aw",%nobits
 5384              		.align	2
 5385              		.set	.LANCHOR17,. + 0
 5388              	xNumOfOverflows:
 5389 0000 00000000 		.space	4
 5390              		.section	.bss.xPendingReadyList,"aw",%nobits
 5391              		.align	2
 5392              		.set	.LANCHOR1,. + 0
 5395              	xPendingReadyList:
 5396 0000 00000000 		.space	20
 5396      00000000 
 5396      00000000 
 5396      00000000 
 5396      00000000 
 5397              		.section	.bss.xSchedulerRunning,"aw",%nobits
 5398              		.align	2
 5399              		.set	.LANCHOR11,. + 0
 5402              	xSchedulerRunning:
 5403 0000 00000000 		.space	4
 5404              		.section	.bss.xSuspendedTaskList,"aw",%nobits
ARM GAS  /tmp/ccOm33QJ.s 			page 196


 5405              		.align	2
 5406              		.set	.LANCHOR0,. + 0
 5409              	xSuspendedTaskList:
 5410 0000 00000000 		.space	20
 5410      00000000 
 5410      00000000 
 5410      00000000 
 5410      00000000 
 5411              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 5412              		.align	2
 5413              		.set	.LANCHOR7,. + 0
 5416              	xTasksWaitingTermination:
 5417 0000 00000000 		.space	20
 5417      00000000 
 5417      00000000 
 5417      00000000 
 5417      00000000 
 5418              		.section	.bss.xTickCount,"aw",%nobits
 5419              		.align	2
 5420              		.set	.LANCHOR15,. + 0
 5423              	xTickCount:
 5424 0000 00000000 		.space	4
 5425              		.section	.bss.xYieldPending,"aw",%nobits
 5426              		.align	2
 5427              		.set	.LANCHOR19,. + 0
 5430              	xYieldPending:
 5431 0000 00000000 		.space	4
 5432              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 5433              		.align	2
 5434              	.LC0:
 5435 0000 49444C45 		.ascii	"IDLE\000"
 5435      00
 5436              		.text
 5437              	.Letext0:
 5438              		.file 3 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 5439              		.file 4 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/newlib/include/machine/_default_t
 5440              		.file 5 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/newlib/include/sys/lock.h"
 5441              		.file 6 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/newlib/include/sys/_types.h"
 5442              		.file 7 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/newlib/include/sys/reent.h"
 5443              		.file 8 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/newlib/include/stdlib.h"
 5444              		.file 9 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/newlib/include/sys/_stdint.h"
 5445              		.file 10 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/include/freertos/FreeRT
 5446              		.file 11 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/include/freertos/projde
 5447              		.file 12 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/include/freertos/FreeRT
 5448              		.file 13 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/include/freertos/list.h
 5449              		.file 14 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/include/freertos/task.h
 5450              		.file 15 "/home/phong/Documents/thesis/stm32f4/stm-idf/components/freertos/include/freertos/portab
ARM GAS  /tmp/ccOm33QJ.s 			page 197


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccOm33QJ.s:18     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccOm33QJ.s:24     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccOm33QJ.s:104    .text.prvTaskIsTaskSuspended:0000000000000044 $d
     /tmp/ccOm33QJ.s:110    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccOm33QJ.s:116    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccOm33QJ.s:157    .text.prvResetNextTaskUnblockTime:000000000000002c $d
     /tmp/ccOm33QJ.s:163    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccOm33QJ.s:169    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccOm33QJ.s:277    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccOm33QJ.s:283    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccOm33QJ.s:349    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/ccOm33QJ.s:361    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccOm33QJ.s:367    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccOm33QJ.s:473    .text.prvAddNewTaskToReadyList:000000000000008c $d
     /tmp/ccOm33QJ.s:484    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/ccOm33QJ.s:490    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/ccOm33QJ.s:554    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/ccOm33QJ.s:560    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/ccOm33QJ.s:627    .text.prvCheckTasksWaitingTermination:0000000000000040 $d
     /tmp/ccOm33QJ.s:634    .text.prvIdleTask:0000000000000000 $t
     /tmp/ccOm33QJ.s:640    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccOm33QJ.s:680    .text.prvIdleTask:0000000000000020 $d
     /tmp/ccOm33QJ.s:686    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccOm33QJ.s:692    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccOm33QJ.s:791    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/ccOm33QJ.s:802    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/ccOm33QJ.s:809    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/ccOm33QJ.s:929    .text.xTaskCreate:0000000000000000 $t
     /tmp/ccOm33QJ.s:936    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccOm33QJ.s:1043   .text.vTaskDelete:0000000000000000 $t
     /tmp/ccOm33QJ.s:1050   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccOm33QJ.s:1201   .text.vTaskDelete:00000000000000b8 $d
     /tmp/ccOm33QJ.s:1215   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccOm33QJ.s:1222   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccOm33QJ.s:1261   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/ccOm33QJ.s:1266   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccOm33QJ.s:1273   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccOm33QJ.s:1336   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/ccOm33QJ.s:1341   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccOm33QJ.s:1348   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccOm33QJ.s:1537   .text.vTaskPrioritySet:00000000000000d8 $d
     /tmp/ccOm33QJ.s:1545   .text.vTaskResume:0000000000000000 $t
     /tmp/ccOm33QJ.s:1552   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccOm33QJ.s:1655   .text.vTaskResume:0000000000000078 $d
     /tmp/ccOm33QJ.s:1663   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccOm33QJ.s:1670   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccOm33QJ.s:1807   .text.xTaskResumeFromISR:0000000000000094 $d
     /tmp/ccOm33QJ.s:1816   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccOm33QJ.s:1823   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccOm33QJ.s:1924   .text.vTaskStartScheduler:0000000000000064 $d
     /tmp/ccOm33QJ.s:1933   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccOm33QJ.s:1940   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccOm33QJ.s:1977   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/ccOm33QJ.s:1982   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccOm33QJ.s:1989   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
ARM GAS  /tmp/ccOm33QJ.s 			page 198


     /tmp/ccOm33QJ.s:2005   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccOm33QJ.s:2010   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccOm33QJ.s:2017   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccOm33QJ.s:2033   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccOm33QJ.s:2038   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccOm33QJ.s:2045   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccOm33QJ.s:2068   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/ccOm33QJ.s:2073   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccOm33QJ.s:2080   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccOm33QJ.s:2095   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccOm33QJ.s:2100   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccOm33QJ.s:2107   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccOm33QJ.s:2153   .text.pcTaskGetName:0000000000000020 $d
     /tmp/ccOm33QJ.s:2160   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccOm33QJ.s:2167   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccOm33QJ.s:2376   .text.xTaskIncrementTick:00000000000000f4 $d
     /tmp/ccOm33QJ.s:2391   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccOm33QJ.s:2398   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccOm33QJ.s:2587   .text.xTaskResumeAll:00000000000000d8 $d
     /tmp/ccOm33QJ.s:2600   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccOm33QJ.s:2607   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccOm33QJ.s:2684   .text.vTaskDelay:0000000000000048 $d
     /tmp/ccOm33QJ.s:2690   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccOm33QJ.s:2697   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccOm33QJ.s:2825   .text.vTaskSwitchContext:0000000000000088 $d
     /tmp/ccOm33QJ.s:2836   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccOm33QJ.s:2843   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccOm33QJ.s:3010   .text.vTaskSuspend:00000000000000cc $d
     /tmp/ccOm33QJ.s:3022   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccOm33QJ.s:3029   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccOm33QJ.s:3081   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/ccOm33QJ.s:3086   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccOm33QJ.s:3093   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccOm33QJ.s:3180   .text.vTaskPlaceOnUnorderedEventList:0000000000000054 $d
     /tmp/ccOm33QJ.s:3186   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccOm33QJ.s:3193   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccOm33QJ.s:3295   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/ccOm33QJ.s:3305   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccOm33QJ.s:3312   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccOm33QJ.s:3415   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/ccOm33QJ.s:3426   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccOm33QJ.s:3433   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccOm33QJ.s:3487   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/ccOm33QJ.s:3493   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccOm33QJ.s:3500   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccOm33QJ.s:3520   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/ccOm33QJ.s:3526   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccOm33QJ.s:3533   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccOm33QJ.s:3667   .text.xTaskCheckForTimeOut:0000000000000078 $d
     /tmp/ccOm33QJ.s:3674   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccOm33QJ.s:3681   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccOm33QJ.s:3696   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccOm33QJ.s:3701   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccOm33QJ.s:3708   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccOm33QJ.s:3724   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccOm33QJ.s:3729   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccOm33QJ.s:3736   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
ARM GAS  /tmp/ccOm33QJ.s 			page 199


     /tmp/ccOm33QJ.s:3767   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/ccOm33QJ.s:3773   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccOm33QJ.s:3780   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccOm33QJ.s:3922   .text.xTaskPriorityInherit:00000000000000b4 $d
     /tmp/ccOm33QJ.s:3929   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccOm33QJ.s:3936   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccOm33QJ.s:4088   .text.xTaskPriorityDisinherit:00000000000000a8 $d
     /tmp/ccOm33QJ.s:4095   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccOm33QJ.s:4102   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccOm33QJ.s:4270   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000c0 $d
     /tmp/ccOm33QJ.s:4277   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccOm33QJ.s:4284   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccOm33QJ.s:4307   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/ccOm33QJ.s:4312   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccOm33QJ.s:4319   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccOm33QJ.s:4345   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/ccOm33QJ.s:4350   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccOm33QJ.s:4357   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccOm33QJ.s:4453   .text.ulTaskNotifyTake:0000000000000070 $d
     /tmp/ccOm33QJ.s:4459   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccOm33QJ.s:4466   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccOm33QJ.s:4582   .text.xTaskNotifyWait:0000000000000090 $d
     /tmp/ccOm33QJ.s:4588   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccOm33QJ.s:4595   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccOm33QJ.s:4641   .text.xTaskGenericNotify:000000000000002c $d
     /tmp/ccOm33QJ.s:4646   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/ccOm33QJ.s:4787   .text.xTaskGenericNotify:00000000000000d0 $d
     /tmp/ccOm33QJ.s:4795   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccOm33QJ.s:4802   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccOm33QJ.s:4867   .text.xTaskGenericNotifyFromISR:000000000000004a $d
     /tmp/ccOm33QJ.s:4872   .text.xTaskGenericNotifyFromISR:000000000000004e $t
     /tmp/ccOm33QJ.s:5034   .text.xTaskGenericNotifyFromISR:0000000000000100 $d
     /tmp/ccOm33QJ.s:5044   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccOm33QJ.s:5051   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccOm33QJ.s:5216   .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/ccOm33QJ.s:5226   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccOm33QJ.s:5233   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccOm33QJ.s:5287   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/ccOm33QJ.s:5297   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccOm33QJ.s:5293   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccOm33QJ.s:5300   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccOm33QJ.s:5304   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccOm33QJ.s:5307   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccOm33QJ.s:5311   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccOm33QJ.s:5314   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccOm33QJ.s:5318   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccOm33QJ.s:5321   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccOm33QJ.s:5325   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccOm33QJ.s:5328   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccOm33QJ.s:5332   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccOm33QJ.s:5335   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccOm33QJ.s:5339   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccOm33QJ.s:5342   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccOm33QJ.s:5346   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccOm33QJ.s:5349   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccOm33QJ.s:5353   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccOm33QJ.s:5356   .bss.uxTopReadyPriority:0000000000000000 $d
ARM GAS  /tmp/ccOm33QJ.s 			page 200


     /tmp/ccOm33QJ.s:5360   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccOm33QJ.s:5363   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccOm33QJ.s:5367   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccOm33QJ.s:5370   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccOm33QJ.s:5374   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccOm33QJ.s:5377   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccOm33QJ.s:5381   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccOm33QJ.s:5384   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccOm33QJ.s:5388   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccOm33QJ.s:5391   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccOm33QJ.s:5395   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccOm33QJ.s:5398   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccOm33QJ.s:5402   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccOm33QJ.s:5405   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccOm33QJ.s:5409   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccOm33QJ.s:5412   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccOm33QJ.s:5416   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccOm33QJ.s:5419   .bss.xTickCount:0000000000000000 $d
     /tmp/ccOm33QJ.s:5423   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccOm33QJ.s:5426   .bss.xYieldPending:0000000000000000 $d
     /tmp/ccOm33QJ.s:5430   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccOm33QJ.s:5433   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
